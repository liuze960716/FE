(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{167:function(t,s,n){"use strict";n.r(s);var a={mounted:function(){var t=document.createElement("script");t.type="text/javascript",t.charset="UTF-8",t.src="http://tajs.qq.com/stats?sId=59154049",document.body.appendChild(t)}},e=n(0),r=Object(e.a)(a,function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),n("blockquote",[n("p",[n("a",{attrs:{href:"https://upload-images.jianshu.io/upload_images/1480597-1f247397539045cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",target:"_blank",rel:"noopener noreferrer"}},[t._v("如果您觉得有帮助，可以\b打赏我"),n("OutboundLink")],1),t._v(" "),n("img",{attrs:{src:"!%5B%5D(https://upload-images.jianshu.io/upload_images/1480597-1f247397539045cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)",alt:""}})])]),t._v(" "),n("blockquote",[n("p",[n("a",{attrs:{href:"https://upload-images.jianshu.io/upload_images/1480597-933c7247ddac5ed4.png",target:"_blank",rel:"noopener noreferrer"}},[t._v("关注微信公众号获取更多面试题：@静观流叶"),n("OutboundLink")],1),t._v(" "),n("img",{attrs:{src:"!%5B%5D(https://upload-images.jianshu.io/upload_images/1480597-933c7247ddac5ed4.png)",alt:""}})])]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._m(6),t._v(" "),t._m(7),t._m(8),t._v(" "),t._m(9),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28),t._m(29),t._v(" "),t._m(30),t._m(31),t._v(" "),t._m(32),t._v(" "),t._m(33),t._m(34),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),t._m(37),t._m(38),t._v(" "),t._m(39),t._v(" "),t._m(40),t._m(41),t._v(" "),t._m(42),t._m(43),t._v(" "),t._m(44),t._m(45),t._v(" "),t._m(46),t._m(47),t._v(" "),t._m(48),t._v(" "),t._m(49),t._v(" "),t._m(50),t._v(" "),t._m(51),t._v(" "),t._m(52),t._v(" "),t._m(53),t._v(" "),t._m(54),t._m(55),t._v(" "),t._m(56),t._m(57),t._v(" "),t._m(58),t._m(59),t._v(" "),t._m(60),t._v(" "),t._m(61),t._v(" "),t._m(62),t._v(" "),t._m(63),t._m(64),t._v(" "),t._m(65),t._v(" "),t._m(66),t._m(67),t._v(" "),t._m(68),t._v(" "),t._m(69),t._v(" "),t._m(70),t._m(71),t._v(" "),t._m(72),t._v(" "),t._m(73),t._m(74),t._v(" "),t._m(75),t._m(76),t._v(" "),t._m(77),t._v(" "),t._m(78),t._v(" "),t._m(79),t._m(80),t._v(" "),t._m(81),t._m(82),t._v(" "),t._m(83),t._m(84),t._v(" "),t._m(85),t._v(" "),t._m(86),t._v(" "),t._m(87),t._m(88),t._v(" "),t._m(89),t._v(" "),t._m(90),t._m(91),t._v(" "),t._m(92),t._v(" "),t._m(93),t._v(" "),t._m(94),t._v(" "),t._m(95),t._v(" "),t._m(96),t._v(" "),t._m(97),t._v(" "),t._m(98),t._v(" "),t._m(99),t._v(" "),t._m(100),t._v(" "),t._m(101),t._v(" "),t._m(102),t._m(103),t._v(" "),t._m(104),t._v(" "),t._m(105),t._m(106),t._v(" "),t._m(107),t._v(" "),t._m(108),t._v(" "),t._m(109),t._v(" "),t._m(110),t._m(111),t._v(" "),t._m(112),t._v(" "),t._m(113),t._v(" "),t._m(114),t._v(" "),t._m(115),t._m(116),t._v(" "),t._m(117),t._v(" "),t._m(118),t._v(" "),n("p",[t._v("使用一个技术肯定是有原因的，那么使用模块化可以给我们带来以下好处")]),t._v(" "),t._m(119),t._v(" "),t._m(120),t._v(" "),t._m(121),t._v(" "),t._m(122),t._m(123),t._v(" "),t._m(124),t._v(" "),t._m(125),t._m(126),t._v(" "),t._m(127),t._v(" "),t._m(128),t._m(129),t._m(130),t._v(" "),t._m(131),t._v(" "),t._m(132),t._v(" "),t._m(133),t._v(" "),t._m(134),t._m(135),t._v(" "),t._m(136),t._m(137),t._v(" "),t._m(138),t._v(" "),t._m(139),t._v(" "),t._m(140),t._v(" "),t._m(141),t._v(" "),t._m(142),t._v(" "),t._m(143),t._v(" "),t._m(144),t._v(" "),n("p",[t._v("可以把执行栈认为是一个存储函数调用的栈结构，遵循先进后出的原则")]),t._v(" "),t._m(145),t._v(" "),t._m(146),t._v(" "),n("p",[t._v("在开发中，大家也可以在报错中找到执行栈的痕迹")]),t._v(" "),t._m(147),t._m(148),t._v(" "),t._m(149),t._v(" "),n("p",[t._v("当我们使用递归的时候，因为栈可存放的函数是有限制的，一旦存放了过多的函数且没有得到释放的话，就会出现爆栈的问题")]),t._v(" "),t._m(150),t._m(151),t._v(" "),t._m(152),t._v(" "),t._m(153),t._v(" "),t._m(154),t._v(" "),t._m(155),t._v(" "),t._m(156),t._v(" "),t._m(157),t._m(158),t._v(" "),t._m(159),t._m(160),t._v(" "),t._m(161),t._v(" "),t._m(162),t._v(" "),t._m(163),t._v(" "),t._m(164),t._v(" "),t._m(165),t._v(" "),t._m(166),t._v(" "),t._m(167),t._v(" "),t._m(168),t._v(" "),t._m(169),t._v(" "),t._m(170),t._v(" "),t._m(171),t._m(172),t._v(" "),t._m(173),t._v(" "),t._m(174),t._v(" "),t._m(175),t._v(" "),t._m(176),t._v(" "),t._m(177),t._v(" "),t._m(178),t._v(" "),t._m(179),t._v(" "),t._m(180),t._v(" "),t._m(181),t._v(" "),t._m(182),t._m(183),t._v(" "),t._m(184),t._m(185),t._v(" "),t._m(186),t._m(187),t._v(" "),t._m(188),t._v(" "),t._m(189),t._v(" "),t._m(190),t._v(" "),t._m(191),t._v(" "),t._m(192),t._v(" "),t._m(193),t._v(" "),t._m(194),t._m(195),t._v(" "),t._m(196),t._v(" "),t._m(197),t._m(198),t._v(" "),t._m(199),t._v(" "),t._m(200),t._v(" "),t._m(201),t._m(202),t._v(" "),t._m(203),t._v(" "),t._m(204),t._v(" "),t._m(205),t._v(" "),t._m(206),t._v(" "),t._m(207),t._v(" "),t._m(208),t._m(209),t._v(" "),t._m(210),t._m(211),t._v(" "),t._m(212),t._v(" "),t._m(213),t._v(" "),t._m(214),t._v(" "),t._m(215),t._v(" "),t._m(216),t._m(217),t._v(" "),t._m(218),t._v(" "),t._m(219),t._v(" "),t._m(220),t._v(" "),t._m(221),t._m(222),t._v(" "),t._m(223),t._v(" "),t._m(224),t._v(" "),t._m(225),t._v(" "),t._m(226),t._m(227),t._v(" "),t._m(228),t._m(229),t._v(" "),t._m(230),t._m(231),t._v(" "),t._m(232),t._v(" "),t._m(233),t._m(234),t._v(" "),t._m(235),t._m(236),t._v(" "),t._m(237),t._v(" "),t._m(238),t._v(" "),t._m(239),t._v(" "),t._m(240),t._v(" "),t._m(241),t._v(" "),t._m(242),t._m(243),t._v(" "),t._m(244),t._v(" "),t._m(245),t._v(" "),t._m(246),t._v(" "),t._m(247),t._m(248),t._v(" "),t._m(249),t._v(" "),t._m(250),t._m(251),t._v(" "),t._m(252),t._v(" "),t._m(253),t._v(" "),t._m(254),t._v(" "),t._m(255),t._v(" "),t._m(256),t._v(" "),n("p",[t._v("接下来我们将来学习几种常见的方式来解决跨域的问题")]),t._v(" "),t._m(257),t._v(" "),t._m(258),t._v(" "),t._m(259),t._m(260),t._v(" "),t._m(261),t._v(" "),t._m(262),t._m(263),t._v(" "),t._m(264),t._v(" "),t._m(265),t._v(" "),t._m(266),t._v(" "),t._m(267),t._v(" "),t._m(268),t._v(" "),t._m(269),t._v(" "),t._m(270),t._v(" "),t._m(271),t._v(" "),t._m(272),t._v(" "),t._m(273),t._v(" "),t._m(274),t._v(" "),t._m(275),t._v(" "),t._m(276),t._m(277),t._v(" "),t._m(278),t._v(" "),t._m(279),t._m(280),t._v(" "),t._m(281),t._v(" "),t._m(282),t._v(" "),t._m(283),t._v(" "),t._m(284),t._m(285),t._v(" "),t._m(286),t._v(" "),t._m(287),t._v(" "),t._m(288),t._v(" "),t._m(289),t._v(" "),t._m(290),t._v(" "),t._m(291),t._v(" "),t._m(292),t._v(" "),t._m(293),t._v(" "),t._m(294),t._m(295),t._v(" "),t._m(296),t._v(" "),t._m(297),t._v(" "),t._m(298),t._v(" "),t._m(299),t._v(" "),t._m(300),t._v(" "),t._m(301),t._v(" "),t._m(302),t._v(" "),t._m(303),t._v(" "),t._m(304),t._v(" "),t._m(305),t._v(" "),t._m(306),t._v(" "),t._m(307),t._v(" "),t._m(308),t._v(" "),t._m(309),t._v(" "),t._m(310),t._v(" "),t._m(311),t._v(" "),t._m(312),t._v(" "),t._m(313),t._v(" "),t._m(314),t._v(" "),t._m(315),t._v(" "),t._m(316),t._v(" "),t._m(317),t._v(" "),t._m(318),t._v(" "),t._m(319),t._v(" "),t._m(320),t._v(" "),t._m(321),t._v(" "),t._m(322),t._v(" "),t._m(323),t._v(" "),t._m(324),t._v(" "),t._m(325),t._v(" "),t._m(326),t._v(" "),t._m(327),t._v(" "),t._m(328),t._v(" "),t._m(329),t._m(330),t._v(" "),t._m(331),t._v(" "),t._m(332),t._m(333),t._v(" "),t._m(334),t._v(" "),t._m(335),t._v(" "),t._m(336),t._v(" "),t._m(337),t._v(" "),t._m(338),t._v(" "),t._m(339),t._v(" "),t._m(340),t._v(" "),t._m(341),t._v(" "),t._m(342),t._v(" "),t._m(343),t._v(" "),t._m(344),t._v(" "),t._m(345),t._v(" "),t._m(346),t._v(" "),t._m(347),t._v(" "),t._m(348),t._v(" "),t._m(349),t._v(" "),t._m(350),t._v(" "),t._m(351),t._v(" "),t._m(352),t._v(" "),t._m(353),t._v(" "),t._m(354),t._v(" "),t._m(355),t._v(" "),t._m(356),t._v(" "),t._m(357),t._v(" "),t._m(358),t._v(" "),t._m(359),t._v(" "),t._m(360),t._v(" "),t._m(361),t._v(" "),t._m(362),t._v(" "),t._m(363),t._v(" "),t._m(364),t._v(" "),t._m(365),t._v(" "),t._m(366),t._v(" "),t._m(367),t._v(" "),t._m(368),t._v(" "),t._m(369),t._v(" "),t._m(370),t._v(" "),t._m(371),t._v(" "),t._m(372),t._v(" "),t._m(373),t._v(" "),t._m(374),t._v(" "),n("p",[t._v("如果你有点不理解为什么会消耗资源的话，我这里举个例子")]),t._v(" "),t._m(375),t._m(376),t._v(" "),t._m(377),t._v(" "),t._m(378),t._v(" "),t._m(379),t._v(" "),t._m(380),t._v(" "),t._m(381),t._v(" "),t._m(382),t._v(" "),t._m(383),t._v(" "),t._m(384),t._v(" "),t._m(385),t._v(" "),t._m(386),t._v(" "),t._m(387),t._v(" "),t._m(388),t._v(" "),t._m(389),t._v(" "),t._m(390),t._v(" "),t._m(391),t._v(" "),t._m(392),t._v(" "),t._m(393),t._v(" "),t._m(394),t._v(" "),t._m(395),t._v(" "),t._m(396),t._v(" "),t._m(397),t._v(" "),t._m(398),t._v(" "),t._m(399),t._m(400),t._v(" "),t._m(401),t._m(402),t._v(" "),t._m(403),t._v(" "),t._m(404),t._v(" "),t._m(405),t._v(" "),t._m(406),t._v(" "),t._m(407),t._v(" "),t._m(408),t._v(" "),t._m(409),t._v(" "),t._m(410),t._v(" "),t._m(411),t._v(" "),t._m(412),t._v(" "),t._m(413),t._v(" "),t._m(414),t._m(415),t._v(" "),t._m(416),t._v(" "),t._m(417),t._v(" "),t._m(418),t._v(" "),t._m(419),t._v(" "),t._m(420),t._m(421),t._v(" "),t._m(422),t._m(423),t._v(" "),t._m(424),t._m(425),t._v(" "),t._m(426),t._v(" "),t._m(427),t._v(" "),t._m(428),t._v(" "),t._m(429),t._v(" "),t._m(430),t._v(" "),t._m(431),t._v(" "),t._m(432),t._m(433),t._v(" "),t._m(434),t._m(435),t._v(" "),t._m(436),n("blockquote",[n("p",[t._v("当然可以设置的属性远不止这些，你可以通过查阅 "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy",target:"_blank",rel:"noopener noreferrer"}},[t._v("文档"),n("OutboundLink")],1),t._v(" 的方式来学习，这里就不过多赘述其他的属性了。")])]),t._v(" "),t._m(437),t._v(" "),t._m(438),t._v(" "),t._m(439),t._v(" "),t._m(440),t._v(" "),t._m(441),t._v(" "),t._m(442),t._v(" "),t._m(443),t._m(444),t._v(" "),t._m(445),t._v(" "),t._m(446),t._v(" "),t._m(447),t._v(" "),t._m(448),t._v(" "),t._m(449),t._v(" "),t._m(450),t._v(" "),t._m(451),t._v(" "),t._m(452),t._v(" "),t._m(453),t._v(" "),t._m(454),t._v(" "),t._m(455),t._v(" "),t._m(456),t._v(" "),t._m(457),t._v(" "),t._m(458),t._v(" "),t._m(459),t._v(" "),t._m(460),t._v(" "),t._m(461),t._v(" "),t._m(462),t._v(" "),t._m(463),t._v(" "),t._m(464),t._m(465),t._v(" "),t._m(466),t._v(" "),t._m(467),t._v(" "),t._m(468),t._v(" "),t._m(469),t._v(" "),t._m(470),t._v(" "),t._m(471),t._v(" "),t._m(472),t._v(" "),t._m(473),t._v(" "),t._m(474),t._v(" "),t._m(475),t._v(" "),t._m(476),t._v(" "),n("p",[t._v("评估结束后，工具还提供了一些建议便于我们提高这个指标的分数")]),t._v(" "),t._m(477),t._v(" "),n("p",[t._v("我们只需要一条条根据建议去优化性能即可。")]),t._v(" "),t._m(478),t._v(" "),t._m(479),t._v(" "),t._m(480),t._v(" "),t._m(481),t._v(" "),t._m(482),t._v(" "),t._m(483),t._v(" "),t._m(484),t._v(" "),t._m(485),t._v(" "),t._m(486),t._v(" "),n("p",[t._v("这里需要注意一点，对于函数来说，应该尽可能避免声明嵌套函数（类也是函数），因为这样会造成函数的重复解析")]),t._v(" "),t._m(487),t._m(488),t._v(" "),t._m(489),t._v(" "),t._m(490),t._v(" "),t._m(491),t._v(" "),t._m(492),t._m(493),t._v(" "),t._m(494),t._m(495),t._v(" "),t._m(496),t._v(" "),t._m(497),t._v(" "),t._m(498),t._v(" "),t._m(499),t._m(500),t._v(" "),n("p",[t._v("其实很简单，我们只需要给函数套上括号就可以了")]),t._v(" "),t._m(501),t._v(" "),t._m(502),t._v(" "),t._m(503),t._v(" "),t._m(504),t._v(" "),t._m(505),t._v(" "),t._m(506),t._v(" "),t._m(507),t._v(" "),t._m(508),t._v(" "),t._m(509),t._v(" "),t._m(510),t._v(" "),t._m(511),t._v(" "),t._m(512),t._m(513),t._v(" "),t._m(514),t._v(" "),n("p",[t._v("理解了节流的用途，我们就来实现下这个函数")]),t._v(" "),t._m(515),t._m(516),t._v(" "),t._m(517),t._v(" "),n("p",[t._v("理解了防抖的用途，我们就来实现下这个函数")]),t._v(" "),t._m(518),t._m(519),t._v(" "),t._m(520),t._v(" "),t._m(521),t._m(522),t._v(" "),t._m(523),t._v(" "),t._m(524),t._v(" "),t._m(525),t._m(526),t._v(" "),t._m(527),t._v(" "),t._m(528),t._v(" "),t._m(529),t._v(" "),t._m(530),t._v(" "),t._m(531),t._v(" "),t._m(532),t._v(" "),t._m(533),t._v(" "),t._m(534),t._v(" "),t._m(535),t._v(" "),t._m(536),t._v(" "),t._m(537),t._v(" "),t._m(538),t._v(" "),t._m(539),t._v(" "),t._m(540),t._v(" "),t._m(541),t._m(542),t._v(" "),t._m(543),t._v(" "),t._m(544),t._m(545),t._v(" "),t._m(546),t._v(" "),t._m(547),t._v(" "),t._m(548),t._m(549),t._v(" "),t._m(550),t._v(" "),t._m(551),t._v(" "),t._m(552),t._m(553),t._v(" "),t._m(554),t._m(555),t._v(" "),t._m(556),t._v(" "),t._m(557),t._v(" "),t._m(558),t._v(" "),t._m(559),t._v(" "),t._m(560),t._v(" "),t._m(561),t._v(" "),t._m(562),t._v(" "),t._m(563),t._v(" "),t._m(564),t._v(" "),t._m(565),t._v(" "),t._m(566),t._v(" "),n("p",[t._v("比如我们希望打包两个文件")]),t._v(" "),t._m(567),t._m(568),t._v(" "),t._m(569),t._m(570),t._v(" "),t._m(571),t._m(572),t._v(" "),t._m(573),t._m(574),t._v(" "),t._m(575),t._v(" "),t._m(576),t._m(577),t._v(" "),t._m(578),t._v(" "),t._m(579),t._v(" "),t._m(580),t._v(" "),t._m(581),t._v(" "),t._m(582),t._v(" "),t._m(583),t._v(" "),t._m(584),n("p",[t._v("接下来我们将这些工具引入文件中")]),t._v(" "),t._m(585),t._m(586),t._v(" "),t._m(587),t._m(588),t._v(" "),t._m(589),t._v(" "),t._m(590),t._v(" "),t._m(591),t._m(592),t._v(" "),t._m(593),t._m(594),t._v(" "),t._m(595),t._m(596),t._v(" "),t._m(597),t._v(" "),t._m(598),t._v(" "),t._m(599),t._v(" "),t._m(600),t._m(601),t._v(" "),t._m(602),t._v(" "),t._m(603),t._v(" "),t._m(604),t._v(" "),t._m(605),t._v(" "),t._m(606),t._v(" "),t._m(607),t._v(" "),t._m(608),t._v(" "),t._m(609),t._v(" "),t._m(610),t._v(" "),t._m(611),t._v(" "),t._m(612),t._v(" "),t._m(613),t._v(" "),t._m(614),t._v(" "),t._m(615),t._v(" "),t._m(616),t._v(" "),t._m(617),t._v(" "),t._m(618),t._v(" "),t._m(619),t._m(620),t._v(" "),t._m(621),t._m(622),t._v(" "),t._m(623),t._v(" "),t._m(624),t._v(" "),t._m(625),t._v(" "),t._m(626),t._v(" "),n("p",[t._v("举个例子来说，假设页面中只有一个列表，我们对列表中的元素进行了变更")]),t._v(" "),t._m(627),t._m(628),t._v(" "),t._m(629),t._v(" "),t._m(630),t._v(" "),t._m(631),t._v(" "),t._m(632),t._v(" "),t._m(633),t._v(" "),t._m(634),t._v(" "),t._m(635),t._v(" "),t._m(636),t._v(" "),t._m(637),t._v(" "),t._m(638),t._v(" "),t._m(639),t._m(640),t._v(" "),t._m(641),t._v(" "),t._m(642),t._v(" "),t._m(643),t._v(" "),t._m(644),t._m(645),t._v(" "),t._m(646),t._m(647),t._v(" "),t._m(648),t._v(" "),t._m(649),t._v(" "),t._m(650),t._v(" "),t._m(651),t._v(" "),t._m(652),t._v(" "),t._m(653),t._v(" "),t._m(654),t._v(" "),t._m(655),t._v(" "),t._m(656),t._v(" "),t._m(657),t._v(" "),t._m(658),t._v(" "),t._m(659),t._v(" "),t._m(660),t._m(661),t._v(" "),t._m(662),t._v(" "),t._m(663),t._v(" "),t._m(664),t._v(" "),t._m(665),t._v(" "),t._m(666),t._m(667),t._v(" "),t._m(668),t._v(" "),t._m(669),t._v(" "),t._m(670),t._v(" "),t._m(671),t._m(672),t._v(" "),t._m(673),t._v(" "),t._m(674),t._m(675),t._v(" "),t._m(676),t._v(" "),t._m(677),t._v(" "),t._m(678),t._m(679),t._v(" "),t._m(680),t._v(" "),t._m(681),t._v(" "),t._m(682),t._v(" "),t._m(683),t._v(" "),t._m(684),t._v(" "),t._m(685),t._v(" "),t._m(686),t._v(" "),t._m(687),t._v(" "),t._m(688),t._v(" "),t._m(689),t._m(690),t._v(" "),t._m(691),n("ul",[n("li",[t._v("在解析如上模板代码时，遇到 "),n("code",[t._v(t._s(t.name))]),t._v(" 就会进行依赖收集。")]),t._v(" "),t._m(692)]),t._v(" "),t._m(693),t._m(694),t._v(" "),t._m(695),t._v(" "),n("p",[t._v("因为这一小节主要目的是学习响应式原理的细节，所以接下来的代码会简略的表达触发依赖收集时的操作。")]),t._v(" "),t._m(696),t._m(697),t._v(" "),t._m(698),t._v(" "),t._m(699),t._m(700),t._v(" "),n("p",[t._v("现在我们就来测试下代码的效果，只需要把所有的代码复制到浏览器中执行，就会发现页面的内容全部被替换了")]),t._v(" "),t._m(701),t._m(702),t._v(" "),t._m(703),t._v(" "),t._m(704),t._m(705),t._v(" "),t._m(706),t._m(707),t._v(" "),t._m(708),t._v(" "),t._m(709),t._v(" "),t._m(710),t._v(" "),t._m(711),t._v(" "),t._m(712),t._m(713),t._v(" "),t._m(714),t._v(" "),t._m(715),t._v(" "),t._m(716),t._v(" "),t._m(717),t._m(718),t._v(" "),t._m(719),t._v(" "),t._m(720),t._v(" "),t._m(721),t._v(" "),t._m(722),t._v(" "),t._m(723),t._v(" "),t._m(724),t._v(" "),t._m(725),t._v(" "),t._m(726),t._v(" "),t._m(727),t._v(" "),t._m(728),t._v(" "),t._m(729),t._v(" "),t._m(730),t._v(" "),t._m(731),t._v(" "),t._m(732),t._v(" "),t._m(733),t._m(734),t._v(" "),t._m(735),t._v(" "),t._m(736),t._v(" "),t._m(737),t._v(" "),t._m(738),t._m(739),t._v(" "),t._m(740),t._m(741),t._v(" "),t._m(742),t._m(743),t._v(" "),t._m(744),t._m(745),t._v(" "),t._m(746),t._v(" "),t._m(747),t._v(" "),t._m(748),t._m(749),t._v(" "),t._m(750),t._m(751),t._v(" "),t._m(752),t._v(" "),t._m(753),t._v(" "),t._m(754),t._v(" "),t._m(755),t._v(" "),t._m(756),t._v(" "),t._m(757),t._v(" "),t._m(758),t._v(" "),t._m(759),t._m(760),t._v(" "),t._m(761),t._v(" "),t._m(762),t._v(" "),t._m(763),t._v(" "),t._m(764),t._v(" "),t._m(765),t._v(" "),t._m(766),t._v(" "),t._m(767),t._v(" "),t._m(768),t._v(" "),t._m(769),t._v(" "),t._m(770),t._v(" "),t._m(771),t._v(" "),t._m(772),t._v(" "),t._m(773),t._v(" "),t._m(774),t._v(" "),t._m(775),t._v(" "),t._m(776),t._v(" "),t._m(777),t._v(" "),t._m(778),t._v(" "),t._m(779),t._v(" "),t._m(780),t._v(" "),t._m(781),t._v(" "),t._m(782),t._v(" "),t._m(783),t._v(" "),t._m(784),t._v(" "),t._m(785),t._v(" "),t._m(786),t._v(" "),t._m(787),t._v(" "),t._m(788),t._v(" "),t._m(789),t._v(" "),t._m(790),t._v(" "),t._m(791),t._v(" "),t._m(792),t._v(" "),t._m(793),t._v(" "),t._m(794),t._v(" "),t._m(795),t._v(" "),t._m(796),t._v(" "),t._m(797),t._v(" "),t._m(798),t._v(" "),t._m(799),t._v(" "),t._m(800),t._v(" "),t._m(801),t._v(" "),t._m(802),t._v(" "),t._m(803),t._v(" "),t._m(804),t._v(" "),t._m(805),t._v(" "),t._m(806),t._v(" "),t._m(807),t._v(" "),t._m(808),t._v(" "),t._m(809),t._v(" "),t._m(810),t._v(" "),t._m(811),t._v(" "),t._m(812),t._v(" "),t._m(813),t._v(" "),t._m(814),t._v(" "),t._m(815),t._v(" "),t._m(816),t._v(" "),t._m(817),t._v(" "),t._m(818),t._v(" "),t._m(819),t._v(" "),t._m(820),t._v(" "),t._m(821),t._v(" "),t._m(822),t._v(" "),t._m(823),t._v(" "),t._m(824),t._v(" "),t._m(825),t._v(" "),t._m(826),t._v(" "),t._m(827),t._v(" "),t._m(828),t._v(" "),t._m(829),t._v(" "),t._m(830),t._v(" "),t._m(831),t._v(" "),t._m(832),t._v(" "),t._m(833),t._v(" "),t._m(834),t._v(" "),t._m(835),t._v(" "),t._m(836),t._v(" "),t._m(837),t._v(" "),t._m(838),t._v(" "),t._m(839),t._v(" "),t._m(840),t._v(" "),t._m(841),t._v(" "),t._m(842),t._v(" "),t._m(843),t._v(" "),t._m(844),t._v(" "),t._m(845),t._v(" "),t._m(846),t._v(" "),t._m(847),t._v(" "),t._m(848),t._v(" "),t._m(849),t._v(" "),t._m(850),t._v(" "),t._m(851),t._v(" "),t._m(852),t._v(" "),t._m(853),t._v(" "),t._m(854),t._v(" "),t._m(855),t._v(" "),t._m(856),t._v(" "),t._m(857),t._v(" "),t._m(858),t._v(" "),t._m(859),t._v(" "),t._m(860),t._v(" "),t._m(861),t._v(" "),t._m(862),t._v(" "),t._m(863),t._v(" "),t._m(864),t._v(" "),t._m(865),t._v(" "),t._m(866),t._v(" "),t._m(867),t._v(" "),t._m(868),t._v(" "),t._m(869),t._v(" "),t._m(870),t._v(" "),t._m(871),t._v(" "),t._m(872),t._v(" "),t._m(873),t._v(" "),t._m(874),t._v(" "),t._m(875),t._v(" "),t._m(876),t._v(" "),t._m(877),t._v(" "),t._m(878),t._v(" "),t._m(879),t._v(" "),t._m(880),t._v(" "),t._m(881),t._v(" "),t._m(882),t._v(" "),t._m(883),t._v(" "),t._m(884),t._v(" "),t._m(885),t._v(" "),t._m(886),t._v(" "),t._m(887),t._v(" "),t._m(888),t._v(" "),t._m(889),t._v(" "),t._m(890),t._v(" "),t._m(891),t._v(" "),t._m(892),t._v(" "),t._m(893),t._v(" "),t._m(894),t._v(" "),t._m(895),t._v(" "),t._m(896),t._v(" "),t._m(897),t._v(" "),t._m(898),t._v(" "),t._m(899),t._v(" "),t._m(900),t._v(" "),n("p",[t._v("TLS 握手过程如下图：")]),t._v(" "),t._m(901),t._v(" "),t._m(902),t._v(" "),t._m(903),t._v(" "),t._m(904),t._v(" "),t._m(905),t._v(" "),t._m(906),t._v(" "),t._m(907),t._v(" "),n("blockquote",[n("p",[t._v("大家可以通过 "),n("a",{attrs:{href:"https://http2.akamai.com/demo",target:"_blank",rel:"noopener noreferrer"}},[t._v("该链接"),n("OutboundLink")],1),t._v(" 感受下 HTTP/2 比 HTTP/1 到底快了多少")])]),t._v(" "),t._m(908),t._v(" "),t._m(909),t._v(" "),t._m(910),t._v(" "),t._m(911),t._v(" "),t._m(912),t._v(" "),t._m(913),t._v(" "),t._m(914),t._v(" "),t._m(915),t._v(" "),t._m(916),t._v(" "),t._m(917),t._v(" "),t._m(918),t._v(" "),t._m(919),t._v(" "),t._m(920),t._v(" "),t._m(921),t._v(" "),t._m(922),t._v(" "),t._m(923),t._v(" "),t._m(924),t._v(" "),t._m(925),t._v(" "),t._m(926),t._v(" "),t._m(927),t._v(" "),t._m(928),t._v(" "),t._m(929),t._v(" "),t._m(930),t._v(" "),t._m(931),t._v(" "),t._m(932),t._v(" "),t._m(933),t._v(" "),t._m(934),t._v(" "),t._m(935),t._v(" "),t._m(936),t._v(" "),t._m(937),t._v(" "),t._m(938),t._v(" "),t._m(939),t._v(" "),t._m(940),t._v(" "),t._m(941)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"第五部分：高频考点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第五部分：高频考点","aria-hidden":"true"}},[this._v("#")]),this._v(" 第五部分：高频考点")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("来自掘金小册笔记")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_1-typeof类型判断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-typeof类型判断","aria-hidden":"true"}},[this._v("#")]),this._v(" 1 typeof类型判断")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("typeof")]),this._v(" 是否能正确判断类型？"),s("code",[this._v("instanceof")]),this._v(" 能正确判断对象的原理是什么")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v("typeof")]),this._v(" 对于原始类型来说，除了 "),s("code",[this._v("null")]),this._v(" 都可以显示正确的类型")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'number'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'string'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" undefined "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'undefined'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'boolean'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'symbol'")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("typeof")]),this._v(" 对于对象来说，除了函数都会显示 "),s("code",[this._v("object")]),this._v("，所以说 "),s("code",[this._v("typeof")]),this._v(" 并不能准确判断变量到底是什么类型")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'object'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'object'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'function'")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("如果我们想判断一个对象的正确类型，这时候可以考虑使用 "),s("code",[this._v("instanceof")]),this._v("，因为内部机制是通过原型链来判断的")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("Person")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" p1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\np1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world'")]),t._v("\nstr "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nstr1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("对于原始类型来说，你想直接通过 "),s("code",[this._v("instanceof")]),this._v("来判断类型是不行的")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_2-类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-类型转换","aria-hidden":"true"}},[this._v("#")]),this._v(" 2 类型转换")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("首先我们要知道，在 "),s("code",[this._v("JS")]),this._v(" 中类型转换只有三种情况，分别是：")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("转换为布尔值")]),this._v(" "),s("li",[this._v("转换为数字")]),this._v(" "),s("li",[this._v("转换为字符串")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/1480597-c1ede6d7eb711a22.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"image.png"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("转Boolean")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("在条件判断时，除了 "),n("code",[t._v("undefined")]),t._v("，"),n("code",[t._v("null")]),t._v("， "),n("code",[t._v("false")]),t._v("， "),n("code",[t._v("NaN")]),t._v("， "),n("code",[t._v("''")]),t._v("， "),n("code",[t._v("0")]),t._v("， "),n("code",[t._v("-0")]),t._v("，其他所有值都转为 "),n("code",[t._v("true")]),t._v("，包括所有对象")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("对象转原始类型")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("对象在转换类型的时候，会调用内置的 "),s("code",[this._v("[[ToPrimitive]]")]),this._v(" 函数，对于该函数来说，算法逻辑一般来说如下")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("如果已经是原始类型了，那就不需要转换了")]),t._v(" "),n("li",[t._v("调用 "),n("code",[t._v("x.valueOf()")]),t._v("，如果转换为基础类型，就返回转换的值")]),t._v(" "),n("li",[t._v("调用 "),n("code",[t._v("x.toString()")]),t._v("，如果转换为基础类型，就返回转换的值")]),t._v(" "),n("li",[t._v("如果都没有返回原始类型，就会报错")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("当然你也可以重写 "),s("code",[this._v("Symbol.toPrimitive")]),this._v("，该方法在转原始类型时调用优先级最高。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Symbol"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toPrimitive"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 3")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("四则运算符")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("它有以下几个特点：")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("运算中其中一方为字符串，那么就会把另一方也转换为字符串")]),this._v(" "),s("li",[this._v("如果一方不是字符串或者数字，那么会将它转换为数字或者字符串")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '11'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "41,2,3"')]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("对于第一行代码来说，触发特点一，所以将数字 "),n("code",[t._v("1")]),t._v(" 转换为字符串，得到结果 "),n("code",[t._v("'11'")])]),t._v(" "),n("li",[t._v("对于第二行代码来说，触发特点二，所以将 "),n("code",[t._v("true")]),t._v(" 转为数字 "),n("code",[t._v("1")])]),t._v(" "),n("li",[t._v("对于第三行代码来说，触发特点二，所以将数组通过 "),n("code",[t._v("toString")]),t._v("转为字符串 "),n("code",[t._v("1,2,3")]),t._v("，得到结果 "),n("code",[t._v("41,2,3")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("另外对于加法还需要注意这个表达式 "),s("code",[this._v("'a' + + 'b'")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("'a' + + 'b' // -> \"aNaN\"\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("因为 "),n("code",[t._v("+ 'b'")]),t._v(" 等于 "),n("code",[t._v("NaN")]),t._v("，所以结果为 "),n("code",[t._v('"aNaN"')]),t._v("，你可能也会在一些代码中看到过 "),n("code",[t._v("+ '1'")]),t._v("的形式来快速获取 "),n("code",[t._v("number")]),t._v(" 类型。")]),t._v(" "),n("li",[t._v("那么对于除了加法的运算符来说，只要其中一方是数字，那么另一方就会被转为数字")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 12")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("比较运算符")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("如果是对象，就通过 "),s("code",[this._v("toPrimitive")]),this._v(" 转换对象")]),this._v(" "),s("li",[this._v("如果是字符串，就通过 "),s("code",[this._v("unicode")]),this._v(" 字符索引来比较")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\na "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("在以上代码中，因为 "),s("code",[this._v("a")]),this._v(" 是对象，所以会通过 "),s("code",[this._v("valueOf")]),this._v(" 转换为原始类型再比较值。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_3-this"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-this","aria-hidden":"true"}},[this._v("#")]),this._v(" 3 This")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("我们先来看几个函数调用的场景")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  foo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" foo\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nobj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("对于直接调用 "),n("code",[t._v("foo")]),t._v(" 来说，不管 "),n("code",[t._v("foo")]),t._v(" 函数被放在了什么地方，"),n("code",[t._v("this")]),t._v(" 一定是"),n("code",[t._v("window")])]),t._v(" "),n("li",[t._v("对于 "),n("code",[t._v("obj.foo()")]),t._v(" 来说，我们只需要记住，谁调用了函数，谁就是 "),n("code",[t._v("this")]),t._v("，所以在这个场景下 "),n("code",[t._v("foo")]),t._v(" 函数中的 "),n("code",[t._v("this")]),t._v(" 就是 "),n("code",[t._v("obj")]),t._v(" 对象")]),t._v(" "),n("li",[t._v("对于 "),n("code",[t._v("new")]),t._v(" 的方式来说，"),n("code",[t._v("this")]),t._v(" 被永远绑定在了 "),n("code",[t._v("c")]),t._v(" 上面，不会被任何方式改变 "),n("code",[t._v("this")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("说完了以上几种情况，其实很多代码中的 "),s("code",[this._v("this")]),this._v(" 应该就没什么问题了，下面让我们看看箭头函数中的 "),s("code",[this._v("this")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("首先箭头函数其实是没有 "),n("code",[t._v("this")]),t._v(" 的，箭头函数中的 "),n("code",[t._v("this")]),t._v(" 只取决包裹箭头函数的第一个普通函数的 "),n("code",[t._v("this")]),t._v("。在这个例子中，因为包裹箭头函数的第一个普通函数是 "),n("code",[t._v("a")]),t._v("，所以此时的 "),n("code",[t._v("this")]),t._v(" 是 "),n("code",[t._v("window")]),t._v("。另外对箭头函数使用 "),n("code",[t._v("bind")]),t._v("这类函数是无效的。")]),t._v(" "),n("li",[t._v("最后种情况也就是 "),n("code",[t._v("bind")]),t._v(" 这些改变上下文的 "),n("code",[t._v("API")]),t._v(" 了，对于这些函数来说，"),n("code",[t._v("this")]),t._v(" 取决于第一个参数，如果第一个参数为空，那么就是 "),n("code",[t._v("window")]),t._v("。")]),t._v(" "),n("li",[t._v("那么说到 "),n("code",[t._v("bind")]),t._v("，不知道大家是否考虑过，如果对一个函数进行多次 "),n("code",[t._v("bind")]),t._v("，那么上下文会是什么呢？")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nfn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => ?")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("如果你认为输出结果是 "),s("code",[this._v("a")]),this._v("，那么你就错了，其实我们可以把上述代码转换成另一种形式")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// fn.bind().bind(a) 等于")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fn2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" fn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("可以从上述代码中发现，不管我们给函数 "),n("code",[t._v("bind")]),t._v(" 几次，"),n("code",[t._v("fn")]),t._v(" 中的 "),n("code",[t._v("this")]),t._v(" 永远由第一次 "),n("code",[t._v("bind")]),t._v(" 决定，所以结果永远是 "),n("code",[t._v("window")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'poetries'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nfoo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 'poetries'")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("以上就是 "),s("code",[this._v("this")]),this._v(" 的规则了，但是可能会发生多个规则同时出现的情况，这时候不同的规则之间会根据优先级最高的来决定 "),s("code",[this._v("this")]),this._v(" 最终指向哪里。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("首先，"),n("code",[t._v("new")]),t._v(" 的方式优先级最高，接下来是 "),n("code",[t._v("bind")]),t._v(" 这些函数，然后是 "),n("code",[t._v("obj.foo()")]),t._v(" 这种调用方式，最后是 "),n("code",[t._v("foo")]),t._v(" 这种调用方式，同时，箭头函数的 "),n("code",[t._v("this")]),t._v(" 一旦被绑定，就不会再被任何方式所改变。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/1480597-ce6e82dfdc1b3415.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"image.png"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_4-和-有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-和-有什么区别","aria-hidden":"true"}},[this._v("#")]),this._v(" 4 == 和 === 有什么区别")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("对于 "),s("code",[this._v("==")]),this._v(" 来说，如果对比双方的类型不一样的话，就会进行类型转换")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("假如我们需要对比 x 和 y 是否相同，就会进行如下判断流程")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ol",[n("li",[t._v("首先会判断两者类型是否相同。相同的话就是比大小了")]),t._v(" "),n("li",[t._v("类型不相同的话，那么就会进行类型转换")]),t._v(" "),n("li",[t._v("会先判断是否在对比 "),n("code",[t._v("null")]),t._v(" 和 "),n("code",[t._v("undefined")]),t._v("，是的话就会返回 "),n("code",[t._v("true")])]),t._v(" "),n("li",[t._v("判断两者类型是否为 "),n("code",[t._v("string")]),t._v(" 和 "),n("code",[t._v("number")]),t._v("，是的话就会将字符串转换为 "),n("code",[t._v("number")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("1 == '1'\n      ↓\n1 ==  1\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"5"}},[s("li",[this._v("判断其中一方是否为 "),s("code",[this._v("boolean")]),this._v("，是的话就会把 "),s("code",[this._v("boolean")]),this._v(" 转为 "),s("code",[this._v("number")]),this._v(" 再进行判断")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("'1' == true\n        ↓\n'1' ==  1\n        ↓\n 1  ==  1\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ol",{attrs:{start:"6"}},[n("li",[t._v("判断其中一方是否为 "),n("code",[t._v("object")]),t._v(" 且另一方为 "),n("code",[t._v("string")]),t._v("、"),n("code",[t._v("number")]),t._v(" 或者 "),n("code",[t._v("symbol")]),t._v("，是的话就会把 "),n("code",[t._v("object")]),t._v(" 转为原始类型再进行判断")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("'1' == { name: 'yck' }\n        ↓\n'1' == '[object Object]'\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/1480597-88daf8ffd440c0dd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"image.png"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("对于 "),s("code",[this._v("===")]),this._v(" 来说就简单多了，就是判断两者类型和值是否相同")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_5-闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-闭包","aria-hidden":"true"}},[this._v("#")]),this._v(" 5 闭包")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("闭包的定义其实很简单：函数 "),n("code",[t._v("A")]),t._v(" 内部有一个函数 "),n("code",[t._v("B")]),t._v("，函数 "),n("code",[t._v("B")]),t._v(" 可以访问到函数 "),n("code",[t._v("A")]),t._v(" 中的变量，那么函数 "),n("code",[t._v("B")]),t._v(" 就是闭包")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("B")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("闭包存在的意义就是让我们可以间接访问函数内部的变量")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("经典面试题，循环中使用闭包解决 "),s("code",[this._v("var")]),this._v(" 定义函数的问题")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("timer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("首先因为 "),n("code",[t._v("setTimeout")]),t._v(" 是个异步函数，所以会先把循环全部执行完毕，这时候 "),n("code",[t._v("i")]),t._v("就是 "),n("code",[t._v("6")]),t._v(" 了，所以会输出一堆 "),n("code",[t._v("6")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("解决办法有三种")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("第一种是使用闭包的方式")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("timer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("在上述代码中，我们首先使用了立即执行函数将 "),n("code",[t._v("i")]),t._v(" 传入函数内部，这个时候值就被固定在了参数 "),n("code",[t._v("j")]),t._v(" 上面不会改变，当下次执行 "),n("code",[t._v("timer")]),t._v(" 这个闭包的时候，就可以使用外部函数的变量 "),n("code",[t._v("j")]),t._v("，从而达到目的")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"2"}},[s("li",[this._v("第二种就是使用 "),s("code",[this._v("setTimeout")]),this._v(" 的第三个参数，这个参数会被当成 "),s("code",[this._v("timer")]),this._v(" 函数的参数传入")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("timer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    i\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"3"}},[s("li",[this._v("第三种就是使用 "),s("code",[this._v("let")]),this._v(" 定义 "),s("code",[this._v("i")]),this._v(" 了来解决问题了，这个也是最为推荐的方式")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("timer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_6-深浅拷贝"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-深浅拷贝","aria-hidden":"true"}},[this._v("#")]),this._v(" 6 深浅拷贝")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("浅拷贝")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("首先可以通过 "),s("code",[this._v("Object.assign")]),this._v(" 来解决这个问题，很多人认为这个函数是用来深拷贝的。其实并不是，"),s("code",[this._v("Object.assign")]),this._v(" 只会拷贝所有的属性值到新的对象中，如果属性值是对象的话，拷贝的是地址，所以并不是深拷贝")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\na"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("另外我们还可以通过展开运算符 "),s("code",[this._v("...")]),this._v(" 来实现浅拷贝")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\na"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("通常浅拷贝就能解决大部分问题了，但是当我们遇到如下情况就可能需要使用到深拷贝了")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  jobs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    first"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'FE'")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\na"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jobs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("first "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'native'")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jobs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("first"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// native")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("浅拷贝只解决了第一层的问题，如果接下去的值中还有对象的话，那么就又回到最开始的话题了，两者享有相同的地址。要解决这个问题，我们就得使用深拷贝了。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("深拷贝")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("这个问题通常可以通过 "),s("code",[this._v("JSON.parse(JSON.stringify(object))")]),this._v(" 来解决。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  jobs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    first"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'FE'")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\na"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jobs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("first "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'native'")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jobs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("first"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// FE")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("但是该方法也是有局限性的")]),this._v("：")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("会忽略 "),n("code",[t._v("undefined")])]),t._v(" "),n("li",[t._v("会忽略 "),n("code",[t._v("symbol")])]),t._v(" "),n("li",[t._v("不能序列化函数")]),t._v(" "),n("li",[t._v("不能解决循环引用的对象")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nobj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b\nobj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("e "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a\nobj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c\nobj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("d "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b\nobj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("e "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newObj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newObj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("更多详情 https://www.jianshu.com/p/2d8a26b3958f")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_7-原型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-原型","aria-hidden":"true"}},[this._v("#")]),this._v(" 7 原型")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("原型链就是多个对象通过 "),n("code",[t._v("__proto__")]),t._v(" 的方式连接了起来。为什么 "),n("code",[t._v("obj")]),t._v(" 可以访问到 "),n("code",[t._v("valueOf")]),t._v(" 函数，就是因为 "),n("code",[t._v("obj")]),t._v(" 通过原型链找到了 "),n("code",[t._v("valueOf")]),t._v(" 函数")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/11/16/1671d387e4189ec8",alt:""}})])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("Object")]),t._v(" 是所有对象的爸爸，所有对象都可以通过 "),n("code",[t._v("__proto__")]),t._v("找到它")]),t._v(" "),n("li",[n("code",[t._v("Function")]),t._v(" 是所有函数的爸爸，所有函数都可以通过 "),n("code",[t._v("__proto__")]),t._v(" 找到它")]),t._v(" "),n("li",[t._v("函数的 "),n("code",[t._v("prototype")]),t._v(" 是一个对象")]),t._v(" "),n("li",[t._v("对象的"),n("code",[t._v("__proto__")]),t._v(" 属性指向原型， "),n("code",[t._v("__proto__")]),t._v(" 将对象和原型连接起来组成了原型链")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_8-var、let-及-const-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-var、let-及-const-区别","aria-hidden":"true"}},[this._v("#")]),this._v(" 8 var、let 及 const 区别")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("涉及面试题：什么是提升？什么是暂时性死区？var、let 及 const 区别？")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("函数提升优先于变量提升，函数提升会把整个函数挪到作用域顶部，变量提升只会把声明挪到作用域顶部")]),t._v(" "),n("li",[n("code",[t._v("var")]),t._v(" 存在提升，我们能在声明之前使用。"),n("code",[t._v("let")]),t._v("、"),n("code",[t._v("const")]),t._v(" 因为暂时性死区的原因，不能在声明前使用")]),t._v(" "),n("li",[n("code",[t._v("var")]),t._v(" 在全局作用域下声明变量会导致变量挂载在 "),n("code",[t._v("window")]),t._v("上，其他两者不会")]),t._v(" "),n("li",[n("code",[t._v("let")]),t._v(" 和 "),n("code",[t._v("const")]),t._v(" 作用基本一致，但是后者声明的变量不能再次赋值")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_9-原型继承和-class-继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-原型继承和-class-继承","aria-hidden":"true"}},[this._v("#")]),this._v(" 9 原型继承和 Class 继承")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("涉及面试题：原型如何实现继承？"),s("code",[this._v("Class")]),this._v(" 如何实现继承？"),s("code",[this._v("Class")]),this._v(" 本质是什么？")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("首先先来讲下 "),s("code",[this._v("class")]),this._v("，其实在 "),s("code",[this._v("JS")]),this._v("中并不存在类，"),s("code",[this._v("class")]),this._v(" 只是语法糖，本质还是函数")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nPerson "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("组合继承")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("组合继承是最常用的继承方式")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Parent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nParent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getValue")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Child")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" child "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Child")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nchild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\nchild "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("以上继承的方式核心是在子类的构造函数中通过 "),s("code",[this._v("Parent.call(this)")]),this._v(" 继承父类的属性，然后改变子类的原型为 "),s("code",[this._v("new Parent()")]),this._v(" 来继承父类的函数。")]),this._v(" "),s("li",[this._v("这种继承方式优点在于构造函数可以传参，不会与父类引用属性共享，可以复用父类的函数，但是也存在一个缺点就是在继承父类函数的时候调用了父类构造函数，导致子类的原型上多了不需要的父类属性，存在内存上的浪费")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/11/19/1672aeb24a2e2cae",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("寄生组合继承")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("这种继承方式对组合继承进行了优化，组合继承缺点在于继承父类函数时调用了构造函数，我们只需要优化掉这点就行了")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Parent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nParent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getValue")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Child")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  constructor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    enumerable"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    writable"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    configurable"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" child "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Child")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nchild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\nchild "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("以上继承实现的核心就是将父类的原型赋值给了子类，并且将构造函数设置为子类，这样既解决了无用的父类属性问题，还能正确的找到子类的构造函数。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/11/19/1672afb8dfa21361",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("Class 继承")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("以上两种继承方式都是通过原型去解决的，在 ES6 中，我们可以使用 class 去实现继承，并且实现起来很简单")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Child")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" child "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Child")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nchild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\nchild "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[n("code",[t._v("class")]),t._v(" 实现继承的核心在于使用 "),n("code",[t._v("extends")]),t._v(" 表明继承自哪个父类，并且在子类构造函数中必须调用 "),n("code",[t._v("super")]),t._v("，因为这段代码可以看成 "),n("code",[t._v("Parent.call(this, value)")]),t._v("。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_10-模块化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-模块化","aria-hidden":"true"}},[this._v("#")]),this._v(" 10 模块化")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("涉及面试题：为什么要使用模块化？都有哪几种方式可以实现模块化，各有什么特点？")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("解决命名冲突")]),this._v(" "),s("li",[this._v("提供复用性")]),this._v(" "),s("li",[this._v("提高代码可维护性")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("立即执行函数")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("在早期，使用立即执行函数实现模块化是常见的手段，通过函数作用域解决了命名冲突、污染全局作用域的问题")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("(function(globalVariable){\n   globalVariable.test = function() {}\n   // ... 声明各种变量、函数都不会污染全局作用域\n})(globalVariable)\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("AMD 和 CMD")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("鉴于目前这两种实现方式已经很少见到，所以不再对具体特性细聊，只需要了解这两者是如何使用的。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// AMD")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./a'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./b'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 加载模块完毕可以使用")]),t._v("\n  a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// CMD")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("require"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exports"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 加载模块")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以把 require 写在函数体的任意地方实现延迟加载")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./a'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("CommonJS")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[n("code",[t._v("CommonJS")]),t._v(" 最早是 "),n("code",[t._v("Node")]),t._v(" 在使用，目前也仍然广泛使用，比如在 "),n("code",[t._v("Webpack")]),t._v(" 中你就能见到它，当然目前在 "),n("code",[t._v("Node")]),t._v(" 中的模块管理已经和 "),n("code",[t._v("CommonJS")]),t._v("有一些区别了")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a.js")]),t._v("\nmodule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// or")]),t._v("\nexports"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// b.js")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" module "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./a.js'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmodule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -> log 1")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("ar module "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./a.js'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmodule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里其实就是包装了一层立即执行函数，这样就不会污染全局变量了，")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重要的是 module 这里，module 是 Node 独有的一个变量")]),t._v("\nmodule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// module 基本实现")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" module "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxxx'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我总得知道怎么去找到他吧")]),t._v("\n  exports"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// exports 就是个空对象")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个是为什么 exports 和 module.exports 用法相似的原因")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("load")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 导出的东西")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 然后当我 require 的时候去找到独特的")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// id，然后将要使用的东西用立即执行函数包装下，over")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("另外虽然 "),n("code",[t._v("exports")]),t._v(" 和 "),n("code",[t._v("module.exports")]),t._v(" 用法相似，但是不能对 "),n("code",[t._v("exports")]),t._v(" 直接赋值。因为 "),n("code",[t._v("var exports = module.exports")]),t._v(" 这句代码表明了 "),n("code",[t._v("exports")]),t._v(" 和 "),n("code",[t._v("module.exports")]),t._v("享有相同地址，通过改变对象的属性值会对两者都起效，但是如果直接对 "),n("code",[t._v("exports")]),t._v(" 赋值就会导致两者不再指向同一个内存地址，修改并不会对 "),n("code",[t._v("module.exports")]),t._v(" 起效")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("ES Module")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("ES Module")]),this._v(" 是原生实现的模块化方案，与 "),s("code",[this._v("CommonJS")]),this._v(" 有以下几个区别")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ol",[n("li",[n("code",[t._v("CommonJS")]),t._v(" 支持动态导入，也就是 "),n("code",[t._v("require(${path}/xx.js)")]),t._v("，后者目前不支持，但是已有提案")]),t._v(" "),n("li",[n("code",[t._v("CommonJS")]),t._v(" 是同步导入，因为用于服务端，文件都在本地，同步导入即使卡住主线程影响也不大。而后者是异步导入，因为用于浏览器，需要下载文件，如果也采用同步导入会对渲染有很大影响")]),t._v(" "),n("li",[n("code",[t._v("CommonJS")]),t._v(" 在导出时都是值拷贝，就算导出的值变了，导入的值也不会改变，所以如果想更新值，必须重新导入一次。但是 "),n("code",[t._v("ES Module")]),t._v(" 采用实时绑定的方式，导入导出的值都指向同一个内存地址，所以导入值会跟随导出值变化")]),t._v(" "),n("li",[n("code",[t._v("ES Module")]),t._v(" 会编译成 "),n("code",[t._v("require/exports")]),t._v("来执行的")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 引入模块 API")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XXX")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./a.js'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XXX")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./a.js'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 导出模块 API")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_11-实现一个简洁版的promise"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-实现一个简洁版的promise","aria-hidden":"true"}},[this._v("#")]),this._v(" 11 实现一个简洁版的promise")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 三个常量用于表示状态")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PENDING")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pending'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RESOLVED")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'resolved'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("REJECTED")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rejected'")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyPromise")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" that "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PENDING")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// value 变量用于保存 resolve 或者 reject 中传入的值")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用于保存 then 中的回调，因为当执行完 Promise 时状态可能还是等待中，这时候应该把 then 中的回调保存起来用于状态改变时使用")]),t._v("\n    that"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("resolvedCallbacks "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    that"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rejectedCallbacks "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 首先两个函数都得判断当前状态是否为等待中")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("that"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PENDING")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            that"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RESOLVED")]),t._v("\n            that"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value\n\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遍历回调数组并执行")]),t._v("\n            that"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("resolvedCallbacks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cb"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cb")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("that"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("that"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PENDING")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            that"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("REJECTED")]),t._v("\n            that"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value\n            that"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rejectedCallbacks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cb"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cb")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("that"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 完成以上两个函数以后，我们就该实现如何执行 Promise 中传入的函数了")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resolve"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("reject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cach")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最后我们来实现较为复杂的 then 函数")]),t._v("\nMyPromise"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("then")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("onFulfilled"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("onRejected"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" that "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断两个参数是否为函数类型，因为这两个参数是可选参数")]),t._v("\n  onFulfilled "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" onFulfilled "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" onFulfilled "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("v\n  onRejected "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" onRejected "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" onRejected "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" e"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" e\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当状态不是等待态时，就去执行相对应的函数。如果状态是等待态的话，就往回调函数中 push 函数")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PENDING")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("resolvedCallbacks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("onFulfilled"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rejectedCallbacks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("onRejected"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RESOLVED")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("onFulfilled")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("that"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("REJECTED")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("onRejected")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("that"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_12-event-loop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-event-loop","aria-hidden":"true"}},[this._v("#")]),this._v(" 12 Event Loop")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_12-1-进程与线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-进程与线程","aria-hidden":"true"}},[this._v("#")]),this._v(" 12.1 进程与线程")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("涉及面试题：进程与线程区别？"),s("code",[this._v("JS")]),this._v(" 单线程带来的好处？")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("JS")]),t._v(" 是单线程执行的，但是你是否疑惑过什么是线程？")]),t._v(" "),n("li",[t._v("讲到线程，那么肯定也得说一下进程。本质上来说，两个名词都是 "),n("code",[t._v("CPU")]),t._v(" 工作时间片的一个描述。")]),t._v(" "),n("li",[t._v("进程描述了 "),n("code",[t._v("CPU")]),t._v(" 在运行指令及加载和保存上下文所需的时间，放在应用上来说就代表了一个程序。线程是进程中的更小单位，描述了执行一段指令所需的时间")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("把这些概念拿到浏览器中来说，当你打开一个 "),s("code",[this._v("Tab")]),this._v(" 页时，其实就是创建了一个进程，一个进程中可以有多个线程，比如渲染线程、"),s("code",[this._v("JS")]),this._v(" 引擎线程、"),s("code",[this._v("HTTP")]),this._v(" 请求线程等等。当你发起一个请求时，其实就是创建了一个线程，当请求结束后，该线程可能就会被销毁")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("上文说到了 "),n("code",[t._v("JS")]),t._v(" 引擎线程和渲染线程，大家应该都知道，在 "),n("code",[t._v("JS")]),t._v(" 运行的时候可能会阻止 "),n("code",[t._v("UI")]),t._v(" 渲染，这说明了两个线程是互斥的。这其中的原因是因为 JS 可以修改 "),n("code",[t._v("DOM")]),t._v("，如果在 "),n("code",[t._v("JS")]),t._v(" 执行的时候 "),n("code",[t._v("UI")]),t._v(" 线程还在工作，就可能导致不能安全的渲染 "),n("code",[t._v("UI")]),t._v("。这其实也是一个单线程的好处，得益于 "),n("code",[t._v("JS")]),t._v(" 是单线程运行的，可以达到节省内存，节约上下文切换时间，没有锁的问题的好处")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_12-2-执行栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-执行栈","aria-hidden":"true"}},[this._v("#")]),this._v(" 12.2 执行栈")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("涉及面试题：什么是执行栈？")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/11/13/1670d2d20ead32ec",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("当开始执行 "),s("code",[this._v("JS")]),this._v(" 代码时，首先会执行一个 "),s("code",[this._v("main")]),this._v(" 函数，然后执行我们的代码。根据先进后出的原则，后执行的函数会先弹出栈，在图中我们也可以发现，"),s("code",[this._v("foo")]),this._v(" 函数后执行，当执行完毕后就从栈中弹出了")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/11/13/1670c0e21540090c",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("大家可以在上图清晰的看到报错在 "),s("code",[this._v("foo")]),this._v(" 函数，"),s("code",[this._v("foo")]),this._v(" 函数又是在 "),s("code",[this._v("bar")]),this._v(" 函数中调用的")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/11/13/1670c128acce975f",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_12-3-浏览器中的-event-loop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-3-浏览器中的-event-loop","aria-hidden":"true"}},[this._v("#")]),this._v(" 12.3 浏览器中的 Event Loop")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("涉及面试题：异步代码执行顺序？解释一下什么是 "),s("code",[this._v("Event Loop")]),this._v(" ？")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("众所周知 "),n("code",[t._v("JS")]),t._v(" 是门非阻塞单线程语言，因为在最初 "),n("code",[t._v("JS")]),t._v(" 就是为了和浏览器交互而诞生的。如果 "),n("code",[t._v("JS")]),t._v(" 是门多线程的语言话，我们在多个线程中处理 "),n("code",[t._v("DOM")]),t._v(" 就可能会发生问题（一个线程中新加节点，另一个线程中删除节点）")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("JS")]),t._v(" 在执行的过程中会产生执行环境，这些执行环境会被顺序的加入到执行栈中。如果遇到异步的代码，会被挂起并加入到 "),n("code",[t._v("Task")]),t._v("（有多种 "),n("code",[t._v("task")]),t._v("） 队列中。一旦执行栈为空，"),n("code",[t._v("Event")]),t._v(" "),n("code",[t._v("Loop")]),t._v(" 就会从 "),n("code",[t._v("Task")]),t._v(" 队列中拿出需要执行的代码并放入执行栈中执行，所以本质上来说 "),n("code",[t._v("JS")]),t._v(" 中的异步还是同步行为")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/11/23/16740fa4cd9c6937",alt:""}})])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script start'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'setTimeout'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script end'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("不同的任务源会被分配到不同的 "),n("code",[t._v("Task")]),t._v(" 队列中，任务源可以分为 微任务（"),n("code",[t._v("microtask")]),t._v("） 和 宏任务（"),n("code",[t._v("macrotask")]),t._v("）。在 "),n("code",[t._v("ES6")]),t._v(" 规范中，"),n("code",[t._v("microtask")]),t._v(" 称为 "),n("code",[t._v("jobs")]),t._v("，"),n("code",[t._v("macrotask")]),t._v(" 称为 "),n("code",[t._v("task")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script start'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'setTimeout'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resolve"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Promise'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'promise1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'promise2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script end'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// script start => Promise => script end => promise1 => promise2 => setTimeout")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("以上代码虽然 "),n("code",[t._v("setTimeout")]),t._v(" 写在 "),n("code",[t._v("Promise")]),t._v(" 之前，但是因为 "),n("code",[t._v("Promise")]),t._v(" 属于微任务而 "),n("code",[t._v("setTimeout")]),t._v(" 属于宏任务")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("微任务")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v("process.nextTick")])]),this._v(" "),s("li",[s("code",[this._v("promise")])]),this._v(" "),s("li",[s("code",[this._v("Object.observe")])]),this._v(" "),s("li",[s("code",[this._v("MutationObserver")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("宏任务")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("script")])]),t._v(" "),n("li",[n("code",[t._v("setTimeout")])]),t._v(" "),n("li",[n("code",[t._v("setInterval")])]),t._v(" "),n("li",[n("code",[t._v("setImmediate")])]),t._v(" "),n("li",[n("code",[t._v("I/O")])]),t._v(" "),n("li",[n("code",[t._v("UI rendering")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("宏任务中包括了 "),s("code",[this._v("script")]),this._v(" ，浏览器会先执行一个宏任务，接下来有异步代码的话就先执行微任务")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("所以正确的一次 Event loop 顺序是这样的")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("执行同步代码，这属于宏任务")]),t._v(" "),n("li",[t._v("执行栈为空，查询是否有微任务需要执行")]),t._v(" "),n("li",[t._v("执行所有微任务")]),t._v(" "),n("li",[t._v("必要的话渲染 UI")]),t._v(" "),n("li",[t._v("然后开始下一轮 "),n("code",[t._v("Event loop")]),t._v("，执行宏任务中的异步代码")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("通过上述的 "),s("code",[this._v("Event loop")]),this._v(" 顺序可知，如果宏任务中的异步代码有大量的计算并且需要操作 "),s("code",[this._v("DOM")]),this._v(" 的话，为了更快的响应界面响应，我们可以把操作 "),s("code",[this._v("DOM")]),this._v(" 放入微任务中")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_12-4-node-中的-event-loop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-4-node-中的-event-loop","aria-hidden":"true"}},[this._v("#")]),this._v(" 12.4 Node 中的 Event loop")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("Node")]),t._v(" 中的 "),n("code",[t._v("Event loop")]),t._v(" 和浏览器中的不相同。")]),t._v(" "),n("li",[n("code",[t._v("Node")]),t._v(" 的 "),n("code",[t._v("Event loop")]),t._v(" 分为"),n("code",[t._v("6")]),t._v("个阶段，它们会按照顺序反复运行")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("┌───────────────────────┐\n┌─>│        timers         │\n│  └──────────┬────────────┘\n│  ┌──────────┴────────────┐\n│  │     I/O callbacks     │\n│  └──────────┬────────────┘\n│  ┌──────────┴────────────┐\n│  │     idle, prepare     │\n│  └──────────┬────────────┘      ┌───────────────┐\n│  ┌──────────┴────────────┐      │   incoming:   │\n│  │         poll          │<──connections───     │\n│  └──────────┬────────────┘      │   data, etc.  │\n│  ┌──────────┴────────────┐      └───────────────┘\n│  │        check          │\n│  └──────────┬────────────┘\n│  ┌──────────┴────────────┐\n└──┤    close callbacks    │\n   └───────────────────────┘\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("timer")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v("timers")]),this._v(" 阶段会执行 "),s("code",[this._v("setTimeout")]),this._v(" 和 "),s("code",[this._v("setInterval")])]),this._v(" "),s("li",[this._v("一个 timer 指定的时间并不是准确时间，而是在达到这个时间后尽快执行回调，可能会因为系统正在执行别的事务而延迟")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("I/O")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v("I/O")]),this._v(" 阶段会执行除了 "),s("code",[this._v("close")]),this._v(" 事件，定时器和 "),s("code",[this._v("setImmediate")]),this._v(" 的回调")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("poll")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("p",[n("code",[t._v("poll")]),t._v(" 阶段很重要，这一阶段中，系统会做两件事情")]),t._v(" "),n("ul",[n("li",[t._v("执行到点的定时器")]),t._v(" "),n("li",[t._v("执行 "),n("code",[t._v("poll")]),t._v(" 队列中的事件")])])]),t._v(" "),n("li",[n("p",[t._v("并且当 "),n("code",[t._v("poll")]),t._v(" 中没有定时器的情况下，会发现以下两件事情")]),t._v(" "),n("ul",[n("li",[t._v("如果 "),n("code",[t._v("poll")]),t._v(" 队列不为空，会遍历回调队列并同步执行，直到队列为空或者系统限制")]),t._v(" "),n("li",[t._v("如果 "),n("code",[t._v("poll")]),t._v(" 队列为空，会有两件事发生")]),t._v(" "),n("li",[t._v("如果有 "),n("code",[t._v("setImmediate")]),t._v(" 需要执行，"),n("code",[t._v("poll")]),t._v(" 阶段会停止并且进入到 "),n("code",[t._v("check")]),t._v(" 阶段执行 "),n("code",[t._v("setImmediate")])]),t._v(" "),n("li",[t._v("如果没有 "),n("code",[t._v("setImmediate")]),t._v(" 需要执行，会等待回调被加入到队列中并立即执行回调")]),t._v(" "),n("li",[t._v("如果有别的定时器需要被执行，会回到 "),n("code",[t._v("timer")]),t._v(" 阶段执行回调。")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("check")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v("check")]),this._v(" 阶段执行 "),s("code",[this._v("setImmediate")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("close callbacks")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("close callbacks")]),t._v(" 阶段执行 "),n("code",[t._v("close")]),t._v(" 事件")]),t._v(" "),n("li",[t._v("并且在 "),n("code",[t._v("Node")]),t._v(" 中，有些情况下的定时器执行顺序是随机的")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'setTimeout'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setImmediate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'setImmediate'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里可能会输出 setTimeout，setImmediate")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可能也会相反的输出，这取决于性能")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为可能进入 event loop 用了不到 1 毫秒，这时候会执行 setImmediate")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 否则会执行 setTimeout")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("上面介绍的都是 "),s("code",[this._v("macrotask")]),this._v(" 的执行情况，"),s("code",[this._v("microtask")]),this._v(" 会在以上每个阶段完成后立即执行")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'timer1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    Promise"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'promise1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'timer2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    Promise"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'promise2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以上代码在浏览器和 node 中打印情况是不同的")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 浏览器中一定打印 timer1, promise1, timer2, promise2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// node 中可能打印 timer1, timer2, promise1, promise2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 也可能打印 timer1, promise1, timer2, promise2")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("Node")]),this._v(" 中的 "),s("code",[this._v("process.nextTick")]),this._v(" 会先于其他 "),s("code",[this._v("microtask")]),this._v(" 执行")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"timer1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n Promise"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"promise1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nprocess"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextTick")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nextTick"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nextTick, timer1, promise1")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("对于 "),n("code",[t._v("microtask")]),t._v(" 来说，它会在以上每个阶段完成前清空 "),n("code",[t._v("microtask")]),t._v(" 队列，下图中的 "),n("code",[t._v("Tick")]),t._v(" 就代表了 "),n("code",[t._v("microtask")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/11/14/16710fb80dd42d27",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_13-手写-call、apply-及-bind-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-手写-call、apply-及-bind-函数","aria-hidden":"true"}},[this._v("#")]),this._v(" 13 手写 call、apply 及 bind 函数")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("首先从以下几点来考虑如何实现这几个函数")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("不传入第一个参数，那么上下文默认为 "),s("code",[this._v("window")])]),this._v(" "),s("li",[this._v("改变了 "),s("code",[this._v("this")]),this._v(" 指向，让新的对象可以执行该函数，并能接受参数")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("实现 call")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("首先 "),n("code",[t._v("context")]),t._v("为可选参数，如果不传的话默认上下文为 "),n("code",[t._v("window")])]),t._v(" "),n("li",[t._v("接下来给 "),n("code",[t._v("context")]),t._v(" 创建一个 "),n("code",[t._v("fn")]),t._v(" 属性，并将值设置为需要调用的函数")]),t._v(" "),n("li",[t._v("因为 "),n("code",[t._v("call")]),t._v(" 可以传入多个参数作为调用函数的参数，所以需要将参数剥离出来")]),t._v(" "),n("li",[t._v("然后调用函数并将对象上的函数删除")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("Function"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("myCall")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TypeError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  context "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" window\n  context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fn "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" args "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arguments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fn\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("apply实现")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("apply")]),this._v(" 的实现也类似，区别在于对参数的处理")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("Function"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("myApply")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TypeError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  context "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" window\n  context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fn "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理参数和 call 有区别")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arguments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fn\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("bind 的实现")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("bind")]),this._v(" 的实现对比其他两个函数略微地复杂了一点，因为 "),s("code",[this._v("bind")]),this._v(" 需要返回一个函数，需要判断一些边界问题，以下是 "),s("code",[this._v("bind")]),this._v(" 的实现")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("bind")]),t._v(" 返回了一个函数，对于函数来说有两种方式调用，一种是直接调用，一种是通过 "),n("code",[t._v("new")]),t._v(" 的方式，我们先来说直接调用的方式")]),t._v(" "),n("li",[t._v("对于直接调用来说，这里选择了 "),n("code",[t._v("apply")]),t._v(" 的方式实现，但是对于参数需要注意以下情况：因为 "),n("code",[t._v("bind")]),t._v(" 可以实现类似这样的代码 "),n("code",[t._v("f.bind(obj, 1)(2)")]),t._v("，所以我们需要将两边的参数拼接起来，于是就有了这样的实现 "),n("code",[t._v("args.concat(...arguments)")])]),t._v(" "),n("li",[t._v("最后来说通过 "),n("code",[t._v("new")]),t._v(" 的方式，在之前的章节中我们学习过如何判断 "),n("code",[t._v("this")]),t._v("，对于 "),n("code",[t._v("new")]),t._v(" 的情况来说，不会被任何方式改变 "),n("code",[t._v("this")]),t._v("，所以对于这种情况我们需要忽略传入的 "),n("code",[t._v("this")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("Function"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("myBind")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TypeError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Error'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" _this "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" args "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arguments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回一个函数")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("F")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为返回了一个函数，我们可以 new F()，所以需要判断")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("F")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arguments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" _this"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arguments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_14-new"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-new","aria-hidden":"true"}},[this._v("#")]),this._v(" 14 new")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("涉及面试题："),s("code",[this._v("new")]),this._v(" 的原理是什么？通过 "),s("code",[this._v("new")]),this._v("的方式创建对象和通过字面量创建有什么区别？")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("在调用 new 的过程中会发生四件事情")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("新生成了一个对象")]),t._v(" "),n("li",[t._v("链接到原型")]),t._v(" "),n("li",[t._v("绑定 "),n("code",[t._v("this")])]),t._v(" "),n("li",[t._v("返回新对象")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("根据以上几个过程，我们也可以试着来自己实现一个 new")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("创建一个空对象")]),t._v(" "),n("li",[t._v("获取构造函数")]),t._v(" "),n("li",[t._v("设置空对象的原型")]),t._v(" "),n("li",[t._v("绑定 "),n("code",[t._v("this")]),t._v(" 并执行构造函数")]),t._v(" "),n("li",[t._v("确保返回值为对象")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" Con "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shift"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Con"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Con"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arguments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" result "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" obj\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("对于对象来说，其实都是通过 "),n("code",[t._v("new")]),t._v(" 产生的，无论是 "),n("code",[t._v("function Foo()")]),t._v(" 还是 "),n("code",[t._v("let a = { b : 1 }")]),t._v("。")]),t._v(" "),n("li",[t._v("对于创建一个对象来说，更推荐使用字面量的方式创建对象（无论性能上还是可读性）。因为你使用 "),n("code",[t._v("new Object()")]),t._v(" 的方式创建对象需要通过作用域链一层层找到 "),n("code",[t._v("Object")]),t._v("，但是你使用字面量的方式就没这个问题")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// function 就是个语法糖")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 内部等同于 new Function()")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个字面量内部也是使用了 new Object()")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_15-instanceof-的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-instanceof-的原理","aria-hidden":"true"}},[this._v("#")]),this._v(" 15 instanceof 的原理")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("涉及面试题："),s("code",[this._v("instanceof")]),this._v(" 的原理是什么？")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("instanceof")]),this._v(" 可以正确的判断对象的类型，因为内部机制是通过判断对象的原型链中是不是能找到类型的 "),s("code",[this._v("prototype")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("实现一下 instanceof")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("首先获取类型的原型")]),t._v(" "),n("li",[t._v("然后获得对象的原型")]),t._v(" "),n("li",[t._v("然后一直循环判断对象的原型是否等于类型的原型，直到对象原型为 "),n("code",[t._v("null")]),t._v("，因为原型链最终为 "),n("code",[t._v("null")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("myInstanceof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("left"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" right"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" prototype "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" right"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype\n  left "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" left"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("left "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" left "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" undefined"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prototype "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" left"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    left "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" left"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_16-为什么-0-1-0-2-0-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-为什么-0-1-0-2-0-3","aria-hidden":"true"}},[this._v("#")]),this._v(" 16 为什么 0.1 + 0.2 != 0.3")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("涉及面试题：为什么 "),s("code",[this._v("0.1 + 0.2 != 0.3")]),this._v("？如何解决这个问题？")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[n("strong",[t._v("原因")]),t._v("，因为 "),n("code",[t._v("JS")]),t._v(" 采用 "),n("code",[t._v("IEEE 754")]),t._v("双精度版本（"),n("code",[t._v("64")]),t._v("位），并且只要采用 "),n("code",[t._v("IEEE 754")]),t._v("的语言都有该问题")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("我们都知道计算机是通过二进制来存储东西的，那么 "),s("code",[this._v("0.1")]),this._v(" 在二进制中会表示为")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (0011) 表示循环")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.10011")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0011")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("我们可以发现，"),s("code",[this._v("0.1")]),this._v(" 在二进制中是无限循环的一些数字，其实不只是 "),s("code",[this._v("0.1")]),this._v("，其实很多十进制小数用二进制表示都是无限循环的。这样其实没什么问题，但是 "),s("code",[this._v("JS")]),this._v("采用的浮点数标准却会裁剪掉我们的数字。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("IEEE 754 双精度版本（64位）将 64 位分为了三段")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("第一位用来表示符号")]),t._v(" "),n("li",[t._v("接下去的 "),n("code",[t._v("11")]),t._v(" 位用来表示指数")]),t._v(" "),n("li",[t._v("其他的位数用来表示有效位，也就是用二进制表示 "),n("code",[t._v("0.1")]),t._v(" 中的 "),n("code",[t._v("10011(0011)")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("那么这些循环的数字被裁剪了，就会出现精度丢失的问题，也就造成了 "),s("code",[this._v("0.1")]),this._v(" 不再是 "),s("code",[this._v("0.1")]),this._v(" 了，而是变成了 "),s("code",[this._v("0.100000000000000002")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("0.100000000000000002 === 0.1 // true\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("那么同样的，"),s("code",[this._v("0.2")]),this._v(" 在二进制也是无限循环的，被裁剪后也失去了精度变成了 "),s("code",[this._v("0.200000000000000002")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("0.200000000000000002 === 0.2 // true\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("所以这两者相加不等于 "),s("code",[this._v("0.3")]),this._v(" 而是 "),s("code",[this._v("0.300000000000000004")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("0.1 + 0.2 === 0.30000000000000004 // true\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("那么可能你又会有一个疑问，既然 "),s("code",[this._v("0.1")]),this._v(" 不是 "),s("code",[this._v("0.1")]),this._v("，那为什么 "),s("code",[this._v("console.log(0.1)")]),this._v(" 却是正确的呢？")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("因为在输入内容的时候，二进制被转换为了十进制，十进制又被转换为了字符串，在这个转换的过程中发生了取近似值的过程，所以打印出来的其实是一个近似值，你也可以通过以下代码来验证")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("console.log(0.100000000000000002) // 0.1\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("解决")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toFixed")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_17-事件机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-事件机制","aria-hidden":"true"}},[this._v("#")]),this._v(" 17 事件机制")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("涉及面试题：事件的触发过程是怎么样的？知道什么是事件代理嘛？")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_17-1-事件触发三阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-1-事件触发三阶段","aria-hidden":"true"}},[this._v("#")]),this._v(" 17.1 事件触发三阶段")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("事件触发有三个阶段")]),this._v("：")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("window")]),t._v("往事件触发处传播，遇到注册的捕获事件会触发")]),t._v(" "),n("li",[t._v("传播到事件触发处时触发注册的事件")]),t._v(" "),n("li",[t._v("从事件触发处往 "),n("code",[t._v("window")]),t._v(" 传播，遇到注册的冒泡事件会触发")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("事件触发一般来说会按照上面的顺序进行，但是也有特例，如果给一个 "),s("code",[this._v("body")]),this._v(" 中的子节点同时注册冒泡和捕获事件，事件触发会按照注册的顺序执行")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以下会先打印冒泡然后是捕获")]),t._v("\nnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  event "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'冒泡'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  event "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'捕获 '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_17-2-注册事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-2-注册事件","aria-hidden":"true"}},[this._v("#")]),this._v(" 17.2 注册事件")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("通常我们使用 "),n("code",[t._v("addEventListener")]),t._v(" 注册事件，该函数的第三个参数可以是布尔值，也可以是对象。对于布尔值 "),n("code",[t._v("useCapture")]),t._v(" 参数来说，该参数默认值为 "),n("code",[t._v("false")]),t._v(" ，"),n("code",[t._v("useCapture")]),t._v(" 决定了注册的事件是捕获事件还是冒泡事件。对于对象参数来说，可以使用以下几个属性")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("capture")]),t._v("：布尔值，和 "),n("code",[t._v("useCapture")]),t._v(" 作用一样")]),t._v(" "),n("li",[n("code",[t._v("once")]),t._v("：布尔值，值为 "),n("code",[t._v("true")]),t._v(" 表示该回调只会调用一次，调用后会移除监听")]),t._v(" "),n("li",[n("code",[t._v("passive")]),t._v("：布尔值，表示永远不会调用 "),n("code",[t._v("preventDefault")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("一般来说，如果我们只希望事件只触发在目标上，这时候可以使用 "),s("code",[this._v("stopPropagation")]),this._v("来阻止事件的进一步传播。通常我们认为 "),s("code",[this._v("stopPropagation")]),this._v(" 是用来阻止事件冒泡的，其实该函数也可以阻止捕获事件"),s("code",[this._v("。stopImmediatePropagation")]),this._v("同样也能实现阻止事件，但是还能阻止该事件目标执行别的注册事件。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  event "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    event"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("stopImmediatePropagation")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'冒泡'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 点击 node 只会执行上面的函数，该函数不会执行")]),t._v("\nnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  event "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'捕获 '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_17-3-事件代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-3-事件代理","aria-hidden":"true"}},[this._v("#")]),this._v(" 17.3 事件代理")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("如果一个节点中的子节点是动态生成的，那么子节点需要注册事件的话应该注册在父节点上")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ul")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("ul"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("2"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("3"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("4"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("5"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ul")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token script language-javascript"}},[t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" ul "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#ul'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tul"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("事件代理的方式相较于直接给目标注册事件来说，有以下优点")]),this._v("：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("节省内存")]),this._v(" "),s("li",[this._v("不需要给子节点注销事件")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_18-跨域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-跨域","aria-hidden":"true"}},[this._v("#")]),this._v(" 18 跨域")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("涉及面试题：什么是跨域？为什么浏览器要使用同源策略？你有几种方式可以解决跨域问题？了解预检请求嘛？")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("因为浏览器出于安全考虑，有同源策略。也就是说，如果协议、域名或者端口有一个不同就是跨域，"),n("code",[t._v("Ajax")]),t._v(" 请求会失败。")]),t._v(" "),n("li",[t._v("那么是出于什么安全考虑才会引入这种机制呢？ 其实主要是用来防止 "),n("code",[t._v("CSRF")]),t._v(" 攻击的。简单点说，"),n("code",[t._v("CSRF")]),t._v(" 攻击是利用用户的登录态发起恶意请求。")]),t._v(" "),n("li",[t._v("也就是说，没有同源策略的情况下，"),n("code",[t._v("A")]),t._v(" 网站可以被任意其他来源的 "),n("code",[t._v("Ajax")]),t._v(" 访问到内容。如果你当前 "),n("code",[t._v("A")]),t._v(" 网站还存在登录态，那么对方就可以通过 "),n("code",[t._v("Ajax")]),t._v(" 获得你的任何信息。当然跨域并不能完全阻止 "),n("code",[t._v("CSRF")]),t._v("。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("然后我们来考虑一个问题，请求跨域了，那么请求到底发出去没有？ 请求必然是发出去了，但是浏览器拦截了响应。你可能会疑问明明通过表单的方式可以发起跨域请求，为什么 "),s("code",[this._v("Ajax")]),this._v("就不会。因为归根结底，跨域是为了阻止用户读取到另一个域名下的内容，"),s("code",[this._v("Ajax")]),this._v(" 可以获取响应，浏览器认为这不安全，所以拦截了响应。但是表单并不会获取新的内容，所以可以发起跨域请求。同时也说明了跨域并不能完全阻止 "),s("code",[this._v("CSRF")]),this._v("，因为请求毕竟是发出去了。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_18-1-jsonp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-1-jsonp","aria-hidden":"true"}},[this._v("#")]),this._v(" 18.1 JSONP")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("JSONP")]),this._v(" 的原理很简单，就是利用 "),s("code",[this._v("<script>")]),this._v(" 标签没有跨域限制的漏洞。通过 "),s("code",[this._v("<script>")]),this._v("标签指向一个需要访问的地址并提供一个回调函数来接收数据当需要通讯时")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://domain/api?param1=a&param2=b&callback=jsonp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token script language-javascript"}}),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token script language-javascript"}},[t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("jsonp")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \tconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("    \n\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("JSONP")]),this._v(" 使用简单且兼容性不错，但是只限于 "),s("code",[this._v("get")]),this._v(" 请求。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("在开发中可能会遇到多个 "),s("code",[this._v("JSONP")]),this._v(" 请求的回调函数名是相同的，这时候就需要自己封装一个 "),s("code",[this._v("JSONP")]),this._v("，以下是简单实现")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("jsonp")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" jsonpCallback"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" success"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" script "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  script"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" url\n  script"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  script"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'text/javascript'")]),t._v("\n  window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("jsonpCallback"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    success "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("success")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("script"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("jsonp")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://xxx'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'callback'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_18-2-cors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-2-cors","aria-hidden":"true"}},[this._v("#")]),this._v(" 18.2 CORS")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("CORS")]),t._v(" 需要浏览器和后端同时支持。"),n("code",[t._v("IE 8")]),t._v(" 和 "),n("code",[t._v("9")]),t._v(" 需要通过 "),n("code",[t._v("XDomainRequest")]),t._v(" 来实现。")]),t._v(" "),n("li",[t._v("浏览器会自动进行 "),n("code",[t._v("CORS")]),t._v(" 通信，实现 "),n("code",[t._v("CORS")]),t._v(" 通信的关键是后端。只要后端实现了 "),n("code",[t._v("CORS")]),t._v("，就实现了跨域。")]),t._v(" "),n("li",[t._v("服务端设置 "),n("code",[t._v("Access-Control-Allow-Origin")]),t._v(" 就可以开启 "),n("code",[t._v("CORS")]),t._v("。 该属性表示哪些域名可以访问资源，如果设置通配符则表示所有网站都可以访问资源。\n虽然设置 "),n("code",[t._v("CORS")]),t._v("和前端没什么关系，但是通过这种方式解决跨域问题的话，会在发送请求时出现两种情况，分别为简单请求和复杂请求。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("简单请求")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("以 "),s("code",[this._v("Ajax")]),this._v(" 为例，当满足以下条件时，会触发简单请求")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("使用下列方法之一：")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v("GET")])]),this._v(" "),s("li",[s("code",[this._v("HEAD")])]),this._v(" "),s("li",[s("code",[this._v("POST")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"2"}},[s("li",[s("code",[this._v("Content-Type")]),this._v(" 的值仅限于下列三者之一：")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("text/plain")]),this._v(" "),s("li",[s("code",[this._v("multipart/form-data")])]),this._v(" "),s("li",[s("code",[this._v("application/x-www-form-urlencoded")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("请求中的任意 "),s("code",[this._v("XMLHttpRequestUpload")]),this._v(" 对象均没有注册任何事件监听器； "),s("code",[this._v("XMLHttpRequestUpload")]),this._v(" 对象可以使用 "),s("code",[this._v("XMLHttpRequest.upload")]),this._v(" 属性访问")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("复杂请求")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("对于复杂请求来说，首先会发起一个预检请求，该请求是 "),s("code",[this._v("option")]),this._v(" 方法的，通过该请求来知道服务端是否允许跨域请求。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("对于预检请求来说，如果你使用过 "),s("code",[this._v("Node")]),this._v(" 来设置 "),s("code",[this._v("CORS")]),this._v(" 的话，可能会遇到过这么一个坑。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("以下以 "),s("code",[this._v("express")]),this._v("框架举例")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("header")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Access-Control-Allow-Origin'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("header")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Access-Control-Allow-Methods'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'PUT, GET, POST, DELETE, OPTIONS'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("header")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Access-Control-Allow-Headers'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Origin, X-Requested-With, Content-Type, Accept, Authorization, Access-Control-Allow-Credentials'")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("该请求会验证你的 "),n("code",[t._v("Authorization")]),t._v(" 字段，没有的话就会报错。")]),t._v(" "),n("li",[t._v("当前端发起了复杂请求后，你会发现就算你代码是正确的，返回结果也永远是报错的。因为预检请求也会进入回调中，也会触发 "),n("code",[t._v("next")]),t._v(" 方法，因为预检请求并不包含 "),n("code",[t._v("Authorization")]),t._v(" 字段，所以服务端会报错。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("想解决这个问题很简单，只需要在回调中过滤 "),s("code",[this._v("option")]),this._v(" 方法即可")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("statusCode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("204")]),t._v("\nres"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Content-Length'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nres"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_18-3-document-domain"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-3-document-domain","aria-hidden":"true"}},[this._v("#")]),this._v(" 18.3 document.domain")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("该方式只能用于主域名相同的情况下，比如 "),n("code",[t._v("a.test.com")]),t._v(" 和 "),n("code",[t._v("b.test.com")]),t._v(" 适用于该方式。")]),t._v(" "),n("li",[t._v("只需要给页面添加 "),n("code",[t._v("document.domain = 'test.com'")]),t._v(" 表示主域名都相同就可以实现跨域")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_18-4-postmessage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-4-postmessage","aria-hidden":"true"}},[this._v("#")]),this._v(" 18.4 postMessage")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("这种方式通常用于获取嵌入页面中的第三方页面数据。一个页面发送消息，另一个页面判断来源并接收消息")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发送消息端")]),t._v("\nwindow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("postMessage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'message'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://test.com'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 接收消息端")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" mc "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageChannel")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'message'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" origin "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("origin "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" event"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("originalEvent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("origin\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("origin "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://test.com'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'验证通过'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_19-存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-存储","aria-hidden":"true"}},[this._v("#")]),this._v(" 19 存储")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("涉及面试题：有几种方式可以实现存储功能，分别有什么优缺点？什么是 "),s("code",[this._v("Service Worker")]),this._v("？")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("cookie，localStorage，sessionStorage，indexDB")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("table",[n("thead",[n("tr",[n("th",[t._v("特性")]),t._v(" "),n("th",[t._v("cookie")]),t._v(" "),n("th",[t._v("localStorage")]),t._v(" "),n("th",[t._v("sessionStorage")]),t._v(" "),n("th",[t._v("indexDB")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("数据生命周期")]),t._v(" "),n("td",[t._v("一般由服务器生成，可以设置过期时间")]),t._v(" "),n("td",[t._v("除非被清理，否则一直存在")]),t._v(" "),n("td",[t._v("页面关闭就清理")]),t._v(" "),n("td",[t._v("除非被清理，否则一直存在")])]),t._v(" "),n("tr",[n("td",[t._v("数据存储大小")]),t._v(" "),n("td",[n("code",[t._v("4K")])]),t._v(" "),n("td",[n("code",[t._v("5M")])]),t._v(" "),n("td",[n("code",[t._v("5M")])]),t._v(" "),n("td",[t._v("无限")])]),t._v(" "),n("tr",[n("td",[t._v("与服务端通信")]),t._v(" "),n("td",[t._v("每次都会携带在 "),n("code",[t._v("header")]),t._v(" 中，对于请求性能影响")]),t._v(" "),n("td",[t._v("不参与")]),t._v(" "),n("td",[t._v("不参与")]),t._v(" "),n("td",[t._v("不参与")])])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("从上表可以看到，"),n("code",[t._v("cookie")]),t._v(" 已经不建议用于存储。如果没有大量数据存储需求的话，可以使用 "),n("code",[t._v("localStorage")]),t._v(" 和 "),n("code",[t._v("sessionStorage")]),t._v(" 。对于不怎么改变的数据尽量使用 "),n("code",[t._v("localStorage")]),t._v(" 存储，否则可以用 "),n("code",[t._v("sessionStorage")]),t._v("存储")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("对于 cookie 来说，我们还需要注意安全性。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("table",[n("thead",[n("tr",[n("th",[t._v("属性")]),t._v(" "),n("th",[t._v("作用")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[n("code",[t._v("value")])]),t._v(" "),n("td",[t._v("如果用于保存用户登录态，应该将该值加密，不能使用明文的用户标识")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("http-only")])]),t._v(" "),n("td",[t._v("不能通过 "),n("code",[t._v("JS")]),t._v(" 访问 "),n("code",[t._v("Cookie")]),t._v("，减少 "),n("code",[t._v("XSS")]),t._v(" 攻击")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("secure")])]),t._v(" "),n("td",[t._v("只能在协议为 "),n("code",[t._v("HTTPS")]),t._v(" 的请求中携带")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("same-site")])]),t._v(" "),n("td",[t._v("规定浏览器不能在跨域请求中携带 "),n("code",[t._v("Cookie")]),t._v("，减少 "),n("code",[t._v("CSRF")]),t._v(" 攻击")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("Service Worker")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("Service Worker")]),t._v(" 是运行在浏览器背后的独立线程，一般可以用来实现缓存功能。使用 "),n("code",[t._v("Service Worker")]),t._v("的话，传输协议必须为 "),n("code",[t._v("HTTPS")]),t._v("。因为 "),n("code",[t._v("Service Worker")]),t._v(" 中涉及到请求拦截，所以必须使用 "),n("code",[t._v("HTTPS")]),t._v(" 协议来保障安全")]),t._v(" "),n("li",[n("code",[t._v("Service Worker")]),t._v(" 实现缓存功能一般分为三个步骤：首先需要先注册 "),n("code",[t._v("Service Worker")]),t._v("，然后监听到 "),n("code",[t._v("install")]),t._v(" 事件以后就可以缓存需要的文件，那么在下次用户访问的时候就可以通过拦截请求的方式查询是否存在缓存，存在缓存的话就可以直接读取缓存文件，否则就去请求数据。以下是这个步骤的实现：")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// index.js")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("navigator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("serviceWorker"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  navigator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("serviceWorker\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("register")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sw.js'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("registration"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'service worker 注册成功'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'servcie worker 注册失败'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// sw.js")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 监听 `install` 事件，回调中缓存所需文件")]),t._v("\nself"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'install'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("waitUntil")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    caches"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my-cache'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cache"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cache"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addAll")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./index.html'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./index.js'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拦截所有请求事件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果缓存中已经有请求的数据就直接用缓存，否则去请求数据")]),t._v("\nself"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fetch'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("respondWith")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    caches"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" response\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fetch source'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("打开页面，可以在开发者工具中的 "),s("code",[this._v("Application")]),this._v(" 看到 "),s("code",[this._v("Service Worker")]),this._v(" 已经启动了")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/3/28/1626b1e8eba68e1c",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("在 "),s("code",[this._v("Cache")]),this._v(" 中也可以发现我们所需的文件已被缓存")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/3/28/1626b20dfc4fcd26",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("当我们重新刷新页面可以发现我们缓存的数据是从 "),s("code",[this._v("Service Worker")]),this._v(" 中读取的")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/3/28/1626b20e4f8f3257",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_20-浏览器缓存机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-浏览器缓存机制","aria-hidden":"true"}},[this._v("#")]),this._v(" 20 浏览器缓存机制")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("注意：该知识点属于性能优化领域，并且整一章节都是一个面试题")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("缓存可以说是性能优化中简单高效的一种优化方式了，它可以显著减少网络传输所带来的损耗。")]),this._v(" "),s("li",[this._v("对于一个数据请求来说，可以分为发起网络请求、后端处理、浏览器响应三个步骤。浏览器缓存可以帮助我们在第一和第三步骤中优化性能。比如说直接使用缓存而不发起请求，或者发起了请求但后端存储的数据和前端一致，那么就没有必要再将数据回传回来，这样就减少了响应数据。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("接下来的内容中我们将通过以下几个部分来探讨浏览器缓存机制：")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("缓存位置")]),this._v(" "),s("li",[this._v("缓存策略")]),this._v(" "),s("li",[this._v("实际场景应用缓存策略")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_20-1-缓存位置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-1-缓存位置","aria-hidden":"true"}},[this._v("#")]),this._v(" 20.1 缓存位置")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("从缓存位置上来说分为四种，并且各自有优先级，当依次查找缓存且都没有命中的时候，才会去请求网络")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ol",[n("li",[n("code",[t._v("Service Worker")])]),t._v(" "),n("li",[n("code",[t._v("Memory Cache")])]),t._v(" "),n("li",[n("code",[t._v("Disk Cache")])]),t._v(" "),n("li",[n("code",[t._v("Push Cache")])]),t._v(" "),n("li",[t._v("网络请求")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("1. Service Worker")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("service Worker")]),t._v(" 的缓存与浏览器其他内建的缓存机制不同，它可以让我们自由控制缓存哪些文件、如何匹配缓存、如何读取缓存，并且缓存是持续性的。")]),t._v(" "),n("li",[t._v("当 "),n("code",[t._v("Service Worker")]),t._v(" 没有命中缓存的时候，我们需要去调用 "),n("code",[t._v("fetch")]),t._v(" 函数获取数据。也就是说，如果我们没有在 "),n("code",[t._v("Service Worker")]),t._v(" 命中缓存的话，会根据缓存查找优先级去查找数据。但是不管我们是从 "),n("code",[t._v("Memory Cache")]),t._v(" 中还是从网络请求中获取的数据，浏览器都会显示我们是从 "),n("code",[t._v("Service Worker")]),t._v(" 中获取的内容。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("2. Memory Cache")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v("Memory Cache")]),this._v(" 也就是内存中的缓存，读取内存中的数据肯定比磁盘快。但是内存缓存虽然读取高效，可是缓存持续性很短，会随着进程的释放而释放。 一旦我们关闭 "),s("code",[this._v("Tab")]),this._v(" 页面，内存中的缓存也就被释放了。")]),this._v(" "),s("li",[this._v("当我们访问过页面以后，再次刷新页面，可以发现很多数据都来自于内存缓存")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/12/5/1677db8003dc8311",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("那么既然内存缓存这么高效，我们是不是能让数据都存放在内存中呢？")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("先说结论，这是不可能的。首先计算机中的内存一定比硬盘容量小得多，操作系统需要精打细算内存的使用，所以能让我们使用的内存必然不多。内存中其实可以存储大部分的文件，比如说 "),n("code",[t._v("JS")]),t._v("、"),n("code",[t._v("HTML")]),t._v("、"),n("code",[t._v("CSS")]),t._v("、图片等等")]),t._v(" "),n("li",[t._v("当然，我通过一些实践和猜测也得出了一些结论：")]),t._v(" "),n("li",[t._v("对于大文件来说，大概率是不存储在内存中的，反之优先当前系统内存使用率高的话，文件优先存储进硬盘")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("3. Disk Cache")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("Disk Cache")]),t._v(" 也就是存储在硬盘中的缓存，读取速度慢点，但是什么都能存储到磁盘中，比之 "),n("code",[t._v("Memory Cache")]),t._v(" 胜在容量和存储时效性上。")]),t._v(" "),n("li",[t._v("在所有浏览器缓存中，"),n("code",[t._v("Disk Cache")]),t._v(" 覆盖面基本是最大的。它会根据 ·HTTP Herder· 中的字段判断哪些资源需要缓存，哪些资源可以不请求直接使用，哪些资源已经过期需要重新请求。并且即使在跨站点的情况下，相同地址的资源一旦被硬盘缓存下来，就不会再次去请求数据")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("4. Push Cache")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("Push Cache")]),t._v(" 是 "),n("code",[t._v("HTTP/2")]),t._v(" 中的内容，当以上三种缓存都没有命中时，它才会被使用。并且缓存时间也很短暂，只在会话（"),n("code",[t._v("Session")]),t._v("）中存在，一旦会话结束就被释放。")]),t._v(" "),n("li",[n("code",[t._v("Push Cache")]),t._v(" 在国内能够查到的资料很少，也是因为 "),n("code",[t._v("HTTP/2")]),t._v(" 在国内不够普及，但是 "),n("code",[t._v("HTTP/2")]),t._v(" 将会是日后的一个趋势")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("结论")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("所有的资源都能被推送，但是 "),n("code",[t._v("Edge")]),t._v(" 和 "),n("code",[t._v("Safari")]),t._v(" 浏览器兼容性不怎么好")]),t._v(" "),n("li",[t._v("可以推送 "),n("code",[t._v("no-cache")]),t._v(" 和 "),n("code",[t._v("no-store")]),t._v(" 的资源")]),t._v(" "),n("li",[t._v("一旦连接被关闭，"),n("code",[t._v("Push Cache")]),t._v(" 就被释放")]),t._v(" "),n("li",[t._v("多个页面可以使用相同的 "),n("code",[t._v("HTTP/2")]),t._v(" 连接，也就是说能使用同样的缓存")]),t._v(" "),n("li",[n("code",[t._v("Push Cache")]),t._v(" 中的缓存只能被使用一次")]),t._v(" "),n("li",[t._v("浏览器可以拒绝接受已经存在的资源推送")]),t._v(" "),n("li",[t._v("你可以给其他域名推送资源")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("5. 网络请求")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("如果所有缓存都没有命中的话，那么只能发起请求来获取资源了。")]),this._v(" "),s("li",[this._v("那么为了性能上的考虑，大部分的接口都应该选择好缓存策略，接下来我们就来学习缓存策略这部分的内容")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_20-2-缓存策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-2-缓存策略","aria-hidden":"true"}},[this._v("#")]),this._v(" 20.2 缓存策略")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("通常浏览器缓存策略分为两种：强缓存和协商缓存，并且缓存策略都是通过设置 "),s("code",[this._v("HTTP Header")]),this._v(" 来实现的")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"_20-2-1-强缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-2-1-强缓存","aria-hidden":"true"}},[this._v("#")]),this._v(" 20.2.1 强缓存")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("强缓存可以通过设置两种 "),n("code",[t._v("HTTP Header")]),t._v(" 实现："),n("code",[t._v("Expires")]),t._v(" 和 "),n("code",[t._v("Cache-Control")]),t._v(" 。强缓存表示在缓存期间不需要请求，"),n("code",[t._v("state code")]),t._v("为 "),n("code",[t._v("200")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("Expires")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("Expires: Wed, 22 Oct 2018 08:41:00 GMT\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[n("code",[t._v("Expires")]),t._v(" 是 "),n("code",[t._v("HTTP/1")]),t._v(" 的产物，表示资源会在 "),n("code",[t._v("Wed, 22 Oct 2018 08:41:00 GMT")]),t._v(" 后过期，需要再次请求。并且 "),n("code",[t._v("Expires")]),t._v(" 受限于本地时间，如果修改了本地时间，可能会造成缓存失效。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("Cache-control")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("Cache-control: max-age=30\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("Cache-Control")]),t._v(" 出现于 "),n("code",[t._v("HTTP/1.1")]),t._v("，优先级高于 "),n("code",[t._v("Expires")]),t._v(" 。该属性值表示资源会在 "),n("code",[t._v("30")]),t._v(" 秒后过期，需要再次请求。")]),t._v(" "),n("li",[n("code",[t._v("Cache-Control")]),t._v(" 可以在请求头或者响应头中设置，并且可以组合使用多种指令")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/12/6/1678234a1ed20487",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("从图中我们可以看到，我们可以将多个指令配合起来一起使用，达到多个目的。比如说我们希望资源能被缓存下来，并且是客户端和代理服务器都能缓存，还能设置缓存失效时间等")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("一些常见指令的作用")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/12/5/1677ef2cd7bf1bba",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"_20-2-2-协商缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-2-2-协商缓存","aria-hidden":"true"}},[this._v("#")]),this._v(" 20.2.2 协商缓存")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("如果缓存过期了，就需要发起请求验证资源是否有更新。协商缓存可以通过设置两种 "),n("code",[t._v("HTTP Header")]),t._v(" 实现："),n("code",[t._v("Last-Modified")]),t._v(" 和 "),n("code",[t._v("ETag")])]),t._v(" "),n("li",[t._v("当浏览器发起请求验证资源时，如果资源没有做改变，那么服务端就会返回 "),n("code",[t._v("304")]),t._v(" 状态码，并且更新浏览器缓存有效期。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/12/6/16782357baddf1c6",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("Last-Modified 和 If-Modified-Since")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[n("code",[t._v("Last-Modified")]),t._v(" 表示本地文件最后修改日期，"),n("code",[t._v("If-Modified-Since")]),t._v(" 会将 "),n("code",[t._v("Last-Modified")]),t._v(" 的值发送给服务器，询问服务器在该日期后资源是否有更新，有更新的话就会将新的资源发送回来，否则返回 "),n("code",[t._v("304")]),t._v(" 状态码。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("但是 "),s("code",[this._v("Last-Modified")]),this._v("存在一些弊端：")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("如果本地打开缓存文件，即使没有对文件进行修改，但还是会造成 "),n("code",[t._v("Last-Modified")]),t._v(" 被修改，服务端不能命中缓存导致发送相同的资源")]),t._v(" "),n("li",[t._v("因为 "),n("code",[t._v("Last-Modified")]),t._v(" 只能以秒计时，如果在不可感知的时间内修改完成文件，那么服务端会认为资源还是命中了，不会返回正确的资源\n因为以上这些弊端，所以在 "),n("code",[t._v("HTTP / 1.1")]),t._v(" 出现了 "),n("code",[t._v("ETag")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("ETag 和 If-None-Match")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("ETag")]),t._v(" 类似于文件指纹，"),n("code",[t._v("If-None-Match")]),t._v(" 会将当前 "),n("code",[t._v("ETag")]),t._v(" 发送给服务器，询问该资源 "),n("code",[t._v("ETag")]),t._v(" 是否变动，有变动的话就将新的资源发送回来。并且 "),n("code",[t._v("ETag")]),t._v("优先级比 "),n("code",[t._v("Last-Modified")]),t._v(" 高。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("以上就是缓存策略的所有内容了，看到这里，不知道你是否存在这样一个疑问。如果什么缓存策略都没设置，那么浏览器会怎么处理？")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("对于这种情况，浏览器会采用一个启发式的算法，通常会取响应头中的 "),s("code",[this._v("Date")]),this._v(" 减去 "),s("code",[this._v("Last-Modified")]),this._v(" 值的 "),s("code",[this._v("10%")]),this._v(" 作为缓存时间。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_20-3-实际场景应用缓存策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-3-实际场景应用缓存策略","aria-hidden":"true"}},[this._v("#")]),this._v(" 20.3 实际场景应用缓存策略")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("频繁变动的资源")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("对于频繁变动的资源，首先需要使用 "),s("code",[this._v("Cache-Control: no-cache")]),this._v(" 使浏览器每次都请求服务器，然后配合 "),s("code",[this._v("ETag")]),this._v(" 或者 "),s("code",[this._v("Last-Modified")]),this._v(" 来验证资源是否有效。这样的做法虽然不能节省请求数量，但是能显著减少响应数据大小。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("代码文件")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("这里特指除了 "),s("code",[this._v("HTML")]),this._v(" 外的代码文件，因为 "),s("code",[this._v("HTML")]),this._v(" 文件一般不缓存或者缓存时间很短。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("一般来说，现在都会使用工具来打包代码，那么我们就可以对文件名进行哈希处理，只有当代码修改后才会生成新的文件名。基于此，我们就可以给代码文件设置缓存有效期一年 "),s("code",[this._v("Cache-Control: max-age=31536000")]),this._v("，这样只有当 "),s("code",[this._v("HTML")]),this._v(" 文件中引入的文件名发生了改变才会去下载最新的代码文件，否则就一直使用缓存")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("更多缓存知识详解 http://blog.poetries.top/2019/01/02/browser-cache")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_21-浏览器渲染原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-浏览器渲染原理","aria-hidden":"true"}},[this._v("#")]),this._v(" 21 浏览器渲染原理")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("注意：该章节都是一个面试题。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_21-1-渲染过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-1-渲染过程","aria-hidden":"true"}},[this._v("#")]),this._v(" 21.1 渲染过程")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("1. 浏览器接收到 HTML 文件并转换为 DOM 树")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("当我们打开一个网页时，浏览器都会去请求对应的 "),n("code",[t._v("HTML")]),t._v(" 文件。虽然平时我们写代码时都会分为 "),n("code",[t._v("JS")]),t._v("、"),n("code",[t._v("CSS")]),t._v("、"),n("code",[t._v("HTML")]),t._v(" 文件，也就是字符串，但是计算机硬件是不理解这些字符串的，所以在网络中传输的内容其实都是 "),n("code",[t._v("0")]),t._v(" 和 "),n("code",[t._v("1")]),t._v(" 这些字节数据。当浏览器接收到这些字节数据以后，它会将这些字节数据转换为字符串，也就是我们写的代码。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/11/27/16754281e59587f3",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("当数据转换为字符串以后，浏览器会先将这些字符串通过词法分析转换为标记（"),s("code",[this._v("token")]),this._v("），这一过程在词法分析中叫做标记化（"),s("code",[this._v("tokenization")]),this._v("）")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/11/27/16754288f37a5347",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("那么什么是标记呢？这其实属于编译原理这一块的内容了。简单来说，标记还是字符串，是构成代码的最小单位。这一过程会将代码分拆成一块块，并给这些内容打上标记，便于理解这些最小单位的代码是什么意思")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/11/27/167540a7b5cef612",alt:""}})])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("当结束标记化后，这些标记会紧接着转换为 "),n("code",[t._v("Node")]),t._v("，最后这些 "),n("code",[t._v("Node")]),t._v(" 会根据不同 "),n("code",[t._v("Node")]),t._v(" 之前的联系构建为一颗 "),n("code",[t._v("DOM")]),t._v(" 树")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/11/27/1675416cbea98c3c",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("以上就是浏览器从网络中接收到 "),s("code",[this._v("HTML")]),this._v(" 文件然后一系列的转换过程")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/11/27/167542b09875a74a",alt:""}})])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("当然，在解析 "),n("code",[t._v("HTML")]),t._v(" 文件的时候，浏览器还会遇到 "),n("code",[t._v("CSS")]),t._v(" 和 "),n("code",[t._v("JS")]),t._v(" 文件，这时候浏览器也会去下载并解析这些文件，接下来就让我们先来学习浏览器如何解析 "),n("code",[t._v("CSS")]),t._v(" 文件")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("2. 将 CSS 文件转换为 CSSOM 树")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("其实转换 "),s("code",[this._v("CSS")]),this._v(" 到 "),s("code",[this._v("CSSOM")]),this._v(" 树的过程和上一小节的过程是极其类似的")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/11/27/167542a9af5f193f",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("在这一过程中，浏览器会确定下每一个节点的样式到底是什么，并且这一过程其实是很消耗资源的。因为样式你可以自行设置给某个节点，也可以通过继承获得。在这一过程中，浏览器得递归 "),s("code",[this._v("CSSOM")]),this._v(" 树，然后确定具体的元素到底是什么样式。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token style language-css"}},[t._v("\n  "),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("span")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div > a > span")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("对于第一种设置样式的方式来说，浏览器只需要找到页面中所有的 "),n("code",[t._v("span")]),t._v(" 标签然后设置颜色，但是对于第二种设置样式的方式来说，浏览器首先需要找到所有的 "),n("code",[t._v("span")]),t._v(" 标签，然后找到 "),n("code",[t._v("span")]),t._v(" 标签上的 "),n("code",[t._v("a")]),t._v(" 标签，最后再去找到 "),n("code",[t._v("div")]),t._v(" 标签，然后给符合这种条件的 "),n("code",[t._v("span")]),t._v(" 标签设置颜色，这样的递归过程就很复杂。所以我们应该尽可能的避免写过于具体的 "),n("code",[t._v("CSS")]),t._v(" 选择器，然后对于 "),n("code",[t._v("HTML")]),t._v(" 来说也尽量少的添加无意义标签，保证层级扁平")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("3. 生成渲染树")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("当我们生成 "),s("code",[this._v("DOM")]),this._v(" 树和 "),s("code",[this._v("CSSOM")]),this._v(" 树以后，就需要将这两棵树组合为渲染树")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/11/27/16754488529c48bd",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("在这一过程中，不是简单的将两者合并就行了。渲染树只会包括需要显示的节点和这些节点的样式信息，如果某个节点是 "),s("code",[this._v("display: none")]),this._v(" 的，那么就不会在渲染树中显示。")]),this._v(" "),s("li",[this._v("当浏览器生成渲染树以后，就会根据渲染树来进行布局（也可以叫做回流），然后调用 "),s("code",[this._v("GPU")]),this._v("绘制，合成图层，显示在屏幕上。对于这一部分的内容因为过于底层，还涉及到了硬件相关的知识，这里就不再继续展开内容了。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_21-2-为什么操作-dom-慢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-2-为什么操作-dom-慢","aria-hidden":"true"}},[this._v("#")]),this._v(" 21.2 为什么操作 DOM 慢")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("想必大家都听过操作 DOM 性能很差，但是这其中的原因是什么呢？")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("因为 "),n("code",[t._v("DOM")]),t._v("是属于渲染引擎中的东西，而 "),n("code",[t._v("JS")]),t._v(" 又是 "),n("code",[t._v("JS")]),t._v(" 引擎中的东西。当我们通过 "),n("code",[t._v("JS")]),t._v(" 操作 "),n("code",[t._v("DOM")]),t._v(" 的时候，其实这个操作涉及到了两个线程之间的通信，那么势必会带来一些性能上的损耗。操作 "),n("code",[t._v("DOM")]),t._v(" 次数一多，也就等同于一直在进行线程之间的通信，并且操作 "),n("code",[t._v("DOM")]),t._v(" 可能还会带来重绘回流的情况，所以也就导致了性能上的问题。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("经典面试题：插入几万个 DOM，如何实现页面不卡顿？")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("对于这道题目来说，首先我们肯定不能一次性把几万个 "),n("code",[t._v("DOM")]),t._v(" 全部插入，这样肯定会造成卡顿，所以解决问题的重点应该是如何分批次部分渲染 "),n("code",[t._v("DOM")]),t._v("。大部分人应该可以想到通过 "),n("code",[t._v("requestAnimationFrame")]),t._v(" 的方式去循环的插入 "),n("code",[t._v("DOM")]),t._v("，其实还有种方式去解决这个问题：虚拟滚动（"),n("code",[t._v("virtualized scroller")]),t._v("）。")]),t._v(" "),n("li",[t._v("这种技术的原理就是只渲染可视区域内的内容，非可见区域的那就完全不渲染了，当用户在滚动的时候就实时去替换渲染的内容")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/12/15/167b1c6887ecbba7",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("从上图中我们可以发现，即使列表很长，但是渲染的 "),s("code",[this._v("DOM")]),this._v(" 元素永远只有那么几个，当我们滚动页面的时候就会实时去更新 "),s("code",[this._v("DOM")]),this._v("，这个技术就能顺利解决这道经典面试题")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_21-3-什么情况阻塞渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-3-什么情况阻塞渲染","aria-hidden":"true"}},[this._v("#")]),this._v(" 21.3 什么情况阻塞渲染")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("首先渲染的前提是生成渲染树，所以 "),n("code",[t._v("HTML")]),t._v(" 和 "),n("code",[t._v("CSS")]),t._v(" 肯定会阻塞渲染。如果你想渲染的越快，你越应该降低一开始需要渲染的文件大小，并且扁平层级，优化选择器。")]),t._v(" "),n("li",[t._v("然后当浏览器在解析到 "),n("code",[t._v("script")]),t._v(" 标签时，会暂停构建 "),n("code",[t._v("DOM")]),t._v("，完成后才会从暂停的地方重新开始。也就是说，如果你想首屏渲染的越快，就越不应该在首屏就加载 "),n("code",[t._v("JS")]),t._v("文件，这也是都建议将 "),n("code",[t._v("script")]),t._v(" 标签放在 "),n("code",[t._v("body")]),t._v(" 标签底部的原因。")]),t._v(" "),n("li",[t._v("当然在当下，并不是说 "),n("code",[t._v("script")]),t._v(" 标签必须放在底部，因为你可以给 "),n("code",[t._v("script")]),t._v(" 标签添加 "),n("code",[t._v("defer")]),t._v(" 或者 "),n("code",[t._v("async")]),t._v(" 属性。")]),t._v(" "),n("li",[t._v("当 "),n("code",[t._v("script")]),t._v(" 标签加上 "),n("code",[t._v("defer")]),t._v(" 属性以后，表示该 "),n("code",[t._v("JS")]),t._v(" 文件会并行下载，但是会放到 "),n("code",[t._v("HTML")]),t._v(" 解析完成后顺序执行，所以对于这种情况你可以把 "),n("code",[t._v("script")]),t._v("标签放在任意位置。")]),t._v(" "),n("li",[t._v("对于没有任何依赖的 "),n("code",[t._v("JS")]),t._v(" 文件可以加上 "),n("code",[t._v("async")]),t._v(" 属性，表示 "),n("code",[t._v("JS")]),t._v(" 文件下载和解析不会阻塞渲染。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_21-4-重绘（repaint）和回流（reflow）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-4-重绘（repaint）和回流（reflow）","aria-hidden":"true"}},[this._v("#")]),this._v(" 21.4 重绘（Repaint）和回流（Reflow）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("重绘和回流会在我们设置节点样式时频繁出现，同时也会很大程度上影响性能。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("重绘是当节点需要更改外观而不会影响布局的，比如改变 "),s("code",[this._v("color")]),this._v(" 就叫称为重绘")]),this._v(" "),s("li",[this._v("回流是布局或者几何属性需要改变就称为回流。")]),this._v(" "),s("li",[this._v("回流必定会发生重绘，重绘不一定会引发回流。回流所需的成本比重绘高的多，改变父节点里的子节点很可能会导致父节点的一系列回流。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("以下几个动作可能会导致性能问题")]),this._v("：")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("改变 "),n("code",[t._v("window")]),t._v(" 大小")]),t._v(" "),n("li",[t._v("改变字体")]),t._v(" "),n("li",[t._v("添加或删除样式")]),t._v(" "),n("li",[t._v("文字改变")]),t._v(" "),n("li",[t._v("定位或者浮动")]),t._v(" "),n("li",[t._v("盒模型")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("并且很多人不知道的是，重绘和回流其实也和 "),s("code",[this._v("Eventloop")]),this._v(" 有关。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("当 "),n("code",[t._v("Eventloop")]),t._v(" 执行完 "),n("code",[t._v("Microtasks")]),t._v(" 后，会判断 "),n("code",[t._v("document")]),t._v(" 是否需要更新，因为浏览器是 "),n("code",[t._v("60Hz")]),t._v(" 的刷新率，每 "),n("code",[t._v("16.6ms")]),t._v(" 才会更新一次。")]),t._v(" "),n("li",[t._v("然后判断是否有 "),n("code",[t._v("resize")]),t._v(" 或者 "),n("code",[t._v("scroll")]),t._v(" 事件，有的话会去触发事件，所以 "),n("code",[t._v("resize")]),t._v(" 和 "),n("code",[t._v("scroll")]),t._v(" 事件也是至少 "),n("code",[t._v("16ms")]),t._v(" 才会触发一次，并且自带节流功能。")]),t._v(" "),n("li",[t._v("判断是否触发了 "),n("code",[t._v("media query")])]),t._v(" "),n("li",[t._v("更新动画并且发送事件")]),t._v(" "),n("li",[t._v("判断是否有全屏操作事件")]),t._v(" "),n("li",[t._v("执行 "),n("code",[t._v("requestAnimationFrame")]),t._v("回调")]),t._v(" "),n("li",[t._v("执行 "),n("code",[t._v("IntersectionObserver")]),t._v(" 回调，该方法用于判断元素是否可见，可以用于懒加载上，但是兼容性不好\n更新界面")]),t._v(" "),n("li",[t._v("以上就是一帧中可能会做的事情。如果在一帧中有空闲时间，就会去执行 "),n("code",[t._v("requestIdleCallback")]),t._v("回调")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_21-5-减少重绘和回流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-5-减少重绘和回流","aria-hidden":"true"}},[this._v("#")]),this._v(" 21.5 减少重绘和回流")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("使用 "),s("code",[this._v("transform")]),this._v(" 替代 "),s("code",[this._v("top")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token style language-css"}},[t._v("\n  "),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".test")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absolute"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("top")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token script language-javascript"}},[t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 引起回流")]),t._v("\n    document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.test'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'100px'")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"2"}},[s("li",[this._v("使用 "),s("code",[this._v("visibility")]),this._v(" 替换"),s("code",[this._v("display: none")]),this._v(" ，因为前者只会引起重绘，后者会引发回流（改变了布局）")]),this._v(" "),s("li",[this._v("不要把节点的属性值放在一个循环里当成循环里的变量")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取 offsetTop 会导致回流，因为需要去获取正确的值")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.test'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetTop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ol",{attrs:{start:"4"}},[n("li",[t._v("不要使用 "),n("code",[t._v("table")]),t._v(" 布局，可能很小的一个小改动会造成整个 "),n("code",[t._v("table")]),t._v(" 的重新布局")]),t._v(" "),n("li",[t._v("动画实现的速度的选择，动画速度越快，回流次数越多，也可以选择使用 "),n("code",[t._v("requestAnimationFrame")])]),t._v(" "),n("li",[n("code",[t._v("CSS")]),t._v(" 选择符从右往左匹配查找，避免节点层级过多")]),t._v(" "),n("li",[t._v("将频繁重绘或者回流的节点设置为图层，图层能够阻止该节点的渲染行为影响别的节点。比如对于 "),n("code",[t._v("video")]),t._v(" 标签来说，浏览器会自动将该节点变为图层。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/3/29/1626fb6f33a6f9d7",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("设置节点为图层的方式有很多，我们可以通过以下几个常用属性可以生成新图层")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v("will-change")])]),this._v(" "),s("li",[s("code",[this._v("video")]),this._v("、"),s("code",[this._v("iframe")]),this._v(" 标签")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_22-安全防范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-安全防范","aria-hidden":"true"}},[this._v("#")]),this._v(" 22 安全防范")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_22-1-xss"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-1-xss","aria-hidden":"true"}},[this._v("#")]),this._v(" 22.1 XSS")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("涉及面试题：什么是 "),s("code",[this._v("XSS")]),this._v(" 攻击？如何防范 "),s("code",[this._v("XSS")]),this._v(" 攻击？什么是 "),s("code",[this._v("CSP")]),this._v("？")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v("XSS")]),this._v(" 简单点来说，就是攻击者想尽一切办法将可以执行的代码注入到网页中。")]),this._v(" "),s("li",[s("code",[this._v("XSS")]),this._v(" 可以分为多种类型，但是总体上我认为分为两类：持久型和非持久型。")]),this._v(" "),s("li",[this._v("持久型也就是攻击的代码被服务端写入进数据库中，这种攻击危害性很大，因为如果网站访问量很大的话，就会导致大量正常访问页面的用户都受到攻击。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("举个例子，对于评论功能来说，就得防范持久型 "),s("code",[this._v("XSS")]),this._v(" 攻击，因为我可以在评论中输入以下内容")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/1480597-4d0534470dcfe615.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"image.png"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("这种情况如果前后端没有做好防御的话，这段评论就会被存储到数据库中，这样每个打开该页面的用户都会被攻击到。")]),this._v(" "),s("li",[this._v("非持久型相比于前者危害就小的多了，一般通过修改 "),s("code",[this._v("URL")]),this._v(" 参数的方式加入攻击代码，诱导用户访问链接从而进行攻击。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("举个例子，如果页面需要从 "),s("code",[this._v("URL")]),this._v(" 中获取某些参数作为内容的话，不经过过滤就会导致攻击代码被执行")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- http://www.domain.com?name=<script>alert(1)<\/script> --\x3e")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{name}}"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("                                                  \n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("但是对于这种攻击方式来说，如果用户使用 "),s("code",[this._v("Chrome")]),this._v(" 这类浏览器的话，浏览器就能自动帮助用户防御攻击。但是我们不能因此就不防御此类攻击了，因为我不能确保用户都使用了该类浏览器。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/12/2/1676d5e1a09c8367",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("对于 "),s("code",[this._v("XSS")]),this._v(" 攻击来说，通常有两种方式可以用来防御。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[s("strong",[this._v("转义字符")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("首先，对于用户的输入应该是永远不信任的。最普遍的做法就是转义输入输出的内容，对于引号、尖括号、斜杠进行转义")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("escape")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  str "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/&/g")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'&amp;'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  str "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/</g")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'&lt;'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  str "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/>/g")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'&gt;'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  str "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v('/"/g')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'&quto;'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  str "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/'/g")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'&#39;'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  str "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/`/g")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'&#96;'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  str "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\//g")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'&#x2F;'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" str\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("通过转义可以将攻击代码 "),s("code",[this._v("<script>alert(1)<\/script>")]),this._v(" 变成")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[this._v("// -> &lt;script&gt;alert(1)&lt;&#x2F;script&gt;")]),this._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[this._v("escape")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[this._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[this._v("'<script>alert(1)<\/script>'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[this._v(")")]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("但是对于显示富文本来说，显然不能通过上面的办法来转义所有字符，因为这样会把需要的格式也过滤掉。对于这种情况，通常采用白名单过滤的办法，当然也可以通过黑名单过滤，但是考虑到需要过滤的标签和标签属性实在太多，更加推荐使用白名单的方式")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" xss "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xss'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" html "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("xss")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'<h1 id="title">XSS Demo</h1><script>alert("xss");<\/script>\'')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// -> <h1>XSS Demo</h1>&lt;script&gt;alert("xss");&lt;/script&gt;')]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("html"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("以上示例使用了 "),s("code",[this._v("js-xss")]),this._v(" 来实现，可以看到在输出中保留了 "),s("code",[this._v("h1")]),this._v(" 标签且过滤了 "),s("code",[this._v("script")]),this._v("标签")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"2"}},[s("li",[s("strong",[this._v("CSP")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("CSP")]),this._v(" 本质上就是建立白名单，开发者明确告诉浏览器哪些外部资源可以加载和执行。我们只需要配置规则，如何拦截是由浏览器自己实现的。我们可以通过这种方式来尽量减少 "),s("code",[this._v("XSS")]),this._v(" 攻击。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("通常可以通过两种方式来开启 CSP")]),this._v("：")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("设置 "),n("code",[t._v("HTTP Header")]),t._v(" 中的 "),n("code",[t._v("Content-Security-Policy")])]),t._v(" "),n("li",[t._v("设置 "),n("code",[t._v("meta")]),t._v(" 标签的方式 "),n("code",[t._v('<meta http-equiv="Content-Security-Policy">')])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这里以设置 "),s("code",[this._v("HTTP Header")]),this._v(" 来举例")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("只允许加载本站资源")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("Content-Security-Policy: default-src ‘self’\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("只允许加载 HTTPS 协议图片")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("Content-Security-Policy: img-src https://*\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("允许加载任何来源框架")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("Content-Security-Policy: child-src 'none'\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("对于这种方式来说，只要开发者配置了正确的规则，那么即使网站存在漏洞，攻击者也不能执行它的攻击代码，并且 "),s("code",[this._v("CSP")]),this._v(" 的兼容性也不错。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/12/2/1676d8215a3d1f5b",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_22-2-csrf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-2-csrf","aria-hidden":"true"}},[this._v("#")]),this._v(" 22.2 CSRF")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("涉及面试题：什么是 "),s("code",[this._v("CSRF")]),this._v(" 攻击？如何防范 "),s("code",[this._v("CSRF")]),this._v(" 攻击？")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("CSRF")]),this._v(" 中文名为跨站请求伪造。原理就是攻击者构造出一个后端请求地址，诱导用户点击或者通过某些途径自动发起请求。如果用户是在登录状态下的话，后端就以为是用户在操作，从而进行相应的逻辑。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("举个例子，假设网站中有一个通过 "),s("code",[this._v("GET")]),this._v(" 请求提交用户评论的接口，那么攻击者就可以在钓鱼网站中加入一个图片，图片的地址就是评论接口")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://www.domain.com/xxx?comment="),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("attack"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("那么你是否会想到使用 "),s("code",[this._v("POST")]),this._v(" 方式提交请求是不是就没有这个问题了呢？其实并不是，使用这种方式也不是百分百安全的，攻击者同样可以诱导用户进入某个页面，在页面中通过表单提交 "),s("code",[this._v("POST")]),this._v(" 请求。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("如何防御")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("Get")]),t._v(" 请求不对数据进行修改")]),t._v(" "),n("li",[t._v("不让第三方网站访问到用户 "),n("code",[t._v("Cookie")])]),t._v(" "),n("li",[t._v("阻止第三方网站请求接口")]),t._v(" "),n("li",[t._v("请求时附带验证信息，比如验证码或者 "),n("code",[t._v("Token")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("SameSite")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("可以对 "),n("code",[t._v("Cookie")]),t._v(" 设置 "),n("code",[t._v("SameSite")]),t._v(" 属性。该属性表示 "),n("code",[t._v("Cookie")]),t._v(" 不随着跨域请求发送，可以很大程度减少 "),n("code",[t._v("CSRF")]),t._v(" 的攻击，但是该属性目前并不是所有浏览器都兼容。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("验证 Referer")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("对于需要防范 "),s("code",[this._v("CSRF")]),this._v(" 的请求，我们可以通过验证 "),s("code",[this._v("Referer")]),this._v(" 来判断该请求是否为第三方网站发起的。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("Token")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("服务器下发一个随机 "),s("code",[this._v("Token")]),this._v("，每次发起请求时将 "),s("code",[this._v("Token")]),this._v(" 携带上，服务器验证 "),s("code",[this._v("Token")]),this._v(" 是否有效")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_22-3-点击劫持"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-3-点击劫持","aria-hidden":"true"}},[this._v("#")]),this._v(" 22.3 点击劫持")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("涉及面试题：什么是点击劫持？如何防范点击劫持？")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("点击劫持是一种视觉欺骗的攻击手段。攻击者将需要攻击的网站通过 "),s("code",[this._v("iframe")]),this._v(" 嵌套的方式嵌入自己的网页中，并将 "),s("code",[this._v("iframe")]),this._v(" 设置为透明，在页面中透出一个按钮诱导用户点击")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/1480597-e2fd2624a105fce7.png",alt:"image.png"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("对于这种攻击方式，推荐防御的方法有两种")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("1. X-FRAME-OPTIONS")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("X-FRAME-OPTIONS")]),this._v(" 是一个 "),s("code",[this._v("HTTP")]),this._v(" 响应头，在现代浏览器有一个很好的支持。这个 HTTP 响应头 就是为了防御用"),s("code",[this._v("iframe")]),this._v(" 嵌套的点击劫持攻击。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("该响应头有三个值可选，分别是")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("DENY")]),t._v("，表示页面不允许通过 "),n("code",[t._v("iframe")]),t._v(" 的方式展示")]),t._v(" "),n("li",[n("code",[t._v("SAMEORIGIN")]),t._v("，表示页面可以在相同域名下通过 "),n("code",[t._v("iframe")]),t._v(" 的方式展示")]),t._v(" "),n("li",[n("code",[t._v("ALLOW-FROM")]),t._v("，表示页面可以在指定来源的 "),n("code",[t._v("iframe")]),t._v(" 中展示")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("2. JS 防御")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("对于某些远古浏览器来说，并不能支持上面的这种方式，那我们只有通过 JS 的方式来防御点击劫持了。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("click-jack"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token style language-css"}},[t._v("\n    "),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("html")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none "),n("span",{pre:!0,attrs:{class:"token important"}},[t._v("!important")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  ")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token script language-javascript"}},[t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" top"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" style "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click-jack'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      top"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  ")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("以上代码的作用就是当通过 "),s("code",[this._v("iframe")]),this._v(" 的方式加载页面时，攻击者的网页直接不显示所有内容了")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_23-从-v8-中看-js-性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-从-v8-中看-js-性能优化","aria-hidden":"true"}},[this._v("#")]),this._v(" 23 从 V8 中看 JS 性能优化")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("注意：该知识点属于性能优化领域。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_23-1-测试性能工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-1-测试性能工具","aria-hidden":"true"}},[this._v("#")]),this._v(" 23.1 测试性能工具")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("Chrome")]),this._v(" 已经提供了一个大而全的性能测试工具 "),s("code",[this._v("Audits")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/12/3/16772c479b194d48",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("点我们点击 "),s("code",[this._v("Audits")]),this._v(" 后，可以看到如下的界面")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/12/3/16772c52e83d97c7",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("在这个界面中，我们可以选择想测试的功能然后点击 "),s("code",[this._v("Run audits")]),this._v(" ，工具就会自动运行帮助我们测试问题并且给出一个完整的报告")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/12/3/16772ca3d13a68ab",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("上图是给掘金首页测试性能后给出的一个报告，可以看到报告中分别为性能、体验、SEO 都给出了打分，并且每一个指标都有详细的评估")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/12/3/16772cae50f7eb81",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/12/3/16772cbdcdaccf15",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("除了 "),s("code",[this._v("Audits")]),this._v(" 工具之外，还有一个 "),s("code",[this._v("Performance")]),this._v("工具也可以供我们使用。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/12/3/16772cf78a4fa18f",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("在这张图中，我们可以详细的看到每个时间段中浏览器在处理什么事情，哪个过程最消耗时间，便于我们更加详细的了解性能瓶颈")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_23-2-js-性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-2-js-性能优化","aria-hidden":"true"}},[this._v("#")]),this._v(" 23.2 JS 性能优化")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[n("code",[t._v("JS")]),t._v(" 是编译型还是解释型语言其实并不固定。首先 "),n("code",[t._v("JS")]),t._v(" 需要有引擎才能运行起来，无论是浏览器还是在 "),n("code",[t._v("Node")]),t._v(" 中，这是解释型语言的特性。但是在 V8 引擎下，又引入了 "),n("code",[t._v("TurboFan")]),t._v(" 编译器，他会在特定的情况下进行优化，将代码编译成执行效率更高的 "),n("code",[t._v("Machine Code")]),t._v("，当然这个编译器并不是 "),n("code",[t._v("JS")]),t._v(" 必须需要的，只是为了提高代码执行性能，所以总的来说 "),n("code",[t._v("JS")]),t._v(" 更偏向于解释型语言。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("那么这一小节的内容主要会针对于 "),s("code",[this._v("Chrome")]),this._v(" 的 "),s("code",[this._v("V8")]),this._v(" 引擎来讲解。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("在这一过程中，"),n("code",[t._v("JS")]),t._v(" 代码首先会解析为抽象语法树（"),n("code",[t._v("AST")]),t._v("），然后会通过解释器或者编译器转化为 "),n("code",[t._v("Bytecode")]),t._v(" 或者"),n("code",[t._v("Machine Code")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/12/3/167736409eebe688",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("从上图中我们可以发现，"),s("code",[this._v("JS")]),this._v(" 会首先被解析为 "),s("code",[this._v("AST")]),this._v("，解析的过程其实是略慢的。代码越多，解析的过程也就耗费越长，这也是我们需要压缩代码的原因之一。另外一种减少解析时间的方式是预解析，会作用于未执行的函数，这个我们下面再谈")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 会被重复解析")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("然后 "),n("code",[t._v("Ignition")]),t._v(" 负责将 "),n("code",[t._v("AST")]),t._v(" 转化为 "),n("code",[t._v("Bytecode")]),t._v("，"),n("code",[t._v("TurboFan")]),t._v(" 负责编译出优化后的 "),n("code",[t._v("Machine Code")]),t._v("，并且 "),n("code",[t._v("Machine Code")]),t._v(" 在执行效率上优于 "),n("code",[t._v("Bytecode")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/12/3/16773b904cfb732f",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("那么我们就产生了一个疑问，什么情况下代码会编译为 "),s("code",[this._v("Machine Code")]),this._v("？")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("JS")]),this._v(" 是一门动态类型的语言，并且还有一大堆的规则。简单的加法运算代码，内部就需要考虑好几种规则，比如数字相加、字符串相加、对象和字符串相加等等。这样的情况也就势必导致了内部要增加很多判断逻辑，降低运行效率。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" x\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("对于以上代码来说，如果一个函数被多次调用并且参数一直传入 "),n("code",[t._v("number")]),t._v(" 类型，那么 "),n("code",[t._v("V8")]),t._v(" 就会认为该段代码可以编译为 "),n("code",[t._v("Machine Code")]),t._v("，因为你固定了类型，不需要再执行很多判断逻辑了。")]),t._v(" "),n("li",[t._v("但是如果一旦我们传入的参数类型改变，那么 "),n("code",[t._v("Machine Code")]),t._v(" 就会被 "),n("code",[t._v("DeOptimized")]),t._v("为 "),n("code",[t._v("Bytecode")]),t._v("，这样就有性能上的一个损耗了。所以如果我们希望代码能多的编译为 "),n("code",[t._v("Machine Code")]),t._v(" 并且 "),n("code",[t._v("DeOptimized")]),t._v("的次数减少，就应该尽可能保证传入的类型一致。")]),t._v(" "),n("li",[t._v("那么你可能会有一个疑问，到底优化前后有多少的提升呢，接下来我们就来实践测试一下到底有多少的提升")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" performance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PerformanceObserver "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'perf_hooks'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" x\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// node 10 中才有 PerformanceObserver")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在这之前的 node 版本可以直接使用 performance 中的 API")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obs "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PerformanceObserver")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" observer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEntries")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  observer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("disconnect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nobs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" entryTypes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'measure'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" buffered"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nperformance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mark")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'start'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" number "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000000")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不优化代码")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NeverOptimizeFunction")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("number"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nperformance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mark")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'end'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nperformance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("measure")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'start'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'end'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("以上代码中我们使用了 "),s("code",[this._v("performance API")]),this._v("，这个 "),s("code",[this._v("API")]),this._v(" 在性能测试上十分好用。不仅可以用来测量代码的执行时间，还能用来测量各种网络连接中的时间消耗等等，并且这个 API 也可以在浏览器中使")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/12/4/16778338eb8b7130",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("从上图中我们可以发现，优化过的代码执行时间只需要 "),s("code",[this._v("9ms")]),this._v("，但是不优化过的代码执行时间却是前者的二十倍，已经接近 "),s("code",[this._v("200ms")]),this._v(" 了。在这个案例中，我相信大家已经看到了 "),s("code",[this._v("V8")]),this._v(" 的性能优化到底有多强，只需要我们符合一定的规则书写代码，引擎底层就能帮助我们自动优化代码。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("另外，编译器还有个骚操作 "),s("code",[this._v("Lazy-Compile")]),this._v("，当函数没有被执行的时候，会对函数进行一次预解析，直到代码被执行以后才会被解析编译。对于上述代码来说，"),s("code",[this._v("test")]),this._v(" 函数需要被预解析一次，然后在调用的时候再被解析编译。但是对于这种函数马上就被调用的情况来说，预解析这个过程其实是多余的，那么有什么办法能够让代码不被预解析呢？")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" x\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("但是不可能我们为了性能优化，给所有的函数都去套上括号，并且也不是所有函数都需要这样做。我们可以通过 "),s("code",[this._v("optimize-js")]),this._v(" 实现这个功能，这个库会分析一些函数的使用情况，然后给需要的函数添加括号，当然这个库很久没人维护了，如果需要使用的话，还是需要测试过相关内容的。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_24-性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-性能优化","aria-hidden":"true"}},[this._v("#")]),this._v(" 24 性能优化")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("总的来说性能优化这个领域的很多内容都很碎片化，这一章节我们将来学习这些碎片化的内容。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_24-1-图片优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-1-图片优化","aria-hidden":"true"}},[this._v("#")]),this._v(" 24.1 图片优化")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("计算图片大小")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("对于一张 "),n("code",[t._v("100 * 100")]),t._v(" 像素的图片来说，图像上有 "),n("code",[t._v("10000")]),t._v(" 个像素点，如果每个像素的值是 "),n("code",[t._v("RGBA")]),t._v(" 存储的话，那么也就是说每个像素有 "),n("code",[t._v("4")]),t._v(" 个通道，每个通道 "),n("code",[t._v("1")]),t._v(" 个字节（"),n("code",[t._v("8")]),t._v(" 位 = "),n("code",[t._v("1")]),t._v("个字节），所以该图片大小大概为 "),n("code",[t._v("39KB")]),t._v("（"),n("code",[t._v("10000 * 1 * 4 / 1024")]),t._v("）。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("但是在实际项目中，一张图片可能并不需要使用那么多颜色去显示，我们可以通过减少每个像素的调色板来相应缩小图片的大小。")]),this._v(" "),s("li",[this._v("了解了如何计算图片大小的知识，那么对于如何优化图片，想必大家已经有 2 个思路了：")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("减少像素点")]),this._v(" "),s("li",[this._v("减少每个像素点能够显示的颜色")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_24-2-图片加载优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-2-图片加载优化","aria-hidden":"true"}},[this._v("#")]),this._v(" 24.2 图片加载优化")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("不用图片。很多时候会使用到很多修饰类图片，其实这类修饰图片完全可以用 "),n("code",[t._v("CSS")]),t._v(" 去代替。")]),t._v(" "),n("li",[t._v("对于移动端来说，屏幕宽度就那么点，完全没有必要去加载原图浪费带宽。一般图片都用 "),n("code",[t._v("CDN")]),t._v(" 加载，可以计算出适配屏幕的宽度，然后去请求相应裁剪好的图片。")]),t._v(" "),n("li",[t._v("小图使用 "),n("code",[t._v("base64")]),t._v(" 格式")]),t._v(" "),n("li",[t._v("将多个图标文件整合到一张图片中（雪碧图）")]),t._v(" "),n("li",[t._v("选择正确的图片格式：\n"),n("ul",[n("li",[t._v("对于能够显示 "),n("code",[t._v("WebP")]),t._v("格式的浏览器尽量使用 "),n("code",[t._v("WebP")]),t._v(" 格式。因为 "),n("code",[t._v("WebP")]),t._v(" 格式具有更好的图像数据压缩算法，能带来更小的图片体积，而且拥有肉眼识别无差异的图像质量，缺点就是兼容性并不好")]),t._v(" "),n("li",[t._v("小图使用 "),n("code",[t._v("PNG")]),t._v("，其实对于大部分图标这类图片，完全可以使用 "),n("code",[t._v("SVG")]),t._v("代替")]),t._v(" "),n("li",[t._v("照片使用 "),n("code",[t._v("JPEG")])])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_24-3-dns-预解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-3-dns-预解析","aria-hidden":"true"}},[this._v("#")]),this._v(" 24.3 DNS 预解析")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("DNS")]),this._v(" 解析也是需要时间的，可以通过预解析的方式来预先获得域名所对应的 "),s("code",[this._v("IP")]),this._v("。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("dns-prefetch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("//blog.poetries.top"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_24-4-节流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-4-节流","aria-hidden":"true"}},[this._v("#")]),this._v(" 24.4 节流")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("考虑一个场景，滚动事件中会发起网络请求，但是我们并不希望用户在滚动过程中一直发起请求，而是隔一段时间发起一次，对于这种情况我们就可以使用节流。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// func是用户传入需要防抖的函数")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// wait是等待时间")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("throttle")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("func"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wait "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 上一次执行该函数的时间")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" lastTime "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前时间")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" now "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将当前时间和上一次执行函数时间对比")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果差值大于设置的等待时间就执行函数")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("now "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" lastTime "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" wait"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      lastTime "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" now\n      func"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInterval")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("throttle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_24-5-防抖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-5-防抖","aria-hidden":"true"}},[this._v("#")]),this._v(" 24.5 防抖")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("考虑一个场景，有一个按钮点击会触发网络请求，但是我们并不希望每次点击都发起网络请求，而是当用户点击按钮一段时间后没有再次点击的情况才去发起网络请求，对于这种情况我们就可以使用防抖。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// func是用户传入需要防抖的函数")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// wait是等待时间")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("debounce")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("func"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wait "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 缓存一个定时器id")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" timer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里返回的函数是每次用户实际调用的防抖函数")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果已经设定过定时器了就清空上一次的定时器")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开始一个新的定时器，延迟执行用户传入的方法")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    timer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      func"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wait"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_24-6-预加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-6-预加载","aria-hidden":"true"}},[this._v("#")]),this._v(" 24.6 预加载")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("在开发中，可能会遇到这样的情况。有些资源不需要马上用到，但是希望尽早获取，这时候就可以使用预加载。")]),this._v(" "),s("li",[this._v("预加载其实是声明式的 "),s("code",[this._v("fetch")]),this._v(" ，强制浏览器请求资源，并且不会阻塞 "),s("code",[this._v("onload")]),this._v(" 事件，可以使用以下代码开启预加载")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("preload"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://blog.poetries.top"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("预加载可以一定程度上降低首屏的加载时间，因为可以将一些不影响首屏但重要的文件延后加载，唯一缺点就是兼容性不好。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_24-7-预渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-7-预渲染","aria-hidden":"true"}},[this._v("#")]),this._v(" 24.7 预渲染")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("可以通过预渲染将下载的文件预先在后台渲染，可以使用以下代码开启预渲染")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("prerender"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://blog.poetries.top"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("预渲染虽然可以提高页面的加载速度，但是要确保该页面大概率会被用户在之后打开，否则就是白白浪费资源去渲染。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_24-8-懒执行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-8-懒执行","aria-hidden":"true"}},[this._v("#")]),this._v(" 24.8 懒执行")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("懒执行就是将某些逻辑延迟到使用时再计算。该技术可以用于首屏优化，对于某些耗时逻辑并不需要在首屏就使用的，就可以使用懒执行。懒执行需要唤醒，一般可以通过定时器或者事件的调用来唤醒。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_24-9-懒加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-9-懒加载","aria-hidden":"true"}},[this._v("#")]),this._v(" 24.9 懒加载")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("懒加载就是将不关键的资源延后加载。")]),t._v(" "),n("li",[t._v("懒加载的原理就是只加载自定义区域（通常是可视区域，但也可以是即将进入可视区域）内需要加载的东西。对于图片来说，先设置图片标签的 "),n("code",[t._v("src")]),t._v(" 属性为一张占位图，将真实的图片资源放入一个自定义属性中，当进入自定义区域时，就将自定义属性替换为 "),n("code",[t._v("src")]),t._v(" 属性，这样图片就会去下载资源，实现了图片懒加载。")]),t._v(" "),n("li",[t._v("懒加载不仅可以用于图片，也可以使用在别的资源上。比如进入可视区域才开始播放视频等等。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_24-10-cdn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-10-cdn","aria-hidden":"true"}},[this._v("#")]),this._v(" 24.10 CDN")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("CDN")]),this._v("的原理是尽可能的在各个地方分布机房缓存数据，这样即使我们的根服务器远在国外，在国内的用户也可以通过国内的机房迅速加载资源。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("因此，我们可以将静态资源尽量使用 "),n("code",[t._v("CDN")]),t._v(" 加载，由于浏览器对于单个域名有并发请求上限，可以考虑使用多个 "),n("code",[t._v("CDN")]),t._v(" 域名。并且对于 "),n("code",[t._v("CDN")]),t._v(" 加载静态资源需要注意 "),n("code",[t._v("CDN")]),t._v("  域名要与主站不同，否则每次请求都会带上主站的 "),n("code",[t._v("Cookie")]),t._v("，平白消耗流量")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_25-webpack-性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_25-webpack-性能优化","aria-hidden":"true"}},[this._v("#")]),this._v(" 25 Webpack 性能优化")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("在这部分的内容中，我们会聚焦于以下两个知识点，并且每一个知识点都属于高频考点：")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("有哪些方式可以减少 "),s("code",[this._v("Webpack")]),this._v(" 的打包时间")]),this._v(" "),s("li",[this._v("有哪些方式可以让 "),s("code",[this._v("Webpack")]),this._v(" 打出来的包更小")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_25-1-减少-webpack-打包时间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_25-1-减少-webpack-打包时间","aria-hidden":"true"}},[this._v("#")]),this._v(" 25.1 减少 Webpack 打包时间")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("1. 优化 Loader")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("对于 "),n("code",[t._v("Loader")]),t._v(" 来说，影响打包效率首当其冲必属 "),n("code",[t._v("Babel")]),t._v(" 了。因为 "),n("code",[t._v("Babel")]),t._v(" 会将代码转为字符串生成 "),n("code",[t._v("AST")]),t._v("，然后对 "),n("code",[t._v("AST")]),t._v(" 继续进行转变最后再生成新的代码，项目越大，转换代码越多，效率就越低。当然了，我们是有办法优化的")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("首先我们可以优化 "),s("code",[this._v("Loader")]),this._v(" 的文件搜索范围")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    rules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// js 文件才使用 babel")]),t._v("\n        test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\.js$/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        loader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'babel-loader'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只在 src 文件夹下查找")]),t._v("\n        include"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'src'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不会去查找的路径")]),t._v("\n        exclude"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/node_modules/")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("对于 "),s("code",[this._v("Babel")]),this._v(" 来说，我们肯定是希望只作用在 "),s("code",[this._v("JS")]),this._v("代码上的，然后 "),s("code",[this._v("node_modules")]),this._v(" 中使用的代码都是编译过的，所以我们也完全没有必要再去处理一遍")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("当然这样做还不够，我们还可以将 "),s("code",[this._v("Babel")]),this._v(" 编译过的文件缓存起来，下次只需要编译更改过的代码文件即可，这样可以大幅度加快打包时间")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[this._v("loader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[this._v(":")]),this._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[this._v("'babel-loader?cacheDirectory=true'")]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("2. HappyPack")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("受限于 "),s("code",[this._v("Node")]),this._v(" 是单线程运行的，所以 "),s("code",[this._v("Webpack")]),this._v(" 在打包的过程中也是单线程的，特别是在执行"),s("code",[this._v("Loader")]),this._v(" 的时候，长时间编译的任务很多，这样就会导致等待的情况。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("HappyPack")]),this._v(" 可以将 "),s("code",[this._v("Loader")]),this._v(" 的同步执行转换为并行的，这样就能充分利用系统资源来加快打包效率了")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  loaders"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\.js$/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      include"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'src'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      exclude"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/node_modules/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// id 后面的内容对应下面")]),t._v("\n      loader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'happypack/loader?id=happybabel'")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nplugins"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HappyPack")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'happybabel'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    loaders"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'babel-loader?cacheDirectory'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开启 4 个线程")]),t._v("\n    threads"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("3. DllPlugin")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("DllPlugin")]),this._v(" 可以将特定的类库提前打包然后引入。这种方式可以极大的减少打包类库的次数，只有当类库更新版本才有需要重新打包，并且也实现了将公共代码抽离成单独文件的优化方案。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("接下来我们就来学习如何使用 "),s("code",[this._v("DllPlugin")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 单独配置在一个文件中")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// webpack.dll.conf.js")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" path "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'path'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" webpack "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'webpack'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmodule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  entry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 想统一打包的类库")]),t._v("\n    vendor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  output"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dist'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    filename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[name].dll.js'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    library"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[name]-[hash]'")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  plugins"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("webpack"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DllPlugin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// name 必须和 output.library 一致")]),t._v("\n      name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[name]-[hash]'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 该属性需要与 DllReferencePlugin 中一致")]),t._v("\n      context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" __dirname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dist'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[name]-manifest.json'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("然后我们需要执行这个配置文件生成依赖文件，接下来我们需要使用 "),s("code",[this._v("DllReferencePlugin")]),this._v(" 将依赖文件引入项目中")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// webpack.conf.js")]),t._v("\nmodule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略其他配置")]),t._v("\n  plugins"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("webpack"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DllReferencePlugin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" __dirname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// manifest 就是之前打包出来的 json 文件")]),t._v("\n      manifest"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./dist/vendor-manifest.json'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("4. 代码压缩")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("在 "),n("code",[t._v("Webpack3")]),t._v(" 中，我们一般使用 "),n("code",[t._v("UglifyJS")]),t._v(" 来压缩代码，但是这个是单线程运行的，为了加快效率，我们可以使用 "),n("code",[t._v("webpack-parallel-uglify-plugin")]),t._v(" 来并行运行 "),n("code",[t._v("UglifyJS")]),t._v("，从而提高效率。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("在 "),n("code",[t._v("Webpack4")]),t._v(" 中，我们就不需要以上这些操作了，只需要将 "),n("code",[t._v("mode")]),t._v(" 设置为 "),n("code",[t._v("production")]),t._v(" 就可以默认开启以上功能。代码压缩也是我们必做的性能优化方案，当然我们不止可以压缩 "),n("code",[t._v("JS")]),t._v(" 代码，还可以压缩 "),n("code",[t._v("HTML")]),t._v("、"),n("code",[t._v("CSS")]),t._v(" 代码，并且在压缩 "),n("code",[t._v("JS")]),t._v(" 代码的过程中，我们还可以通过配置实现比如删除 "),n("code",[t._v("console.log")]),t._v(" 这类代码的功能。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("5. 一些小的优化点")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("我们还可以通过一些小的优化点来加快打包速度")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("resolve.extensions")]),t._v("：用来表明文件后缀列表，默认查找顺序是 "),n("code",[t._v("['.js', '.json']")]),t._v("，如果你的导入文件没有添加后缀就会按照这个顺序查找文件。我们应该尽可能减少后缀列表长度，然后将出现频率高的后缀排在前面")]),t._v(" "),n("li",[n("code",[t._v("resolve.alias")]),t._v("：可以通过别名的方式来映射一个路径，能让 "),n("code",[t._v("Webpack")]),t._v(" 更快找到路径")]),t._v(" "),n("li",[n("code",[t._v("module.noParse")]),t._v("：如果你确定一个文件下没有其他依赖，就可以使用该属性让 Webpack 不扫描该文件，这种方式对于大型的类库很有帮助")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_25-2-减少-webpack-打包后的文件体积"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_25-2-减少-webpack-打包后的文件体积","aria-hidden":"true"}},[this._v("#")]),this._v(" 25.2 减少 Webpack 打包后的文件体积")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("1. 按需加载")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("想必大家在开发 "),s("code",[this._v("SPA")]),this._v(" 项目的时候，项目中都会存在十几甚至更多的路由页面。如果我们将这些页面全部打包进一个 "),s("code",[this._v("JS")]),this._v("文件的话，虽然将多个请求合并了，但是同样也加载了很多并不需要的代码，耗费了更长的时间。那么为了首页能更快地呈现给用户，我们肯定是希望首页能加载的文件体积越小越好，这时候我们就可以使用按需加载，将每个路由页面单独打包为一个文件。当然不仅仅路由可以按需加载，对于 "),s("code",[this._v("loadash")]),this._v(" 这种大型类库同样可以使用这个功能。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("按需加载的代码实现这里就不详细展开了，因为鉴于用的框架不同，实现起来都是不一样的。当然了，虽然他们的用法可能不同，但是底层的机制都是一样的。都是当使用的时候再去下载对应文件，返回一个 "),s("code",[this._v("Promise")]),this._v("，当 "),s("code",[this._v("Promise")]),this._v("成功以后去执行回调。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("2. Scope Hoisting")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("Scope Hoisting")]),this._v(" 会分析出模块之间的依赖关系，尽可能的把打包出来的模块合并到一个函数中去。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// test.js")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// index.js")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./test.js'")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("对于这种情况，我们打包出来的代码会类似这样")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 0 */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exports"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" require"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 1 */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exports"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" require"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("但是如果我们使用 "),s("code",[this._v("Scope Hoisting")]),this._v(" 的话，代码就会尽可能的合并到一个函数中去，也就变成了这样的类似代码")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 0 */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exports"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" require"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("这样的打包方式生成的代码明显比之前的少多了。如果在 "),s("code",[this._v("Webpack4")]),this._v(" 中你希望开启这个功能，只需要启用 "),s("code",[this._v("optimization.concatenateModules")]),this._v("就可以了。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  optimization"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    concatenateModules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("3. Tree Shaking")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("Tree Shaking")]),this._v(" 可以实现删除项目中未被引用的代码，比如")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// test.js")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// index.js")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./test.js'")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("对于以上情况，"),n("code",[t._v("test")]),t._v(" 文件中的变量 "),n("code",[t._v("b")]),t._v(" 如果没有在项目中使用到的话，就不会被打包到文件中。")]),t._v(" "),n("li",[t._v("如果你使用 "),n("code",[t._v("Webpack 4")]),t._v(" 的话，开启生产环境就会自动启动这个优化功能。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_26-实现小型打包工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_26-实现小型打包工具","aria-hidden":"true"}},[this._v("#")]),this._v(" 26 实现小型打包工具")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("该工具可以实现以下两个功能")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("将 "),n("code",[t._v("ES6")]),t._v(" 转换为 "),n("code",[t._v("ES5")])]),t._v(" "),n("li",[t._v("支持在 "),n("code",[t._v("JS")]),t._v(" 文件中 "),n("code",[t._v("import CSS")]),t._v(" 文件")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("通过这个工具的实现，大家可以理解到打包工具的原理到底是什么")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("实现")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("因为涉及到 "),s("code",[this._v("ES6")]),this._v(" 转 "),s("code",[this._v("ES5")]),this._v("，所以我们首先需要安装一些 "),s("code",[this._v("Babel")]),this._v(" 相关的工具")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("yarn add babylon babel-traverse babel-core babel-preset-env  \n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" path "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'path'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" babylon "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'babylon'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" traverse "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'babel-traverse'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" transformFromAst "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'babel-core'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("首先，我们先来实现如何使用 "),s("code",[this._v("Babel")]),this._v(" 转换代码")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("readCode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filePath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 读取文件内容")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" content "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFileSync")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filePath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf-8'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 生成 AST")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ast "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" babylon"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("content"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    sourceType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module'")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 寻找当前文件的依赖关系")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" dependencies "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("traverse")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ast"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    ImportDeclaration"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" node "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      dependencies"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("source"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过 AST 将代码转为 ES5")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" code "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("transformFromAst")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ast"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    presets"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'env'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    filePath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    dependencies"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    code\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("首先我们传入一个文件路径参数，然后通过 "),n("code",[t._v("fs")]),t._v(" 将文件中的内容读取出来")]),t._v(" "),n("li",[t._v("接下来我们通过 "),n("code",[t._v("babylon")]),t._v(" 解析代码获取 "),n("code",[t._v("AST")]),t._v("，目的是为了分析代码中是否还引入了别的文件")]),t._v(" "),n("li",[t._v("通过 "),n("code",[t._v("dependencies")]),t._v(" 来存储文件中的依赖，然后再将 "),n("code",[t._v("AST")]),t._v(" 转换为 "),n("code",[t._v("ES5")]),t._v(" 代码")]),t._v(" "),n("li",[t._v("最后函数返回了一个对象，对象中包含了当前文件路径、当前文件依赖和当前文件转换后的代码")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("接下来我们需要实现一个函数，这个函数的功能有以下几点")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("调用 "),n("code",[t._v("readCode")]),t._v(" 函数，传入入口文件")]),t._v(" "),n("li",[t._v("分析入口文件的依赖")]),t._v(" "),n("li",[t._v("识别 "),n("code",[t._v("JS")]),t._v(" 和 "),n("code",[t._v("CSS")]),t._v(" 文件")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDependencies")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("entry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 读取入口文件")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" entryObject "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("readCode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("entry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" dependencies "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("entryObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遍历所有文件依赖关系")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" asset "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" dependencies"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获得文件目录")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" dirname "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dirname")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("asset"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("filePath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遍历当前文件依赖关系")]),t._v("\n    asset"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dependencies"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("relativePath "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获得绝对路径")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" absolutePath "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" relativePath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// CSS 文件逻辑就是将代码插入到 `style` 标签中")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\.css$/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("absolutePath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" content "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFileSync")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("absolutePath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf-8'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" code "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token string"}},[t._v("`\n          const style = document.createElement('style')\n          style.innerText = ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("content"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\\\r\\\\n/g")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n          document.head.appendChild(style)\n        `")])]),t._v("\n        dependencies"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          filePath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absolutePath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          relativePath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          dependencies"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          code\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// JS 代码需要继续查找是否有依赖关系")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" child "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("readCode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("absolutePath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("relativePath "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" relativePath\n        dependencies"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" dependencies\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("首先我们读取入口文件，然后创建一个数组，该数组的目的是存储代码中涉及到的所有文件")]),t._v(" "),n("li",[t._v("接下来我们遍历这个数组，一开始这个数组中只有入口文件，在遍历的过程中，如果入口文件有依赖其他的文件，那么就会被 "),n("code",[t._v("push")]),t._v(" 到这个数组中")]),t._v(" "),n("li",[t._v("在遍历的过程中，我们先获得该文件对应的目录，然后遍历当前文件的依赖关系")]),t._v(" "),n("li",[t._v("在遍历当前文件依赖关系的过程中，首先生成依赖文件的绝对路径，然后判断当前文件是 "),n("code",[t._v("CSS")]),t._v(" 文件还是 "),n("code",[t._v("JS")]),t._v(" 文件")]),t._v(" "),n("li",[t._v("如果是 "),n("code",[t._v("CSS")]),t._v(" 文件的话，我们就不能用 "),n("code",[t._v("Babel")]),t._v(" 去编译了，只需要读取 "),n("code",[t._v("CSS")]),t._v(" 文件中的代码，然后创建一个 "),n("code",[t._v("style")]),t._v(" 标签，将代码插入进标签并且放入 "),n("code",[t._v("head")]),t._v(" 中即可")]),t._v(" "),n("li",[t._v("如果是 "),n("code",[t._v("JS")]),t._v(" 文件的话，我们还需要分析 "),n("code",[t._v("JS")]),t._v(" 文件是否还有别的依赖关系")]),t._v(" "),n("li",[t._v("最后将读取文件后的对象 "),n("code",[t._v("push")]),t._v(" 进数组中")]),t._v(" "),n("li",[t._v("现在我们已经获取到了所有的依赖文件，接下来就是实现打包的功能了")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bundle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dependencies"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" entry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" modules "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 构建函数参数，生成的结构为")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { './entry.js': function(module, exports, require) { 代码 } }")]),t._v("\n  dependencies"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dep "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" filePath "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("relativePath "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" entry\n    modules "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token string"}},[t._v("`'")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("filePath"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("': (\n      function (module, exports, require) { ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("dep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v(" }\n    ),`")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 构建 require 函数，目的是为了获取模块暴露出来的内容")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token string"}},[t._v("`\n    (function(modules) {\n      function require(id) {\n        const module = { exports : {} }\n        modules[id](module, module.exports, require)\n        return module.exports\n      }\n      require('")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("entry"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("')\n    })({")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("modules"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("})\n  `")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当生成的内容写入到文件中")]),t._v("\n  fs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeFileSync")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./bundle.js'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("这段代码需要结合着 "),s("code",[this._v("Babel")]),this._v(" 转换后的代码来看，这样大家就能理解为什么需要这样写了")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// entry.js")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" _a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./a.js'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" _a2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_interopRequireDefault")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_interopRequireDefault")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__esModule "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_a2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a.js")]),t._v("\nObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exports"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'__esModule'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nexports"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[n("code",[t._v("Babel")]),t._v(" 将我们 "),n("code",[t._v("ES6")]),t._v("的模块化代码转换为了 "),n("code",[t._v("CommonJS")]),t._v("的代码，但是浏览器是不支持 "),n("code",[t._v("CommonJS")]),t._v(" 的，所以如果这段代码需要在浏览器环境下运行的话，我们需要自己实现 "),n("code",[t._v("CommonJS")]),t._v(" 相关的代码，这就是 "),n("code",[t._v("bundle")]),t._v(" 函数做的大部分事情。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("接下来我们再来逐行解析 bundle 函数")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("首先遍历所有依赖文件，构建出一个函数参数对象")]),t._v(" "),n("li",[t._v("对象的属性就是当前文件的相对路径，属性值是一个函数，函数体是当前文件下的代码，函数接受三个参数 "),n("code",[t._v("module")]),t._v("、"),n("code",[t._v("exports")]),t._v("、 "),n("code",[t._v("require")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("module")]),t._v(" 参数对应 "),n("code",[t._v("CommonJS")]),t._v(" 中的 "),n("code",[t._v("module")])]),t._v(" "),n("li",[n("code",[t._v("exports")]),t._v(" 参数对应 "),n("code",[t._v("CommonJS")]),t._v(" 中的 "),n("code",[t._v("module.export")])]),t._v(" "),n("li",[n("code",[t._v("require")]),t._v(" 参数对应我们自己创建的 "),n("code",[t._v("require")]),t._v(" 函数")])])]),t._v(" "),n("li",[t._v("接下来就是构造一个使用参数的函数了，函数做的事情很简单，就是内部创建一个 "),n("code",[t._v("require")]),t._v("函数，然后调用 "),n("code",[t._v("require(entry)")]),t._v("，也就是 "),n("code",[t._v("require('./entry.js')")]),t._v("，这样就会从函数参数中找到 "),n("code",[t._v("./entry.js")]),t._v(" 对应的函数并执行，最后将导出的内容通过 "),n("code",[t._v("module.export")]),t._v(" 的方式让外部获取到")]),t._v(" "),n("li",[t._v("最后再将打包出来的内容写入到单独的文件中")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("如果你对于上面的实现还有疑惑的话，可以阅读下打包后的部分简化代码")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("modules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 构造一个 CommonJS 导出代码")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" module "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" exports"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 去参数中获取文件对应的函数并执行")]),t._v("\n    modules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" require"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./entry.js'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./entry.js'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exports"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" require"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里继续通过构造的 require 去找到 a.js 文件对应的函数")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" _a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./a.js'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_a2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./a.js'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exports"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" require"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将 require 函数中的变量 module 变成了这样的结构")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// module.exports = 1")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这样就能在外部取到导出的内容了")]),t._v("\n    exports"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 省略")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("虽然实现这个工具只写了不到 "),s("code",[this._v("100")]),this._v(" 行的代码，但是打包工具的核心原理就是这些了")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("找出入口文件所有的依赖关系")]),this._v(" "),s("li",[this._v("然后通过构建 "),s("code",[this._v("CommonJS")]),this._v(" 代码来获取 "),s("code",[this._v("exports")]),this._v(" 导出的内容")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_27-mvvm-虚拟dom-前端路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_27-mvvm-虚拟dom-前端路由","aria-hidden":"true"}},[this._v("#")]),this._v(" 27 MVVM/虚拟DOM/前端路由")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_27-1-mvvm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_27-1-mvvm","aria-hidden":"true"}},[this._v("#")]),this._v(" 27.1 MVVM")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("涉及面试题：什么是 "),s("code",[this._v("MVVM")]),this._v("？比之 "),s("code",[this._v("MVC")]),this._v(" 有什么区别？")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("首先先来说下 View 和 Model")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v("View")]),this._v(" 很简单，就是用户看到的视图")]),this._v(" "),s("li",[s("code",[this._v("Model")]),this._v(" 同样很简单，一般就是本地数据和数据库中的数据")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("基本上，我们写的产品就是通过接口从数据库中读取数据，然后将数据经过处理展现到用户看到的视图上。当然我们还可以从视图上读取用户的输入，然后又将用户的输入通过接口写入到数据库中。但是，如何将数据展示到视图上，然后又如何将用户的输入写入到数据中，不同的人就产生了不同的看法，从此出现了很多种架构设计。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("传统的 "),s("code",[this._v("MVC")]),this._v(" 架构通常是使用控制器更新模型，视图从模型中获取数据去渲染。当用户有输入时，会通过控制器去更新模型，并且通知视图进行更新")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/12/20/167cad938817eb7e",alt:""}})])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("但是 "),n("code",[t._v("MVC")]),t._v(" 有一个巨大的缺陷就是控制器承担的责任太大了，随着项目愈加复杂，控制器中的代码会越来越臃肿，导致出现不利于维护的情况。")]),t._v(" "),n("li",[t._v("在 "),n("code",[t._v("MVVM")]),t._v(" 架构中，引入了 "),n("code",[t._v("ViewModel")]),t._v(" 的概念。"),n("code",[t._v("ViewModel")]),t._v(" 只关心数据和业务的处理，不关心 "),n("code",[t._v("View")]),t._v(" 如何处理数据，在这种情况下，"),n("code",[t._v("View")]),t._v("和 "),n("code",[t._v("Model")]),t._v(" 都可以独立出来，任何一方改变了也不一定需要改变另一方，并且可以将一些可复用的逻辑放在一个 "),n("code",[t._v("ViewModel")]),t._v(" 中，让多个 "),n("code",[t._v("View")]),t._v(" 复用这个 "),n("code",[t._v("ViewModel")]),t._v("。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/12/21/167ced454926a458",alt:""}})])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("以 "),n("code",[t._v("Vue")]),t._v(" 框架来举例，"),n("code",[t._v("ViewModel")]),t._v(" 就是组件的实例。"),n("code",[t._v("View")]),t._v(" 就是模板，"),n("code",[t._v("Model")]),t._v(" 的话在引入 "),n("code",[t._v("Vuex")]),t._v(" 的情况下是完全可以和组件分离的。")]),t._v(" "),n("li",[t._v("除了以上三个部分，其实在 "),n("code",[t._v("MVVM")]),t._v(" 中还引入了一个隐式的 "),n("code",[t._v("Binder")]),t._v(" 层，实现了 "),n("code",[t._v("View")]),t._v(" 和 "),n("code",[t._v("ViewModel")]),t._v(" 的绑定")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/12/21/167cf01bd8430243",alt:""}})])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("同样以 "),n("code",[t._v("Vue")]),t._v(" 框架来举例，这个隐式的 "),n("code",[t._v("Binder")]),t._v(" 层就是 "),n("code",[t._v("Vue")]),t._v(" 通过解析模板中的插值和指令从而实现 "),n("code",[t._v("View")]),t._v(" 与 "),n("code",[t._v("ViewModel")]),t._v(" 的绑定。")]),t._v(" "),n("li",[t._v("对于 "),n("code",[t._v("MVVM")]),t._v("来说，其实最重要的并不是通过双向绑定或者其他的方式将 "),n("code",[t._v("View")]),t._v(" 与 "),n("code",[t._v("ViewModel")]),t._v(" 绑定起来，而是通过 "),n("code",[t._v("ViewModel")]),t._v(" 将视图中的状态和用户的行为分离出一个抽象，这才是 "),n("code",[t._v("MVVM")]),t._v(" 的精髓")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_27-2-virtual-dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_27-2-virtual-dom","aria-hidden":"true"}},[this._v("#")]),this._v(" 27.2 Virtual DOM")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("涉及面试题：什么是 "),s("code",[this._v("Virtual DOM")]),this._v("？为什么 "),s("code",[this._v("Virtual DOM")]),this._v("比原生 "),s("code",[this._v("DOM")]),this._v(" 快？")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("大家都知道操作 "),n("code",[t._v("DOM")]),t._v(" 是很慢的，为什么慢的原因以及在「浏览器渲染原理」章节中说过，这里就不再赘述了- 那么相较于 "),n("code",[t._v("DOM")]),t._v("来说，操作 "),n("code",[t._v("JS")]),t._v(" 对象会快很多，并且我们也可以通过 "),n("code",[t._v("JS")]),t._v("来模拟 "),n("code",[t._v("DOM")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ul "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ul'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'list'")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("上述代码对应的 "),s("code",[this._v("DOM")]),this._v(" 就是")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ul")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ul")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("那么既然 "),n("code",[t._v("DOM")]),t._v(" 可以通过 "),n("code",[t._v("JS")]),t._v(" 对象来模拟，反之也可以通过 "),n("code",[t._v("JS")]),t._v(" 对象来渲染出对应的 "),n("code",[t._v("DOM")]),t._v("。当然了，通过 "),n("code",[t._v("JS")]),t._v(" 来模拟 "),n("code",[t._v("DOM")]),t._v(" 并且渲染对应的 "),n("code",[t._v("DOM")]),t._v(" 只是第一步，难点在于如何判断新旧两个 "),n("code",[t._v("JS")]),t._v(" 对象的最小差异并且实现局部更新 "),n("code",[t._v("DOM")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("首先 "),n("code",[t._v("DOM")]),t._v(" 是一个多叉树的结构，如果需要完整的对比两颗树的差异，那么需要的时间复杂度会是 "),n("code",[t._v("O(n ^ 3)")]),t._v("，这个复杂度肯定是不能接受的。于是 "),n("code",[t._v("React")]),t._v(" 团队优化了算法，实现了 "),n("code",[t._v("O(n)")]),t._v(" 的复杂度来对比差异。 实现 "),n("code",[t._v("O(n)")]),t._v(" 复杂度的关键就是只对比同层的节点，而不是跨层对比，这也是考虑到在实际业务中很少会去跨层的移动 "),n("code",[t._v("DOM")]),t._v(" 元素。 所以判断差异的算法就分为了两步")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("首先从上至下，从左往右遍历对象，也就是树的深度遍历，这一步中会给每个节点添加索引，便于最后渲染差异")]),this._v(" "),s("li",[this._v("一旦节点有子元素，就去判断子元素是否有不同")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("在第一步算法中我们需要判断新旧节点的 "),s("code",[this._v("tagName")]),this._v(" 是否相同，如果不相同的话就代表节点被替换了。如果没有更改 "),s("code",[this._v("tagName")]),this._v(" 的话，就需要判断是否有子元素，有的话就进行第二步算法。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("在第二步算法中，我们需要判断原本的列表中是否有节点被移除，在新的列表中需要判断是否有新的节点加入，还需要判断节点是否有移动。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 假设这里模拟一个 ul，其中包含了 5 个 li")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里替换上面的 li")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("从上述例子中，我们一眼就可以看出先前的 "),s("code",[this._v("ul")]),this._v(" 中的第三个"),s("code",[this._v("li")]),this._v("被移除了，四五替换了位置。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("那么在实际的算法中，我们如何去识别改动的是哪个节点呢？这就引入了 "),s("code",[this._v("key")]),this._v(" 这个属性，想必大家在 "),s("code",[this._v("Vue")]),this._v(" 或者 "),s("code",[this._v("React")]),this._v(" 的列表中都用过这个属性。这个属性是用来给每一个节点打标志的，用于判断是否是同一个节点。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("当然在判断以上差异的过程中，我们还需要判断节点的属性是否有变化等等。")]),this._v(" "),s("li",[this._v("当我们判断出以上的差异后，就可以把这些差异记录下来。当对比完两棵树以后，就可以通过差异去局部更新 "),s("code",[this._v("DOM")]),this._v("，实现性能的最优化。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("当然了 "),s("code",[this._v("Virtual DOM")]),this._v(" 提高性能是其中一个优势，其实最大的优势还是在于：")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("将 "),n("code",[t._v("Virtual DOM")]),t._v("作为一个兼容层，让我们还能对接非 "),n("code",[t._v("Web")]),t._v(" 端的系统，实现跨端开发。")]),t._v(" "),n("li",[t._v("同样的，通过 "),n("code",[t._v("Virtual DOM")]),t._v("我们可以渲染到其他的平台，比如实现 "),n("code",[t._v("SSR")]),t._v("、同构渲染等等。")]),t._v(" "),n("li",[t._v("实现组件的高度抽象化")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_27-3-路由原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_27-3-路由原理","aria-hidden":"true"}},[this._v("#")]),this._v(" 27.3 路由原理")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("涉及面试题：前端路由原理？两种实现方式有什么区别？")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("前端路由实现起来其实很简单，本质就是监听 "),s("code",[this._v("URL")]),this._v(" 的变化，然后匹配路由规则，显示相应的页面，并且无须刷新页面。目前前端使用的路由就只有两种实现方式")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v("Hash")]),this._v(" 模式")]),this._v(" "),s("li",[s("code",[this._v("History")]),this._v(" 模式")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("1. Hash 模式")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[n("code",[t._v("www.test.com/#/")]),t._v(" 就是 "),n("code",[t._v("Hash URL")]),t._v("，当 "),n("code",[t._v("#")]),t._v(" 后面的哈希值发生变化时，可以通过 "),n("code",[t._v("hashchange")]),t._v(" 事件来监听到 "),n("code",[t._v("URL")]),t._v(" 的变化，从而进行跳转页面，并且无论哈希值如何变化，服务端接收到的 "),n("code",[t._v("URL")]),t._v(" 请求永远是 "),n("code",[t._v("www.test.com")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hashchange'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... 具体逻辑")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("Hash")]),this._v(" 模式相对来说更简单，并且兼容性也更好")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("2. History 模式")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[n("code",[t._v("History")]),t._v(" 模式是 "),n("code",[t._v("HTML5")]),t._v(" 新推出的功能，主要使用 "),n("code",[t._v("history.pushState")]),t._v(" 和 "),n("code",[t._v("history.replaceState")]),t._v(" 改变 "),n("code",[t._v("URL")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("通过 "),s("code",[this._v("History")]),this._v(" 模式改变 "),s("code",[this._v("URL")]),this._v(" 同样不会引起页面的刷新，只会更新浏览器的历史记录。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 新增历史记录")]),t._v("\nhistory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pushState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stateObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" title"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("URL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 替换当前历史记录")]),t._v("\nhistory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stateObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" title"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("URL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("当用户做出浏览器动作时，比如点击后退按钮时会触发 "),s("code",[this._v("popState")]),this._v(" 事件")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'popstate'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// e.state 就是 pushState(stateObject) 中的 stateObject")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("两种模式对比")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("Hash")]),t._v("模式只可以更改 "),n("code",[t._v("#")]),t._v(" 后面的内容，"),n("code",[t._v("History")]),t._v(" 模式可以通过 "),n("code",[t._v("API")]),t._v(" 设置任意的同源 "),n("code",[t._v("URL")])]),t._v(" "),n("li",[n("code",[t._v("History")]),t._v(" 模式可以通过 "),n("code",[t._v("API")]),t._v(" 添加任意类型的数据到历史记录中，"),n("code",[t._v("Hash")]),t._v(" 模式只能更改哈希值，也就是字符串")]),t._v(" "),n("li",[n("code",[t._v("Hash")]),t._v(" 模式无需后端配置，并且兼容性好。"),n("code",[t._v("History")]),t._v(" 模式在用户手动输入地址或者刷新页面的时候会发起 "),n("code",[t._v("URL")]),t._v(" 请求，后端需要配置 "),n("code",[t._v("index.html")]),t._v(" 页面用于匹配不到静态资源的时候")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_27-4-vue-和-react-之间的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_27-4-vue-和-react-之间的区别","aria-hidden":"true"}},[this._v("#")]),this._v(" 27.4 Vue 和 React 之间的区别")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("Vue")]),t._v(" 的表单可以使用 "),n("code",[t._v("v-model")]),t._v(" 支持双向绑定，相比于 "),n("code",[t._v("React")]),t._v(" 来说开发上更加方便，当然了 "),n("code",[t._v("v-model")]),t._v(" 其实就是个语法糖，本质上和 "),n("code",[t._v("React")]),t._v(" 写表单的方式没什么区别")]),t._v(" "),n("li",[t._v("改变数据方式不同，"),n("code",[t._v("Vue")]),t._v(" 修改状态相比来说要简单许多，"),n("code",[t._v("React")]),t._v(" 需要使用 "),n("code",[t._v("setState")]),t._v(" 来改变状态，并且使用这个 "),n("code",[t._v("API")]),t._v(" 也有一些坑点。并且 "),n("code",[t._v("Vue")]),t._v(" 的底层使用了依赖追踪，页面更新渲染已经是最优的了，但是 "),n("code",[t._v("React")]),t._v(" 还是需要用户手动去优化这方面的问题。")]),t._v(" "),n("li",[n("code",[t._v("React 16")]),t._v("以后，有些钩子函数会执行多次，这是因为引入 "),n("code",[t._v("Fiber")]),t._v(" 的原因")]),t._v(" "),n("li",[n("code",[t._v("React")]),t._v(" 需要使用 "),n("code",[t._v("JSX")]),t._v("，有一定的上手成本，并且需要一整套的工具链支持，但是完全可以通过 "),n("code",[t._v("JS")]),t._v(" 来控制页面，更加的灵活。"),n("code",[t._v("Vue")]),t._v(" 使用了模板语法，相比于 "),n("code",[t._v("JSX")]),t._v(" 来说没有那么灵活，但是完全可以脱离工具链，通过直接编写 "),n("code",[t._v("render")]),t._v(" 函数就能在浏览器中运行。")]),t._v(" "),n("li",[t._v("在生态上来说，两者其实没多大的差距，当然 "),n("code",[t._v("React")]),t._v("的用户是远远高于"),n("code",[t._v("Vue")]),t._v(" 的")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_28-vue常考知识点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-vue常考知识点","aria-hidden":"true"}},[this._v("#")]),this._v(" 28 Vue常考知识点")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_28-1-生命周期钩子函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-1-生命周期钩子函数","aria-hidden":"true"}},[this._v("#")]),this._v(" 28.1 生命周期钩子函数")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("在 "),n("code",[t._v("beforeCreate")]),t._v(" 钩子函数调用的时候，是获取不到 "),n("code",[t._v("props")]),t._v(" 或者 "),n("code",[t._v("data")]),t._v(" 中的数据的，因为这些数据的初始化都在 "),n("code",[t._v("initState")]),t._v(" 中。")]),t._v(" "),n("li",[t._v("然后会执行 "),n("code",[t._v("created")]),t._v(" 钩子函数，在这一步的时候已经可以访问到之前不能访问到的数据，但是这时候组件还没被挂载，所以是看不到的。")]),t._v(" "),n("li",[t._v("接下来会先执行 "),n("code",[t._v("beforeMount")]),t._v(" 钩子函数，开始创建 "),n("code",[t._v("VDOM")]),t._v("，最后执行 "),n("code",[t._v("mounted")]),t._v(" 钩子，并将 "),n("code",[t._v("VDOM")]),t._v("渲染为真实 "),n("code",[t._v("DOM")]),t._v(" 并且渲染数据。组件中如果有子组件的话，会递归挂载子组件，只有当所有子组件全部挂载完毕，才会执行根组件的挂载钩子。")]),t._v(" "),n("li",[t._v("接下来是数据更新时会调用的钩子函数 "),n("code",[t._v("beforeUpdate")]),t._v(" 和 "),n("code",[t._v("updated")]),t._v("，这两个钩子函数没什么好说的，就是分别在数据更新前和更新后会调用。")]),t._v(" "),n("li",[t._v("另外还有 "),n("code",[t._v("keep-alive")]),t._v(" 独有的生命周期，分别为 "),n("code",[t._v("activated")]),t._v(" 和 "),n("code",[t._v("deactivated")]),t._v("。用 "),n("code",[t._v("keep-alive")]),t._v(" 包裹的组件在切换时不会进行销毁，而是缓存到内存中并执行 "),n("code",[t._v("deactivated")]),t._v(" 钩子函数，命中缓存渲染后会执行 "),n("code",[t._v("actived")]),t._v(" 钩子函数。")]),t._v(" "),n("li",[t._v("最后就是销毁组件的钩子函数 "),n("code",[t._v("beforeDestroy")]),t._v(" 和 "),n("code",[t._v("destroyed")]),t._v("。前者适合移除事件、定时器等等，否则可能会引起内存泄露的问题。然后进行一系列的销毁操作，如果有子组件的话，也会递归销毁子组件，所有子组件都销毁完毕后才会执行根组件的 "),n("code",[t._v("destroyed")]),t._v(" 钩子函数")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_28-2-组件通信"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-2-组件通信","aria-hidden":"true"}},[this._v("#")]),this._v(" 28.2 组件通信")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("组件通信一般分为以下几种情况：")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("父子组件通信")]),this._v(" "),s("li",[this._v("兄弟组件通信")]),this._v(" "),s("li",[this._v("跨多层级组件通信")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("对于以上每种情况都有多种方式去实现，接下来就来学习下如何实现。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("1. 父子通信")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("父组件通过 "),n("code",[t._v("props")]),t._v(" 传递数据给子组件，子组件通过 "),n("code",[t._v("emit")]),t._v(" 发送事件传递数据给父组件，这两种方式是最常用的父子通信实现办法。")]),t._v(" "),n("li",[t._v("这种父子通信方式也就是典型的单向数据流，父组件通过 "),n("code",[t._v("props")]),t._v(" 传递数据，子组件不能直接修改 "),n("code",[t._v("props")]),t._v("，而是必须通过发送事件的方式告知父组件修改数据。")]),t._v(" "),n("li",[t._v("另外这两种方式还可以使用语法糖 "),n("code",[t._v("v-model")]),t._v(" 来直接实现，因为 "),n("code",[t._v("v-model")]),t._v(" 默认会解析成名为 "),n("code",[t._v("value")]),t._v(" 的 "),n("code",[t._v("prop")]),t._v(" 和名为 "),n("code",[t._v("input")]),t._v(" 的事件。这种语法糖的方式是典型的双向绑定，常用于 "),n("code",[t._v("UI")]),t._v(" 控件上，但是究其根本，还是通过事件的方法让父组件修改数据。")]),t._v(" "),n("li",[t._v("当然我们还可以通过访问 "),n("code",[t._v("$parent")]),t._v(" 或者 "),n("code",[t._v("$children")]),t._v(" 对象来访问组件实例中的方法和数据。")]),t._v(" "),n("li",[t._v("另外如果你使用 Vue 2.3 及以上版本的话还可以使用 "),n("code",[t._v("$listeners")]),t._v(" 和 "),n("code",[t._v(".sync")]),t._v(" 这两个属性。")]),t._v(" "),n("li",[n("code",[t._v("$listeners")]),t._v(" 属性会将父组件中的 (不含 "),n("code",[t._v(".native")]),t._v(" 修饰器的) "),n("code",[t._v("v-on")]),t._v(" 事件监听器传递给子组件，子组件可以通过访问 "),n("code",[t._v("$listeners")]),t._v(" 来自定义监听器。")]),t._v(" "),n("li",[n("code",[t._v(".sync")]),t._v(" 属性是个语法糖，可以很简单的实现子组件与父组件通信")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--父组件中--\x3e")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":value.sync")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--以上写法等同于--\x3e")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":value")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("@update:")]),t._v("value")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("v => value = v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("comp")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--子组件中--\x3e")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token script language-javascript"}},[t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'update:value'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("2. 兄弟组件通信")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("对于这种情况可以通过查找父组件中的子组件实现，也就是 "),s("code",[this._v("this.$parent.$children")]),this._v("，在 "),s("code",[this._v("$children")]),this._v(" 中可以通过组件 "),s("code",[this._v("name")]),this._v(" 查询到需要的组件实例，然后进行通信。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("3. 跨多层次组件通信")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("对于这种情况可以使用 "),s("code",[this._v("Vue 2.2")]),this._v(" 新增的 "),s("code",[this._v("API provide / inject")]),this._v("，虽然文档中不推荐直接使用在业务中，但是如果用得好的话还是很有用的。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("假设有父组件 "),s("code",[this._v("A")]),this._v("，然后有一个跨多层级的子组件 "),s("code",[this._v("B")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 父组件 A")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  provide"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子组件 B")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  inject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mounted")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无论跨几层都能获得父组件的 data 属性")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 1")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("终极办法解决一切通信问题")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("只要你不怕麻烦，可以使用 "),s("code",[this._v("Vuex")]),this._v(" 或者 "),s("code",[this._v("Event Bus")]),this._v(" 解决上述所有的通信情况。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_28-3-extend-能做什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-3-extend-能做什么","aria-hidden":"true"}},[this._v("#")]),this._v(" 28.3 extend 能做什么")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("这个 "),s("code",[this._v("API")]),this._v(" 很少用到，作用是扩展组件生成一个构造器，通常会与 "),s("code",[this._v("$mount")]),this._v(" 一起使用。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建组件构造器")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" Component "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Vue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("extend")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  template"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<div>test</div>'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 挂载到 #app 上")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#app'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 除了上面的方式，还可以用来扩展已有的组件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" SuperComponent "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Vue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("extend")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Component"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SuperComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("created")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SuperComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#app'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_28-4-mixin-和-mixins-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-4-mixin-和-mixins-区别","aria-hidden":"true"}},[this._v("#")]),this._v(" 28.4 mixin 和 mixins 区别")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("mixin")]),this._v(" 用于全局混入，会影响到每个组件实例，通常插件都是这样做初始化的")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("Vue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mixin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeCreate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...逻辑")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这种方式会影响到每个组件的 beforeCreate 钩子函数")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("虽然文档不建议我们在应用中直接使用 "),n("code",[t._v("mixin")]),t._v("，但是如果不滥用的话也是很有帮助的，比如可以全局混入封装好的 "),n("code",[t._v("ajax")]),t._v(" 或者一些工具函数等等。")]),t._v(" "),n("li",[n("code",[t._v("mixins")]),t._v(" 应该是我们最常使用的扩展组件的方式了。如果多个组件中有相同的业务逻辑，就可以将这些逻辑剥离出来，通过 "),n("code",[t._v("mixins")]),t._v(" 混入代码，比如上拉下拉加载数据这种逻辑等等。")]),t._v(" "),n("li",[t._v("另外需要注意的是 "),n("code",[t._v("mixins")]),t._v(" 混入的钩子函数会先于组件内的钩子函数执行，并且在遇到同名选项的时候也会有选择性的进行合并，具体可以阅读 文档。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_28-5-computed-和-watch-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-5-computed-和-watch-区别","aria-hidden":"true"}},[this._v("#")]),this._v(" 28.5 computed 和 watch 区别")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("computed")]),t._v(" 是计算属性，依赖其他属性计算值，并且 "),n("code",[t._v("computed")]),t._v(" 的值有缓存，只有当计算值变化才会返回内容。")]),t._v(" "),n("li",[n("code",[t._v("watch")]),t._v(" 监听到值的变化就会执行回调，在回调中可以进行一些逻辑操作。")]),t._v(" "),n("li",[t._v("所以一般来说需要依赖别的属性来动态获得值的时候可以使用 "),n("code",[t._v("computed")]),t._v("，对于监听到值的变化需要做一些复杂业务逻辑的情况可以使用 "),n("code",[t._v("watch")]),t._v("。")]),t._v(" "),n("li",[t._v("另外 "),n("code",[t._v("computer")]),t._v(" 和 "),n("code",[t._v("watch")]),t._v(" 还都支持对象的写法，这种方式知道的人并不多。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("vm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$watch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'obj'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 深度遍历")]),t._v("\n    deep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 立即触发")]),t._v("\n    immediate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行的函数")]),t._v("\n    handler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldVal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" vm "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  computed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    aPlus"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this.aPlus 时触发")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this.aPlus = 1 时触发")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" v "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_28-6-keep-alive-组件有什么作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-6-keep-alive-组件有什么作用","aria-hidden":"true"}},[this._v("#")]),this._v(" 28.6 keep-alive 组件有什么作用")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("如果你需要在组件切换的时候，保存一些组件的状态防止多次渲染，就可以使用 "),n("code",[t._v("keep-alive")]),t._v(" 组件包裹需要保存的组件。")]),t._v(" "),n("li",[t._v("对于 "),n("code",[t._v("keep-alive")]),t._v(" 组件来说，它拥有两个独有的生命周期钩子函数，分别为 "),n("code",[t._v("activated")]),t._v(" 和 "),n("code",[t._v("deactivated")]),t._v(" 。用 "),n("code",[t._v("keep-alive")]),t._v(" 包裹的组件在切换时不会进行销毁，而是缓存到内存中并执行 "),n("code",[t._v("deactivated")]),t._v(" 钩子函数，命中缓存渲染后会执行 "),n("code",[t._v("actived")]),t._v(" 钩子函数。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_28-7-v-show-与-v-if-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-7-v-show-与-v-if-区别","aria-hidden":"true"}},[this._v("#")]),this._v(" 28.7 v-show 与 v-if 区别")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("v-show")]),t._v(" 只是在 "),n("code",[t._v("display: none")]),t._v(" 和 "),n("code",[t._v("display: block")]),t._v(" 之间切换。无论初始条件是什么都会被渲染出来，后面只需要切换 "),n("code",[t._v("CSS")]),t._v("，"),n("code",[t._v("DOM")]),t._v(" 还是一直保留着的。所以总的来说 "),n("code",[t._v("v-show")]),t._v(" 在初始渲染时有更高的开销，但是切换开销很小，更适合于频繁切换的场景。")]),t._v(" "),n("li",[n("code",[t._v("v-if")]),t._v(" 的话就得说到 "),n("code",[t._v("Vue")]),t._v(" 底层的编译了。当属性初始为 "),n("code",[t._v("false")]),t._v(" 时，组件就不会被渲染，直到条件为 "),n("code",[t._v("true")]),t._v("，并且切换条件时会触发销毁/挂载组件，所以总的来说在切换时开销更高，更适合不经常切换的场景。")]),t._v(" "),n("li",[t._v("并且基于 "),n("code",[t._v("v-if")]),t._v(" 的这种惰性渲染机制，可以在必要的时候才去渲染组件，减少整个页面的初始渲染开销。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_28-8-组件中-data-什么时候可以使用对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-8-组件中-data-什么时候可以使用对象","aria-hidden":"true"}},[this._v("#")]),this._v(" 28.8 组件中 data 什么时候可以使用对象")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("这道题目其实更多考的是 JS 功底。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("组件复用时所有组件实例都会共享 "),n("code",[t._v("data")]),t._v("，如果 "),n("code",[t._v("data")]),t._v(" 是对象的话，就会造成一个组件修改 "),n("code",[t._v("data")]),t._v(" 以后会影响到其他所有组件，所以需要将 "),n("code",[t._v("data")]),t._v(" 写成函数，每次用到就调用一次函数获得新的数据。")]),t._v(" "),n("li",[t._v("当我们使用 "),n("code",[t._v("new Vue()")]),t._v(" 的方式的时候，无论我们将 "),n("code",[t._v("data")]),t._v(" 设置为对象还是函数都是可以的，因为 "),n("code",[t._v("new Vue()")]),t._v(" 的方式是生成一个根组件，该组件不会复用，也就不存在共享 "),n("code",[t._v("data")]),t._v(" 的情况了")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("以下是进阶部分")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_28-9-响应式原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-9-响应式原理","aria-hidden":"true"}},[this._v("#")]),this._v(" 28.9 响应式原理")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[n("code",[t._v("Vue")]),t._v(" 内部使用了 "),n("code",[t._v("Object.defineProperty()")]),t._v(" 来实现数据响应式，通过这个函数可以监听到 "),n("code",[t._v("set")]),t._v(" 和 "),n("code",[t._v("get")]),t._v(" 的事件")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" data "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'poetries'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -> get value")]),t._v("\ndata"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yyy'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -> change value")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断类型")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'object'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineReactive")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineReactive")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 递归子属性")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可枚举")]),t._v("\n    enumerable"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可配置")]),t._v("\n    configurable"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 自定义函数")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reactiveGetter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'get value'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" val\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reactiveSetter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newVal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'change value'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      val "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newVal\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("以上代码简单的实现了如何监听数据的 "),s("code",[this._v("set")]),this._v(" 和 "),s("code",[this._v("get")]),this._v(" 的事件，但是仅仅如此是不够的，因为自定义的函数一开始是不会执行的。只有先执行了依赖收集，从能在属性更新的时候派发更新，所以接下来我们需要先触发依赖收集")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    {{name}}\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[this._v("接下来我们先来实现一个 "),s("code",[this._v("Dep")]),this._v(" 类，用于解耦属性的依赖收集和派发更新操作")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过 Dep 解耦属性的依赖和更新操作")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dep")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subs "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加依赖")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addSub")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sub"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sub"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更新")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("notify")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sub "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      sub"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全局属性，通过该属性配置 Watcher")]),t._v("\nDep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("以上的代码实现很简单，当需要依赖收集的时候调用 "),s("code",[this._v("addSub")]),this._v("，当需要派发更新的时候调用 "),s("code",[this._v("notify")]),this._v("。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("接下来我们先来简单的了解下 "),s("code",[this._v("Vue")]),this._v("组件挂载时添加响应式的过程。在组件挂载时，会先对所有需要的属性调用 "),s("code",[this._v("Object.defineProperty()")]),this._v("，然后实例化 "),s("code",[this._v("Watcher")]),this._v("，传入组件更新的回调。在实例化过程中，会对模板中的属性进行求值，触发依赖收集。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Watcher")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将 Dep.target 指向自己")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 然后触发属性的 getter 添加监听")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最后将 Dep.target 置空")]),t._v("\n    Dep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cb "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cb\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" key\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    Dep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获得新值")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用 update 方法更新 Dom")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cb")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("以上就是 "),n("code",[t._v("Watcher")]),t._v("的简单实现，在执行构造函数的时候将 "),n("code",[t._v("Dep.target")]),t._v("指向自身，从而使得收集到了对应的 "),n("code",[t._v("Watcher")]),t._v("，在派发更新的时候取出对应的 "),n("code",[t._v("Watcher")]),t._v(" 然后执行 "),n("code",[t._v("update")]),t._v(" 函数。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("接下来，需要对"),s("code",[this._v("defineReactive")]),this._v(" 函数进行改造，在自定义函数中添加依赖收集和派发更新相关的代码")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineReactive")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 递归子属性")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" dp "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dep")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    enumerable"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    configurable"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reactiveGetter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'get value'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将 Watcher 添加到订阅")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Dep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        dp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addSub")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Dep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" val\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reactiveSetter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newVal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'change value'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      val "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newVal\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行 watcher 的 update 方法")]),t._v("\n      dp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("notify")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("以上所有代码实现了一个简易的数据响应式，核心思路就是手动触发一次属性的 "),s("code",[this._v("getter")]),this._v(" 来实现依赖收集。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" data "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'poetries'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerText "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模拟解析到 `{{name}}` 触发的操作")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Watcher")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" update"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// update Dom innerText")]),t._v("\ndata"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yyy'")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"_28-9-1-object-defineproperty-的缺陷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-9-1-object-defineproperty-的缺陷","aria-hidden":"true"}},[this._v("#")]),this._v(" 28.9.1 Object.defineProperty 的缺陷")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("以上已经分析完了 "),n("code",[t._v("Vue")]),t._v(" 的响应式原理，接下来说一点 "),n("code",[t._v("Object.defineProperty")]),t._v(" 中的缺陷。")]),t._v(" "),n("li",[t._v("如果通过下标方式修改数组数据或者给对象新增属性并不会触发组件的重新渲染，因为"),n("code",[t._v("Object.defineProperty")]),t._v(" 不能拦截到这些操作，更精确的来说，对于数组而言，大部分操作都是拦截不到的，只是 "),n("code",[t._v("Vue")]),t._v(" 内部通过重写函数的方式解决了这个问题。")]),t._v(" "),n("li",[t._v("对于第一个问题，"),n("code",[t._v("Vue")]),t._v(" 提供了一个 "),n("code",[t._v("API")]),t._v(" 解决")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Array"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("any"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" any"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" any"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" any "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断是否为数组且下标是否有效")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Array"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isValidArrayIndex")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用 splice 函数触发派发更新")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 该函数已被重写")]),t._v("\n    target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" val\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断 key 是否已经存在")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" target "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" val\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" val\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ob "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" any"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__ob__\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果对象不是响应式对象，就赋值返回")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("ob"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" val\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" val\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 进行双向绑定")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineReactive")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ob"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 手动派发更新")]),t._v("\n  ob"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("notify")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" val\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("对于数组而言，"),s("code",[this._v("Vue")]),this._v("内部重写了以下函数实现派发更新")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获得数组原型")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arrayProto "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Array"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arrayMethods "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arrayProto"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重写以下函数")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" methodsToPatch "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'push'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pop'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'shift'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'unshift'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'splice'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sort'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'reverse'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nmethodsToPatch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("method"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 缓存原生函数")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" original "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arrayProto"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("method"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重写函数")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("def")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arrayMethods"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" method"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mutator")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 先调用原生函数获得结果")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" original"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ob "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__ob__\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" inserted\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用以下几个函数时，监听新数据")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("method"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'push'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'unshift'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        inserted "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" args\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'splice'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        inserted "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inserted"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ob"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("observeArray")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inserted"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 手动派发更新")]),t._v("\n    ob"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("notify")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"_28-9-2-编译过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-9-2-编译过程","aria-hidden":"true"}},[this._v("#")]),this._v(" 28.9.2 编译过程")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("想必大家在使用 Vue 开发的过程中，基本都是使用模板的方式。那么你有过「模板是怎么在浏览器中运行的」这种疑虑嘛？")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("首先直接把模板丢到浏览器中肯定是不能运行的，模板只是为了方便开发者进行开发。"),n("code",[t._v("Vue")]),t._v(" 会通过编译器将模板通过几个阶段最终编译为 "),n("code",[t._v("render")]),t._v(" 函数，然后通过执行 "),n("code",[t._v("render")]),t._v(" 函数生成 "),n("code",[t._v("Virtual DOM")]),t._v(" 最终映射为真实 "),n("code",[t._v("DOM")]),t._v("。")]),t._v(" "),n("li",[t._v("接下来我们就来学习这个编译的过程，了解这个过程中大概发生了什么事情。"),n("strong",[t._v("这个过程其中又分为三个阶段")]),t._v("，分别为：")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("ul",[n("li",[t._v("将模板解析为 "),n("code",[t._v("AST")])]),t._v(" "),n("li",[t._v("优化 "),n("code",[t._v("AST")])]),t._v(" "),n("li",[t._v("将 "),n("code",[t._v("AST")]),t._v("转换为 "),n("code",[t._v("render")]),t._v("函数")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在第一个阶段中，最主要的事情还是通过各种各样的正则表达式去匹配模板中的内容，然后将内容提取出来做各种逻辑操作，接下来会生成一个最基本的 "),s("code",[this._v("AST")]),this._v("对象")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类型")]),t._v("\n    type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标签")]),t._v("\n    tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 属性列表")]),t._v("\n    attrsList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" attrs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 属性映射")]),t._v("\n    attrsMap"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeAttrsMap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("attrs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 父节点")]),t._v("\n    parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子节点")]),t._v("\n    children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("然后会根据这个最基本的 AST 对象中的属性，进一步扩展 "),n("code",[t._v("AST")]),t._v("。")]),t._v(" "),n("li",[t._v("当然在这一阶段中，还会进行其他的一些判断逻辑。比如说对比前后开闭标签是否一致，判断根组件是否只存在一个，判断是否符合 "),n("code",[t._v("HTML5 Content Model")]),t._v("规范等等问题。")]),t._v(" "),n("li",[t._v("接下来就是优化 AST 的阶段。在当前版本下，"),n("code",[t._v("Vue")]),t._v(" 进行的优化内容其实还是不多的。只是对节点进行了静态内容提取，也就是将永远不会变动的节点提取了出来，实现复用 "),n("code",[t._v("Virtual DOM")]),t._v("，跳过对比算法的功能。在下一个大版本中，"),n("code",[t._v("Vue")]),t._v(" 会在优化 "),n("code",[t._v("AST")]),t._v(" 的阶段继续发力，实现更多的优化功能，尽可能的在编译阶段压榨更多的性能，比如说提取静态的属性等等优化行为。")]),t._v(" "),n("li",[t._v("最后一个阶段就是通过 "),n("code",[t._v("AST")]),t._v(" 生成 "),n("code",[t._v("render")]),t._v(" 函数了。其实这一阶段虽然分支有很多，但是最主要的目的就是遍历整个 "),n("code",[t._v("AST")]),t._v("，根据不同的条件生成不同的代码罢了。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"_28-9-3-nexttick-原理分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-9-3-nexttick-原理分析","aria-hidden":"true"}},[this._v("#")]),this._v(" 28.9.3 NextTick 原理分析")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("nextTick")]),this._v(" 可以让我们在下次 "),s("code",[this._v("DOM")]),this._v(" 更新循环结束之后执行延迟回调，用于获得更新后的 "),s("code",[this._v("DOM")]),this._v("。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("在 "),n("code",[t._v("Vue 2.4")]),t._v(" 之前都是使用的 "),n("code",[t._v("microtasks")]),t._v("，但是"),n("code",[t._v("microtasks")]),t._v(" 的优先级过高，在某些情况下可能会出现比事件冒泡更快的情况，但如果都使用 "),n("code",[t._v("macrotasks")]),t._v(" 又可能会出现渲染的性能问题。所以在新版本中，会默认使用 "),n("code",[t._v("microtasks")]),t._v("，但在特殊情况下会使用 "),n("code",[t._v("macrotasks")]),t._v("，比如 "),n("code",[t._v("v-on")]),t._v("。")]),t._v(" "),n("li",[t._v("对于实现 "),n("code",[t._v("macrotasks")]),t._v(" ，会先判断是否能使用 "),n("code",[t._v("setImmediate")]),t._v(" ，不能的话降级为 "),n("code",[t._v("MessageChannel")]),t._v(" ，以上都不行的话就使用 "),n("code",[t._v("setTimeout")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" setImmediate "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'undefined'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNative")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("setImmediate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("macroTimerFunc")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setImmediate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flushCallbacks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" MessageChannel "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'undefined'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNative")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MessageChannel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// PhantomJS")]),t._v("\n    MessageChannel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[object MessageChannelConstructor]'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" channel "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageChannel")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" port "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" channel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("port2\n  channel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("port1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onmessage "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" flushCallbacks\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("macroTimerFunc")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    port"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("postMessage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("macroTimerFunc")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flushCallbacks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("以上代码很简单，就是判断能不能使用相应的"),s("code",[this._v("API")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_29-react常考知识点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_29-react常考知识点","aria-hidden":"true"}},[this._v("#")]),this._v(" 29 React常考知识点")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_29-1-生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_29-1-生命周期","aria-hidden":"true"}},[this._v("#")]),this._v(" 29.1 生命周期")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("在 "),n("code",[t._v("V16")]),t._v(" 版本中引入了 "),n("code",[t._v("Fiber")]),t._v(" 机制。这个机制一定程度上的影响了部分生命周期的调用，并且也引入了新的 "),n("code",[t._v("2")]),t._v(" 个 "),n("code",[t._v("API")]),t._v(" 来解决问题")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("在之前的版本中，如果你拥有一个很复杂的复合组件，然后改动了最上层组件的 "),s("code",[this._v("state")]),this._v("，那么调用栈可能会很长")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/6/25/164358b0310f476c",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("调用栈过长，再加上中间进行了复杂的操作，就可能导致长时间阻塞主线程，带来不好的用户体验。"),s("code",[this._v("Fiber")]),this._v(" 就是为了解决该问题而生")]),this._v(" "),s("li",[s("code",[this._v("Fiber")]),this._v(" 本质上是一个虚拟的堆栈帧，新的调度器会按照优先级自由调度这些帧，从而将之前的同步渲染改成了异步渲染，在不影响体验的情况下去分段计算更新")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/6/25/164358f89595d56f",alt:""}})])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("对于如何区别优先级，"),n("code",[t._v("React")]),t._v(" 有自己的一套逻辑。对于动画这种实时性很高的东西，也就是 "),n("code",[t._v("16 ms")]),t._v(" 必须渲染一次保证不卡顿的情况下，"),n("code",[t._v("React")]),t._v(" 会每 "),n("code",[t._v("16 ms")]),t._v("（以内） 暂停一下更新，返回来继续渲染动画")]),t._v(" "),n("li",[t._v("对于异步渲染，现在渲染有两个阶段："),n("code",[t._v("reconciliation")]),t._v(" 和 "),n("code",[t._v("commit")]),t._v(" 。前者过程是可以打断的，后者不能暂停，会一直更新界面直到完成。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("1. Reconciliation 阶段")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v("componentWillMount")])]),this._v(" "),s("li",[s("code",[this._v("componentWillReceiveProps")])]),this._v(" "),s("li",[s("code",[this._v("shouldComponentUpdate")])]),this._v(" "),s("li",[s("code",[this._v("componentWillUpdate")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("2. Commit 阶段")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v("componentDidMount")])]),this._v(" "),s("li",[s("code",[this._v("componentDidUpdate")])]),this._v(" "),s("li",[s("code",[this._v("componentWillUnmount")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("因为 "),n("code",[t._v("Reconciliation")]),t._v(" 阶段是可以被打断的，所以 "),n("code",[t._v("Reconciliation")]),t._v(" 阶段会执行的生命周期函数就可能会出现调用多次的情况，从而引起 "),n("code",[t._v("Bug")]),t._v("。由此对于 "),n("code",[t._v("Reconciliation")]),t._v(" 阶段调用的几个函数，除了 "),n("code",[t._v("shouldComponentUpdate")]),t._v(" 以外，其他都应该避免去使用，并且 "),n("code",[t._v("V16")]),t._v(" 中也引入了新的 "),n("code",[t._v("API")]),t._v(" 来解决这个问题。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("getDerivedStateFromProps")]),this._v(" 用于替换 "),s("code",[this._v("componentWillReceiveProps")]),this._v(" ，该函数会在初始化和 "),s("code",[this._v("update")]),this._v(" 时被调用")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExampleComponent")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Initialize state in constructor,")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Or with a property initializer.")]),t._v("\n  state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDerivedStateFromProps")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prevState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prevState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someMirroredValue "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" nextProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        derivedData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("computeDerivedState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        someMirroredValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nextProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someValue\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Return null to indicate no change to state.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[n("code",[t._v("getSnapshotBeforeUpdate")]),t._v(" 用于替换 "),n("code",[t._v("componentWillUpdate")]),t._v(" ，该函数会在 "),n("code",[t._v("update")]),t._v(" 后 "),n("code",[t._v("DOM")]),t._v(" 更新前被调用，用于读取最新的 "),n("code",[t._v("DOM")]),t._v(" 数据")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("更多详情 http://blog.poetries.top/2018/11/18/react-lifecircle")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_29-2-setstate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_29-2-setstate","aria-hidden":"true"}},[this._v("#")]),this._v(" 29.2 setState")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("setState")]),t._v(" 在 "),n("code",[t._v("React")]),t._v(" 中是经常使用的一个 "),n("code",[t._v("API")]),t._v("，但是它存在一些的问题经常会导致初学者出错，核心原因就是因为这个 "),n("code",[t._v("API")]),t._v(" 是异步的。")]),t._v(" "),n("li",[t._v("首先  "),n("code",[t._v("setState")]),t._v("   的调用并不会马上引起   "),n("code",[t._v("state")]),t._v("  的改变，并且如果你一次调用了多个   "),n("code",[t._v("setState")]),t._v("   ，那么结果可能并不如你期待的一样。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化 `count` 为 0")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -> 0")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -> 0")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("第一，两次的打印都为 "),n("code",[t._v("0")]),t._v("，因为 "),n("code",[t._v("setState")]),t._v(" 是个异步 "),n("code",[t._v("API")]),t._v("，只有同步代码运行完毕才会执行。"),n("code",[t._v("setState")]),t._v(" 异步的原因我认为在于，"),n("code",[t._v("setState")]),t._v(" 可能会导致 "),n("code",[t._v("DOM")]),t._v(" 的重绘，如果调用一次就马上去进行重绘，那么调用多次就会造成不必要的性能损失。设计成异步的话，就可以将多次调用放入一个队列中，在恰当的时候统一进行更新过程。")]),t._v(" "),n("li",[t._v("第一，两次的打印都为 "),n("code",[t._v("0")]),t._v("，因为 "),n("code",[t._v("setState")]),t._v(" 是个异步 API，只有同步代码运行完毕才会执行。"),n("code",[t._v("setState")]),t._v(" 异步的原因我认为在于，"),n("code",[t._v("setState")]),t._v(" 可能会导致 "),n("code",[t._v("DOM")]),t._v(" 的重绘，如果调用一次就马上去进行重绘，那么调用多次就会造成不必要的性能损失。设计成异步的话，就可以将多次调用放入一个队列中，在恰当的时候统一进行更新过程。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("  \n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("当然你也可以通过以下方式来实现调用三次 "),s("code",[this._v("setState")]),this._v("使得 "),s("code",[this._v("count")]),this._v(" 为 "),s("code",[this._v("3")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prevState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" prevState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prevState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" prevState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prevState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" prevState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("如果你想在每次调用 "),s("code",[this._v("setState")]),this._v(" 后获得正确的 "),s("code",[this._v("state")]),this._v("，可以通过如下代码实现")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prevState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" prevState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("更多详情 http://blog.poetries.top/2018/12/20/react-setState")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_29-3-性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_29-3-性能优化","aria-hidden":"true"}},[this._v("#")]),this._v(" 29.3 性能优化")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("在 "),n("code",[t._v("shouldComponentUpdate")]),t._v(" 函数中我们可以通过返回布尔值来决定当前组件是否需要更新。这层代码逻辑可以是简单地浅比较一下当前 "),n("code",[t._v("state")]),t._v(" 和之前的 "),n("code",[t._v("state")]),t._v(" 是否相同，也可以是判断某个值更新了才触发组件更新。一般来说不推荐完整地对比当前 "),n("code",[t._v("state")]),t._v(" 和之前的 "),n("code",[t._v("state")]),t._v(" 是否相同，因为组件更新触发可能会很频繁，这样的完整对比性能开销会有点大，可能会造成得不偿失的情况。")]),t._v(" "),n("li",[t._v("当然如果真的想完整对比当前 "),n("code",[t._v("state")]),t._v(" 和之前的 "),n("code",[t._v("state")]),t._v(" 是否相同，并且不影响性能也是行得通的，可以通过 "),n("code",[t._v("immutable")]),t._v(" 或者 "),n("code",[t._v("immer")]),t._v(" 这些库来生成不可变对象。这类库对于操作大规模的数据来说会提升不错的性能，并且一旦改变数据就会生成一个新的对象，对比前后 "),n("code",[t._v("state")]),t._v(" 是否一致也就方便多了，同时也很推荐阅读下 "),n("code",[t._v("immer")]),t._v(" 的源码实现")]),t._v(" "),n("li",[t._v("另外如果只是单纯的浅比较一下，可以直接使用 "),n("code",[t._v("PureComponent")]),t._v("，底层就是实现了浅比较 "),n("code",[t._v("state")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PureComponent")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        PureComponent\n      "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("这时候你可能会考虑到函数组件就不能使用这种方式了，如果你使用 "),s("code",[this._v("16.6.0")]),this._v(" 之后的版本的话，可以使用 "),s("code",[this._v("React.memo")]),this._v(" 来实现相同的功能")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Test "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" React"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("memo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        PureComponent\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("通过这种方式我们就可以既实现了 "),s("code",[this._v("shouldComponentUpdate")]),this._v(" 的浅比较，又能够使用函数组件")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_29-4-通信"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_29-4-通信","aria-hidden":"true"}},[this._v("#")]),this._v(" 29.4 通信")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("1. 父子通信")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("父组件通过 "),n("code",[t._v("props")]),t._v(" 传递数据给子组件，子组件通过调用父组件传来的函数传递数据给父组件，这两种方式是最常用的父子通信实现办法。")]),t._v(" "),n("li",[t._v("这种父子通信方式也就是典型的单向数据流，父组件通过 "),n("code",[t._v("props")]),t._v(" 传递数据，子组件不能直接修改 "),n("code",[t._v("props")]),t._v("， 而是必须通过调用父组件函数的方式告知父组件修改数据。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("2. 兄弟组件通信")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("对于这种情况可以通过共同的父组件来管理状态和事件函数。比如说其中一个兄弟组件调用父组件传递过来的事件函数修改父组件中的状态，然后父组件将状态传递给另一个兄弟组件")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("3. 跨多层次组件通信")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("如果你使用 "),s("code",[this._v("16.3")]),this._v(" 以上版本的话，对于这种情况可以使用 "),s("code",[this._v("Context API")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建 Context，可以在开始就传入值")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" StateContext "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" React"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createContext")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// value 就是传入 Context 中的值")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("StateContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Provider value"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yck'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Child "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("StateContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Provider"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Child")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ThemeContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Consumer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 取出值")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("context "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n          name is "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" context "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ThemeContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Consumer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("4. 任意组件")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("这种方式可以通过 "),s("code",[this._v("Redux")]),this._v(" 或者 "),s("code",[this._v("Event Bus")]),this._v(" 解决，另外如果你不怕麻烦的话，可以使用这种方式解决上述所有的通信情况")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_30-监控"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_30-监控","aria-hidden":"true"}},[this._v("#")]),this._v(" 30 监控")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("更新中...")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_31-tcp-udp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_31-tcp-udp","aria-hidden":"true"}},[this._v("#")]),this._v(" 31 TCP/UDP")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_31-1-udp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_31-1-udp","aria-hidden":"true"}},[this._v("#")]),this._v(" 31.1 UDP")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("网络协议是每个前端工程师都必须要掌握的知识，我们将先来学习传输层中的两个协议："),s("code",[this._v("UDP")]),this._v(" 以及"),s("code",[this._v("TCP")]),this._v("。对于大部分工程师来说最常用的协议也就是这两个了，并且面试中经常会提问的也是关于这两个协议的区别")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("常考面试题："),s("code",[this._v("UDP")]),this._v(" 与 "),s("code",[this._v("TCP")]),this._v(" 的区别是什么？")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("首先 "),n("code",[t._v("UDP")]),t._v(" 协议是面向无连接的，也就是说不需要在正式传递数据之前先连接起双方。然后 "),n("code",[t._v("UDP")]),t._v("协议只是数据报文的搬运工，不保证有序且不丢失的传递到对端，并且"),n("code",[t._v("UDP")]),t._v(" 协议也没有任何控制流量的算法，总的来说 "),n("code",[t._v("UDP")]),t._v(" 相较于 "),n("code",[t._v("TCP")]),t._v(" 更加的轻便")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("1. 面向无连接")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("首先"),s("code",[this._v("UDP")]),this._v(" 是不需要和 "),s("code",[this._v("TCP")]),this._v(" 一样在发送数据前进行三次握手建立连接的，想发数据就可以开始发送了。")]),this._v(" "),s("li",[this._v("并且也只是数据报文的搬运工，不会对数据报文进行任何拆分和拼接操作。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("具体来说就是：")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("在发送端，应用层将数据传递给传输层的 "),n("code",[t._v("UDP")]),t._v(" 协议，"),n("code",[t._v("UDP")]),t._v(" 只会给数据增加一个 "),n("code",[t._v("UDP")]),t._v(" 头标识下是 "),n("code",[t._v("UDP")]),t._v(" 协议，然后就传递给网络层了\n在接收端，网络层将数据传递给传输层，"),n("code",[t._v("UDP")]),t._v(" 只去除 "),n("code",[t._v("IP")]),t._v(" 报文头就传递给应用层，不会任何拼接操作")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("2. 不可靠性")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("首先不可靠性体现在无连接上，通信都不需要建立连接，想发就发，这样的情况肯定不可靠。")]),t._v(" "),n("li",[t._v("并且收到什么数据就传递什么数据，并且也不会备份数据，发送数据也不会关心对方是否已经正确接收到数据了。")]),t._v(" "),n("li",[t._v("再者网络环境时好时坏，但是 "),n("code",[t._v("UDP")]),t._v(" 因为没有拥塞控制，一直会以恒定的速度发送数据。即使网络条件不好，也不会对发送速率进行调整。这样实现的弊端就是在网络条件不好的情况下可能会导致丢包，但是优点也很明显，在某些实时性要求高的场景（比如电话会议）就需要使用 "),n("code",[t._v("UDP")]),t._v(" 而不是 "),n("code",[t._v("TCP")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("3. 高效")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("虽然 "),n("code",[t._v("UDP")]),t._v(" 协议不是那么的可靠，但是正是因为它不是那么的可靠，所以也就没有 "),n("code",[t._v("TCP")]),t._v(" 那么复杂了，需要保证数据不丢失且有序到达。")]),t._v(" "),n("li",[t._v("因此 "),n("code",[t._v("UDP")]),t._v(" 的头部开销小，只有八字节，相比 "),n("code",[t._v("TCP")]),t._v(" 的至少二十字节要少得多，在传输数据报文时是很高效的。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/5/1/163195b245ceb89c",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("UDP")]),this._v(" 头部包含了以下几个数据")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("两个十六位的端口号，分别为源端口（可选字段）和目标端口\n整个数据报文的长度")]),this._v(" "),s("li",[this._v("整个数据报文的检验和（"),s("code",[this._v("IPv4")]),this._v(" 可选 字段），该字段用于发现头部信息和数据中的错误")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("4. 传输方式")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("UDP")]),this._v(" 不止支持一对一的传输方式，同样支持一对多，多对多，多对一的方式，也就是说 "),s("code",[this._v("UDP")]),this._v(" 提供了单播，多播，广播的功能。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("5. 适合使用的场景")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("UDP")]),this._v("虽然对比 "),s("code",[this._v("TCP")]),this._v(" 有很多缺点，但是正是因为这些缺点造就了它高效的特性，在很多实时性要求高的地方都可以看到 "),s("code",[this._v("UDP")]),this._v(" 的身影。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("5.1 直播")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("想必大家都看过直播吧，大家可以考虑下如果直播使用了基于 TCP 的协议会发生什么事情？")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("ul",[s("li",[s("code",[this._v("TCP")]),this._v(" 会严格控制传输的正确性，一旦有某一个数据对端没有收到，就会停止下来直到对端收到这个数据。这种问题在网络条件不错的情况下可能并不会发生什么事情，但是在网络情况差的时候就会变成画面卡住，然后再继续播放下一帧的情况。")]),this._v(" "),s("li",[this._v("但是对于直播来说，用户肯定关注的是最新的画面，而不是因为网络条件差而丢失的老旧画面，所以 "),s("code",[this._v("TCP")]),this._v(" 在这种情况下无用武之地，只会降低用户体验。")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("5.2 王者荣耀")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("首先对于王者荣耀来说，用户体量是相当大的，如果使用 "),n("code",[t._v("TCP")]),t._v(" 连接的话，就可能会出现服务器不够用的情况，因为每台服务器可供支撑的 "),n("code",[t._v("TCP")]),t._v(" 连接数量是有限制的。")]),t._v(" "),n("li",[t._v("再者，因为 "),n("code",[t._v("TCP")]),t._v(" 会严格控制传输的正确性，如果因为用户网络条件不好就造成页面卡顿然后再传输旧的游戏画面是肯定不能接受的，毕竟对于这类实时性要求很高的游戏来说，最新的游戏画面才是最需要的，而不是老旧的画面，否则角色都不知道死多少次了。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_31-2-tcp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_31-2-tcp","aria-hidden":"true"}},[this._v("#")]),this._v(" 31.2 TCP")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("常考面试题："),s("code",[this._v("UDP")]),this._v(" 与 "),s("code",[this._v("TCP")]),this._v(" 的区别是什么？")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("TCP")]),this._v(" 基本是和 "),s("code",[this._v("UDP")]),this._v(" 反着来，建立连接断开连接都需要先需要进行握手。在传输数据的过程中，通过各种算法保证数据的可靠性，当然带来的问题就是相比 "),s("code",[this._v("UDP")]),this._v(" 来说不那么的高效")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("1. 头部")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("从这个图上我们就可以发现 "),s("code",[this._v("TCP")]),this._v(" 头部比 "),s("code",[this._v("UDP")]),this._v(" 头部复杂的多")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/5/1/1631be45b084e4bc",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("对于 "),s("code",[this._v("TCP")]),this._v(" 头部来说，以下几个字段是很重要的")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("Sequence number")]),t._v("，这个序号保证了 TCP 传输的报文都是有序的，对端可以通过序号顺序的拼接报文")]),t._v(" "),n("li",[n("code",[t._v("Acknowledgement Number")]),t._v("，这个序号表示数据接收端期望接收的下一个字节的编号是多少，同时也表示上一个序号的数据已经收到")]),t._v(" "),n("li",[n("code",[t._v("Window Size")]),t._v("，窗口大小，表示还能接收多少字节的数据，用于流量控制")]),t._v(" "),n("li",[n("strong",[t._v("标识符")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("URG=1")]),t._v("：该字段为一表示本数据报的数据部分包含紧急信息，是一个高优先级数据报文，此时紧急指针有效。紧急数据一定位于当前数据包数据部分的最前面，紧急指针标明了紧急数据的尾部。")]),t._v(" "),n("li",[n("code",[t._v("ACK=1")]),t._v("：该字段为一表示确认号字段有效。此外，"),n("code",[t._v("TCP")]),t._v(" 还规定在连接建立后传送的所有报文段都必须把 "),n("code",[t._v("ACK")]),t._v(" 置为一。")]),t._v(" "),n("li",[n("code",[t._v("PSH=1")]),t._v("：该字段为一表示接收端应该立即将数据 "),n("code",[t._v("push")]),t._v(" 给应用层，而不是等到缓冲区满后再提交。")]),t._v(" "),n("li",[n("code",[t._v("RST=1")]),t._v("：该字段为一表示当前 "),n("code",[t._v("TCP")]),t._v(" 连接出现严重问题，可能需要重新建立 TCP 连接，也可以用于拒绝非法的报文段和拒绝连接请求。")]),t._v(" "),n("li",[n("code",[t._v("SYN=1")]),t._v("：当"),n("code",[t._v("SYN=1")]),t._v("，"),n("code",[t._v("ACK=0")]),t._v("时，表示当前报文段是一个连接请求报文。当  "),n("code",[t._v("SYN=1")]),t._v("，"),n("code",[t._v("ACK=1")]),t._v("时，表示当前报文段是一个同意建立连接的应答报文。")]),t._v(" "),n("li",[n("code",[t._v("FIN=1")]),t._v("：该字段为一表示此报文段是一个释放连接的请求报文。")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("2. 状态机")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("TCP")]),this._v(" 的状态机是很复杂的，并且与建立断开连接时的握手息息相关，接下来就来详细描述下两种握手")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/5/1/1631bef9e3c60035",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("在这之前需要了解一个重要的性能指标 "),s("code",[this._v("RTT")]),this._v("。该指标表示发送端发送数据到接收到对端数据所需的往返时间")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("2.1. 建立连接三次握手")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/5/1/1631bf1e79b3cd42",alt:""}})])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("首先假设主动发起请求的一端称为客户端，被动连接的一端称为服务端。不管是客户端还是服务端，"),n("code",[t._v("TCP")]),t._v(" 连接建立完后都能发送和接收数据，所以 "),n("code",[t._v("TCP")]),t._v(" 是一个全双工的协议。")]),t._v(" "),n("li",[t._v("起初，两端都为 "),n("code",[t._v("CLOSED")]),t._v(" 状态。在通信开始前，双方都会创建 "),n("code",[t._v("TCB")]),t._v("。 服务器创建完 "),n("code",[t._v("TCB")]),t._v(" 后便进入 "),n("code",[t._v("LISTEN")]),t._v(" 状态，此时开始等待客户端发送数据")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("第一次握手")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("客户端向服务端发送连接请求报文段。该报文段中包含自身的数据通讯初始序号。请求发送后，客户端便进入 "),s("code",[this._v("SYN-SENT")]),this._v(" 状态")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("第二次握手")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("服务端收到连接请求报文段后，如果同意连接，则会发送一个应答，该应答中也会包含自身的数据通讯初始序号，发送完成后便进入 "),s("code",[this._v("SYN-RECEIVED")]),this._v(" 状态")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("第三次握手")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("当客户端收到连接同意的应答后，还要向服务端发送一个确认报文。客户端发完这个报文段后便进入 "),n("code",[t._v("ESTABLISHED")]),t._v(" 状态，服务端收到这个应答后也进入 "),n("code",[t._v("ESTABLISHED")]),t._v(" 状态，此时连接建立成功。")]),t._v(" "),n("li",[t._v("PS：第三次握手中可以包含数据，通过快速打开（"),n("code",[t._v("TFO")]),t._v("）技术就可以实现这一功能。其实只要涉及到握手的协议，都可以使用类似 "),n("code",[t._v("TFO")]),t._v(" 的方式，客户端和服务端存储相同的 "),n("code",[t._v("cookie")]),t._v("，下次握手时发出 "),n("code",[t._v("cookie")]),t._v(" 达到减少 "),n("code",[t._v("RTT")]),t._v(" 的目的。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("常考面试题：为什么 "),s("code",[this._v("TCP")]),this._v(" 建立连接需要三次握手，明明两次就可以建立起连接")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("因为这是为了防止出现失效的连接请求报文段被服务端接收的情况，从而产生错误。")]),t._v(" "),n("li",[t._v("可以想象如下场景。客户端发送了一个连接请求 "),n("code",[t._v("A")]),t._v("，但是因为网络原因造成了超时，这时 "),n("code",[t._v("TCP")]),t._v(" 会启动超时重传的机制再次发送一个连接请求 "),n("code",[t._v("B")]),t._v("。此时请求顺利到达服务端，服务端应答完就建立了请求，然后接收数据后释放了连接。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[t._v("假设这时候连接请求 "),n("code",[t._v("A")]),t._v(" 在两端关闭后终于抵达了服务端，那么此时服务端会认为客户端又需要建立 "),n("code",[t._v("TCP")]),t._v(" 连接，从而应答了该请求并进入 "),n("code",[t._v("ESTABLISHED")]),t._v(" 状态。但是客户端其实是 "),n("code",[t._v("CLOSED")]),t._v(" 的状态，那么就会导致服务端一直等待，造成资源的浪费。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("PS：在建立连接中，任意一端掉线，"),s("code",[this._v("TCP")]),this._v(" 都会重发 "),s("code",[this._v("SYN")]),this._v(" 包，一般会重试五次，在建立连接中可能会遇到 "),s("code",[this._v("SYN Flood")]),this._v(" 攻击。遇到这种情况你可以选择调低重试次数或者干脆在不能处理的情况下拒绝请求")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("2.2. 断开链接四次握手")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/5/2/1631fb807f2c6c1b",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("TCP")]),this._v(" 是全双工的，在断开连接时两端都需要发送 "),s("code",[this._v("FIN")]),this._v(" 和 "),s("code",[this._v("ACK")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("第一次握手")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("若客户端 "),s("code",[this._v("A")]),this._v(" 认为数据发送完成，则它需要向服务端 "),s("code",[this._v("B")]),this._v(" 发送连接释放请求。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("第二次握手")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[n("code",[t._v("B")]),t._v(" 收到连接释放请求后，会告诉应用层要释放 "),n("code",[t._v("TCP")]),t._v(" 链接。然后会发送 "),n("code",[t._v("ACK")]),t._v(" 包，并进入 "),n("code",[t._v("CLOSE_WAIT")]),t._v("状态，此时表明 "),n("code",[t._v("A")]),t._v(" 到 "),n("code",[t._v("B")]),t._v(" 的连接已经释放，不再接收 "),n("code",[t._v("A")]),t._v(" 发的数据了。但是因为 "),n("code",[t._v("TCP")]),t._v(" 连接是双向的，所以 "),n("code",[t._v("B")]),t._v(" 仍旧可以发送数据给 "),n("code",[t._v("A")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("3. ARQ 协议")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("p",[n("code",[t._v("ARQ")]),t._v(" 协议也就是超时重传机制。通过确认和超时机制保证了数据的正确送达，"),n("code",[t._v("ARQ")]),t._v(" 协议包含停止等待 "),n("code",[t._v("ARQ")]),t._v(" 和连续 "),n("code",[t._v("ARQ")]),t._v(" 两种协议。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("停止等待 ARQ")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("正常传输过程")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("只要 A 向 B 发送一段报文，都要停止发送并启动一个定时器，等待对端回应，在定时器时间内接收到对端应答就取消定时器并发送下一段报文。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("报文丢失或出错")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("在报文传输的过程中可能会出现丢包。这时候超过定时器设定的时间就会再次发送丢失的数据直到对端响应，所以需要每次都备份发送的数据。")]),t._v(" "),n("li",[t._v("即使报文正常的传输到对端，也可能出现在传输过程中报文出错的问题。这时候对端会抛弃该报文并等待 "),n("code",[t._v("A")]),t._v(" 端重传。")]),t._v(" "),n("li",[t._v("PS：一般定时器设定的时间都会大于一个 "),n("code",[t._v("RTT")]),t._v(" 的平均时间。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("第三次握手")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("B")]),t._v(" 如果此时还有没发完的数据会继续发送，完毕后会向 "),n("code",[t._v("A")]),t._v(" 发送连接释放请求，然后 "),n("code",[t._v("B")]),t._v(" 便进入 "),n("code",[t._v("LAST-ACK")]),t._v(" 状态。")]),t._v(" "),n("li",[t._v("PS：通过延迟确认的技术（通常有时间限制，否则对方会误认为需要重传），可以将第二次和第三次握手合并，延迟 "),n("code",[t._v("ACK")]),t._v(" 包的发送。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("第四次握手")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("A 收到释放请求后，向 B 发送确认应答，此时 A 进入 TIME-WAIT 状态。该状态会持续 2MSL（最大段生存期，指报文段在网络中生存的时间，超时会被抛弃） 时间，若该时间段内没有 B 的重发请求的话，就进入 CLOSED 状态。当 B 收到确认应答后，也便进入 CLOSED 状态。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("为什么 A 要进入 TIME-WAIT 状态，等待 2MSL 时间后才进入 CLOSED 状态？")]),this._v(" "),s("li",[this._v("为了保证 B 能收到 A 的确认应答。若 A 发完确认应答后直接进入 CLOSED 状态，如果确认应答因为网络问题一直没有到达，那么会造成 B 不能正常关闭。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("ACK 超时或丢失")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("对端传输的应答也可能出现丢失或超时的情况。那么超过定时器时间 A 端照样会重传报文。这时候 B 端收到相同序号的报文会丢弃该报文并重传应答，直到 A 端发送下一个序号的报文。")]),this._v(" "),s("li",[this._v("在超时的情况下也可能出现应答很迟到达，这时 A 端会判断该序号是否已经接收过，如果接收过只需要丢弃应答即可。")]),this._v(" "),s("li",[this._v("从上面的描述中大家肯定可以发现这肯定不是一个高效的方式。假设在良好的网络环境中，每次发送数据都需要等待片刻肯定是不能接受的。那么既然我们不能接受这个不那么高效的协议，就来继续学习相对高效的协议吧。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("连续 ARQ")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("在连续 ARQ 中，发送端拥有一个发送窗口，可以在没有收到应答的情况下持续发送窗口内的数据，这样相比停止等待 ARQ 协议来说减少了等待时间，提高了效率。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("累计确认")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("连续 ARQ 中，接收端会持续不断收到报文。如果和停止等待 ARQ 中接收一个报文就发送一个应答一样，就太浪费资源了。通过累计确认，可以在收到多个报文以后统一回复一个应答报文。报文中的 ACK 标志位可以用来告诉发送端这个序号之前的数据已经全部接收到了，下次请发送这个序号后的数据。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("但是累计确认也有一个弊端。在连续接收报文时，可能会遇到接收到序号 5 的报文后，并未接收到序号 6 的报文，然而序号 7 以后的报文已经接收。遇到这种情况时，ACK 只能回复 6，这样就会造成发送端重复发送数据的情况")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("4. 滑动窗口")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("上面小节中讲到了发送窗口。在 "),s("code",[this._v("TCP")]),this._v(" 中，两端其实都维护着窗口：分别为发送端窗口和接收端窗口。")]),this._v(" "),s("li",[this._v("发送端窗口包含已发送但未收到应答的数据和可以发送但是未发送的数据。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/5/5/1632f25c587ffd54",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("发送端窗口是由接收窗口剩余大小决定的。接收方会把当前接收窗口的剩余大小写入应答报文，发送端收到应答后根据该值和当前网络拥塞情况设置发送窗口的大小，所以发送窗口的大小是不断变化的。")]),this._v(" "),s("li",[this._v("当发送端接收到应答报文后，会随之将窗口进行滑动")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/5/5/1632f25cca99c8f4",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("滑动窗口是一个很重要的概念，它帮助 TCP 实现了流量控制的功能。接收方通过报文告知发送方还可以发送多少数据，从而保证接收方能够来得及接收数据，防止出现接收方带宽已满，但是发送方还一直发送数据的情况")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("Zero 窗口")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("在发送报文的过程中，可能会遇到对端出现零窗口的情况。在该情况下，发送端会停止发送数据，并启动 "),s("code",[this._v("persistent timer")]),this._v(" 。该定时器会定时发送请求给对端，让对端告知窗口大小。在重试次数超过一定次数后，可能会中断 "),s("code",[this._v("TCP")]),this._v(" 链接")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("5. 拥塞处理")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("拥塞处理和流量控制不同，后者是作用于接收方，保证接收方来得及接受数据。而前者是作用于网络，防止过多的数据拥塞网络，避免出现网络负载过大的情况。")]),this._v(" "),s("li",[this._v("拥塞处理包括了四个算法，分别为：慢开始，拥塞避免，快速重传，快速恢复")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("慢开始算法")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("慢开始算法，顾名思义，就是在传输开始时将发送窗口慢慢指数级扩大，从而避免一开始就传输大量数据导致网络拥塞。想必大家都下载过资源，每当我们开始下载的时候都会发现下载速度是慢慢提升的，而不是一蹴而就直接拉满带宽")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("慢开始算法步骤具体如下")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("连接初始设置拥塞窗口（Congestion Window） 为 "),n("code",[t._v("1 MSS")]),t._v("（一个分段的最大数据量）")]),t._v(" "),n("li",[t._v("每过一个 "),n("code",[t._v("RTT")]),t._v(" 就将窗口大小乘二")]),t._v(" "),n("li",[t._v("指数级增长肯定不能没有限制的，所以有一个阈值限制，当窗口大小大于阈值时就会启动拥塞避免算法。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("拥塞避免算法")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("拥塞避免算法相比简单点，每过一个 "),s("code",[this._v("RTT")]),this._v(" 窗口大小只加一，这样能够避免指数级增长导致网络拥塞，慢慢将大小调整到最佳值。")]),this._v(" "),s("li",[this._v("在传输过程中可能定时器超时的情况，这时候 "),s("code",[this._v("TCP")]),this._v(" 会认为网络拥塞了，会马上进行以下步骤：")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("将阈值设为当前拥塞窗口的一半")]),this._v(" "),s("li",[this._v("将拥塞窗口设为 "),s("code",[this._v("1 MSS")])]),this._v(" "),s("li",[this._v("启动拥塞避免算法")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("快速重传")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("快速重传一般和快恢复一起出现。一旦接收端收到的报文出现失序的情况，接收端只会回复最后一个顺序正确的报文序号。如果发送端收到三个重复的 "),s("code",[this._v("ACK")]),this._v("，无需等待定时器超时而是直接启动快速重传算法。具体算法分为两种：")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("TCP Taho 实现如下")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("将阈值设为当前拥塞窗口的一半")]),t._v(" "),n("li",[t._v("将拥塞窗口设为 1 MSS")]),t._v(" "),n("li",[t._v("重新开始慢开始算法")]),t._v(" "),n("li",[n("code",[t._v("TCP Reno")]),t._v(" 实现如下")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("拥塞窗口减半")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("将阈值设为当前拥塞窗口")]),this._v(" "),s("li",[this._v("进入快恢复阶段（重发对端需要的包，一旦收到一个新的 ACK 答复就退出该阶段），这种方式在丢失多个包的情况下就不那么好了")]),this._v(" "),s("li",[this._v("使用拥塞避免算法")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("TCP New Ren 改进后的快恢复")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("TCP New Reno 算法改进了之前 TCP Reno 算法的缺陷。在之前，快恢复中只要收到一个新的 ACK 包，就会退出快恢复。")]),this._v(" "),s("li",[this._v("在 TCP New Reno 中，TCP 发送方先记下三个重复 ACK 的分段的最大序号。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("假如我有一个分段数据是 "),s("code",[this._v("1 ~ 10")]),this._v(" 这十个序号的报文，其中丢失了序号为 3 和 7 的报文，那么该分段的最大序号就是 10。发送端只会收到 ACK 序号为 3 的应答。这时候重发序号为 3 的报文，接收方顺利接收的话就会发送 ACK 序号为 7 的应答。这时候 TCP 知道对端是有多个包未收到，会继续发送序号为 7 的报文，接收方顺利接收并会发送 ACK 序号为 11 的应答，这时发送端认为这个分段接收端已经顺利接收，接下来会退出快恢复阶段。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_32-http-tls"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_32-http-tls","aria-hidden":"true"}},[this._v("#")]),this._v(" 32 HTTP/TLS")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_32-1-http-请求中的内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_32-1-http-请求中的内容","aria-hidden":"true"}},[this._v("#")]),this._v(" 32.1 HTTP 请求中的内容")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("HTTP")]),this._v(" 请求由三部分构成，分别为：")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("请求行")]),this._v(" "),s("li",[this._v("首部")]),this._v(" "),s("li",[this._v("实体")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("ul",[n("li",[t._v("请求行大概长这样 "),n("code",[t._v("GET /images/logo.gif HTTP/1.1")]),t._v("，基本由请求方法、"),n("code",[t._v("URL")]),t._v("、协议版本组成，这其中值得一说的就是请求方法了。")]),t._v(" "),n("li",[t._v("请求方法分为很多种，最常用的也就是 "),n("code",[t._v("Get")]),t._v(" 和 "),n("code",[t._v("Post")]),t._v(" 了。虽然请求方法有很多，但是更多的是传达一个语义，而不是说 "),n("code",[t._v("Post")]),t._v(" 能做的事情 "),n("code",[t._v("Get")]),t._v(" 就不能做了。如果你愿意，都使用 "),n("code",[t._v("Get")]),t._v(" 请求或者 "),n("code",[t._v("Post")]),t._v(" 请求都是可以的")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("常考面试题：Post 和 Get 的区别？")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("首先先引入副作用和幂等的概念。")]),this._v(" "),s("li",[this._v("副作用指对服务器上的资源做改变，搜索是无副作用的，注册是副作用的。")]),this._v(" "),s("li",[this._v("幂等指发送 M 和 N 次请求（两者不相同且都大于 1），服务器上资源的状态一致，比如注册 10 个和 11 个帐号是不幂等的，对文章进行更改 10 次和 11 次是幂等的。因为前者是多了一个账号（资源），后者只是更新同一个资源。")]),this._v(" "),s("li",[this._v("在规范的应用场景上说，Get 多用于无副作用，幂等的场景，例如搜索关键字。Post 多用于副作用，不幂等的场景，例如注册。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("ul",[n("li",[n("code",[t._v("Get")]),t._v(" 请求能缓存，"),n("code",[t._v("Post")]),t._v(" 不能")]),t._v(" "),n("li",[n("code",[t._v("Post")]),t._v(" 相对 "),n("code",[t._v("Get")]),t._v(" 安全一点点，因为"),n("code",[t._v("Get")]),t._v(" 请求都包含在 "),n("code",[t._v("URL")]),t._v(" 里（当然你想写到 "),n("code",[t._v("body")]),t._v(" 里也是可以的），且会被浏览器保存历史纪录。"),n("code",[t._v("Post")]),t._v(" 不会，但是在抓包的情况下都是一样的。")]),t._v(" "),n("li",[n("code",[t._v("URL")]),t._v("有长度限制，会影响 "),n("code",[t._v("Get")]),t._v(" 请求，但是这个长度限制是浏览器规定的，不是 "),n("code",[t._v("RFC")]),t._v(" 规定的")]),t._v(" "),n("li",[n("code",[t._v("Post")]),t._v(" 支持更多的编码类型且不对数据类型限制")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("1. 首部")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("首部分为请求首部和响应首部，并且部分首部两种通用，接下来我们就来学习一部分的常用首部。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("1.1 通用首部")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("table",[n("thead",[n("tr",[n("th",[t._v("通用字段")]),t._v(" "),n("th",[t._v("作用")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[n("code",[t._v("Cache-Control")])]),t._v(" "),n("td",[t._v("控制缓存的行为")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Connection")])]),t._v(" "),n("td",[t._v("浏览器想要优先使用的连接类型，比如 "),n("code",[t._v("keep-alive")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Date")])]),t._v(" "),n("td",[t._v("创建报文时间")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Pragma")])]),t._v(" "),n("td",[t._v("报文指令")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Via")])]),t._v(" "),n("td",[t._v("代理服务器相关信息")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Transfer-Encoding")])]),t._v(" "),n("td",[t._v("传输编码方式")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Upgrade")])]),t._v(" "),n("td",[t._v("要求客户端升级协议")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Warning")])]),t._v(" "),n("td",[t._v("在内容中可能存在错误")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("1.2 请求首部")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("table",[n("thead",[n("tr",[n("th",[t._v("请求首部")]),t._v(" "),n("th",[t._v("作用")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[n("code",[t._v("Accept")])]),t._v(" "),n("td",[t._v("能正确接收的媒体类型")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Accept-Charset")])]),t._v(" "),n("td",[t._v("能正确接收的字符集")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Accept-Encoding")])]),t._v(" "),n("td",[t._v("能正确接收的编码格式列表")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Accept-Language")])]),t._v(" "),n("td",[t._v("能正确接收的语言列表")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Expect")])]),t._v(" "),n("td",[t._v("期待服务端的指定行为")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("From")])]),t._v(" "),n("td",[t._v("请求方邮箱地址")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Host")])]),t._v(" "),n("td",[t._v("服务器的域名")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("If-Match")])]),t._v(" "),n("td",[t._v("两端资源标记比较")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("If-Modified-Since")])]),t._v(" "),n("td",[t._v("本地资源未修改返回 "),n("code",[t._v("304")]),t._v("（比较时间）")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("If-None-Match")])]),t._v(" "),n("td",[t._v("本地资源未修改返回 "),n("code",[t._v("304")]),t._v("（比较标记）")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("User-Agent")])]),t._v(" "),n("td",[t._v("客户端信息")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Max-Forwards")])]),t._v(" "),n("td",[t._v("限制可被代理及网关转发的次数")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Proxy-Authorization")])]),t._v(" "),n("td",[t._v("向代理服务器发送验证信息")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Range")])]),t._v(" "),n("td",[t._v("请求某个内容的一部分")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Referer")])]),t._v(" "),n("td",[t._v("表示浏览器所访问的前一个页面")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("TE")])]),t._v(" "),n("td",[t._v("传输编码方式")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("1.3 响应首部")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("table",[n("thead",[n("tr",[n("th",[t._v("响应首部")]),t._v(" "),n("th",[t._v("作用")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[n("code",[t._v("Accept-Ranges")])]),t._v(" "),n("td",[t._v("是否支持某些种类的范围")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Age")])]),t._v(" "),n("td",[t._v("资源在代理缓存中存在的时间")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("ETag")])]),t._v(" "),n("td",[t._v("资源标识")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Location")])]),t._v(" "),n("td",[t._v("客户端重定向到某个 "),n("code",[t._v("URL")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Proxy-Authenticate")])]),t._v(" "),n("td",[t._v("向代理服务器发送验证信息")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Server")])]),t._v(" "),n("td",[t._v("服务器名字")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("WWW-Authenticate")])]),t._v(" "),n("td",[t._v("获取资源需要的验证信息")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("1.4 实体首部")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("table",[n("thead",[n("tr",[n("th",[t._v("实体首部")]),t._v(" "),n("th",[t._v("作用")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[n("code",[t._v("Allow")])]),t._v(" "),n("td",[t._v("资源的正确请求方式")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Content-Encoding")])]),t._v(" "),n("td",[t._v("内容的编码格式")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Content-Language")])]),t._v(" "),n("td",[t._v("内容使用的语言")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Content-Length")])]),t._v(" "),n("td",[n("code",[t._v("request body")]),t._v(" 长度")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Content-Location")])]),t._v(" "),n("td",[t._v("返回数据的备用地址")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Content-MD5")])]),t._v(" "),n("td",[n("code",[t._v("Base64")]),t._v("加密格式的内容 "),n("code",[t._v("MD5")]),t._v("检验值")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Content-Range")])]),t._v(" "),n("td",[t._v("内容的位置范围")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Content-Type")])]),t._v(" "),n("td",[t._v("内容的媒体类型")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Expires")])]),t._v(" "),n("td",[t._v("内容的过期时间")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Last_modified")])]),t._v(" "),n("td",[t._v("内容的最后修改时间")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("2. 常见状态码")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("状态码表示了响应的一个状态，可以让我们清晰的了解到这一次请求是成功还是失败，如果失败的话，是什么原因导致的，当然状态码也是用于传达语义的。如果胡乱使用状态码，那么它存在的意义就没有了")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("2XX 成功")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("200 OK")]),t._v("，表示从客户端发来的请求在服务器端被正确处理")]),t._v(" "),n("li",[n("code",[t._v("204 No content")]),t._v("，表示请求成功，但响应报文不含实体的主体部分")]),t._v(" "),n("li",[n("code",[t._v("205 Reset Content")]),t._v("，表示请求成功，但响应报文不含实体的主体部分，但是与 "),n("code",[t._v("204")]),t._v(" 响应不同在于要求请求方重置内容")]),t._v(" "),n("li",[n("code",[t._v("206 Partial Content")]),t._v("，进行范围请求")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("3XX 重定向")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("301 moved permanently")]),t._v("，永久性重定向，表示资源已被分配了新的 URL")]),t._v(" "),n("li",[n("code",[t._v("302 found")]),t._v("，临时性重定向，表示资源临时被分配了新的 "),n("code",[t._v("URL")])]),t._v(" "),n("li",[n("code",[t._v("303 see other")]),t._v("，表示资源存在着另一个 "),n("code",[t._v("URL")]),t._v("，应使用 "),n("code",[t._v("GET")]),t._v(" 方法获取资源")]),t._v(" "),n("li",[n("code",[t._v("304 not modified")]),t._v("，表示服务器允许访问资源，但因发生请求未满足条件的情况")]),t._v(" "),n("li",[n("code",[t._v("307 temporary redirect")]),t._v("，临时重定向，和"),n("code",[t._v("302")]),t._v("含义类似，但是期望客户端保持请求方法不变向新的地址发出请求")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("4XX 客户端错误")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("400 bad request")]),t._v("，请求报文存在语法错误")]),t._v(" "),n("li",[n("code",[t._v("401 unauthorized")]),t._v("，表示发送的请求需要有通过 HTTP 认证的认证信息")]),t._v(" "),n("li",[n("code",[t._v("403 forbidden")]),t._v("，表示对请求资源的访问被服务器拒绝")]),t._v(" "),n("li",[n("code",[t._v("404 not found")]),t._v("，表示在服务器上没有找到请求的资源")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("5XX 服务器错误")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("500 internal sever error")]),t._v("，表示服务器端在执行请求时发生了错误")]),t._v(" "),n("li",[n("code",[t._v("501 Not Implemented")]),t._v("，表示服务器不支持当前请求所需要的某个功能")]),t._v(" "),n("li",[n("code",[t._v("503 service unavailable")]),t._v("，表明服务器暂时处于超负载或正在停机维护，无法处理请求")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_32-2-tls"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_32-2-tls","aria-hidden":"true"}},[this._v("#")]),this._v(" 32.2 TLS")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("HTTPS")]),t._v(" 还是通过了 "),n("code",[t._v("HTTP")]),t._v(" 来传输信息，但是信息通过 "),n("code",[t._v("TLS")]),t._v(" 协议进行了加密。")]),t._v(" "),n("li",[n("code",[t._v("TLS")]),t._v(" 协议位于传输层之上，应用层之下。首次进行 "),n("code",[t._v("TLS")]),t._v(" 协议传输需要两个 "),n("code",[t._v("RTT")]),t._v(" ，接下来可以通过 "),n("code",[t._v("Session Resumption")]),t._v(" 减少到一个 "),n("code",[t._v("RTT")]),t._v("。")]),t._v(" "),n("li",[t._v("在 "),n("code",[t._v("TLS")]),t._v(" 中使用了两种加密技术，分别为：对称加密和非对称加密。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("对称加密")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("对称加密就是两边拥有相同的秘钥，两边都知道如何将密文加密解密。")]),this._v(" "),s("li",[this._v("这种加密方式固然很好，但是问题就在于如何让双方知道秘钥。因为传输数据都是走的网络，如果将秘钥通过网络的方式传递的话，一旦秘钥被截获就没有加密的意义的。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("非对称加密")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("有公钥私钥之分，公钥所有人都可以知道，可以将数据用公钥加密，但是将数据解密必须使用私钥解密，私钥只有分发公钥的一方才知道。")]),this._v(" "),s("li",[this._v("这种加密方式就可以完美解决对称加密存在的问题。假设现在两端需要使用对称加密，那么在这之前，可以先使用非对称加密交换秘钥。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("简单流程如下：首先服务端将公钥公布出去，那么客户端也就知道公钥了。接下来客户端创建一个秘钥，然后通过公钥加密并发送给服务端，服务端接收到密文以后通过私钥解密出正确的秘钥，这时候两端就都知道秘钥是什么了。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/5/12/1635260126b3a10c",alt:""}})])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("客户端发送一个随机值以及需要的协议和加密方式。")]),t._v(" "),n("li",[t._v("服务端收到客户端的随机值，自己也产生一个随机值，并根据客户端需求的协议和加密方式来使用对应的方式，并且发送自己的证书（如果需要验证客户端证书需要说明）")]),t._v(" "),n("li",[t._v("客户端收到服务端的证书并验证是否有效，验证通过会再生成一个随机值，通过服务端证书的公钥去加密这个随机值并发送给服务端，如果服务端需要验证客户端证书的话会附带证书")]),t._v(" "),n("li",[t._v("服务端收到加密过的随机值并使用私钥解密获得第三个随机值，这时候两端都拥有了三个随机值，可以通过这三个随机值按照之前约定的加密方式生成密钥，接下来的通信就可以通过该密钥来加密解密")]),t._v(" "),n("li",[t._v("通过以上步骤可知，在 TLS 握手阶段，两端使用非对称加密的方式来通信，但是因为非对称加密损耗的性能比对称加密大，所以在正式传输数据时，两端使用对称加密的方式通信。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("PS：以上说明的都是 "),s("code",[this._v("TLS 1.2")]),this._v(" 协议的握手情况，在 1.3 协议中，首次建立连接只需要一个 RTT，后面恢复连接不需要 RTT 了")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_33-http2-0"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_33-http2-0","aria-hidden":"true"}},[this._v("#")]),this._v(" 33 HTTP2.0")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("ul",[n("li",[n("code",[t._v("HTTP/2")]),t._v(" 很好的解决了当下最常用的 "),n("code",[t._v("HTTP/1")]),t._v(" 所存在的一些性能问题，只需要升级到该协议就可以减少很多之前需要做的性能优化工作，当然兼容问题以及如何优雅降级应该是国内还不普遍使用的原因之一。")]),t._v(" "),n("li",[t._v("虽然 "),n("code",[t._v("HTTP/2")]),t._v(" 已经解决了很多问题，但是并不代表它已经是完美的了，"),n("code",[t._v("HTTP/3")]),t._v(" 就是为了解决 "),n("code",[t._v("HTTP/2")]),t._v(" 所存在的一些问题而被推出来的。")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_33-1-http-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_33-1-http-2","aria-hidden":"true"}},[this._v("#")]),this._v(" 33.1 HTTP/2")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("HTTP/2")]),t._v(" 相比于 "),n("code",[t._v("HTTP/1")]),t._v("，可以说是大幅度提高了网页的性能。")]),t._v(" "),n("li",[t._v("在 "),n("code",[t._v("HTTP/1")]),t._v(" 中，为了性能考虑，我们会引入雪碧图、将小图内联、使用多个域名等等的方式。这一切都是因为浏览器限制了同一个域名下的请求数量（Chrome 下一般是限制六个连接），当页面中需要请求很多资源的时候，队头阻塞（Head of line blocking）会导致在达到最大请求数量时，剩余的资源需要等待其他资源请求完成后才能发起请求。")]),t._v(" "),n("li",[t._v("在 "),n("code",[t._v("HTTP/2")]),t._v(" 中引入了多路复用的技术，这个技术可以只通过一个 "),n("code",[t._v("TCP")]),t._v(" 连接就可以传输所有的请求数据。多路复用很好的解决了浏览器限制同一个域名下的请求数量的问题，同时也接更容易实现全速传输，毕竟新开一个 "),n("code",[t._v("TCP")]),t._v(" 连接都需要慢慢提升传输速度。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/5/12/163542ca61eaff17",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("在 "),s("code",[this._v("HTTP/1")]),this._v(" 中，因为队头阻塞的原因，你会发现发送请求是长这样的")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/5/12/163542c96df8563d",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("在 "),s("code",[this._v("HTTP/2")]),this._v(" 中，因为可以复用同一个 "),s("code",[this._v("TCP")]),this._v(" 连接，你会发现发送请求是长这样的")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/5/12/163542c9d3128c7a",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_33-2-二进制传输"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_33-2-二进制传输","aria-hidden":"true"}},[this._v("#")]),this._v(" 33.2 二进制传输")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("HTTP/2")]),this._v(" 中所有加强性能的核心点在于此。在之前的 "),s("code",[this._v("HTTP")]),this._v(" 版本中，我们是通过文本的方式传输数据。在 "),s("code",[this._v("HTTP/2")]),this._v(" 中引入了新的编码机制，所有传输的数据都会被分割，并采用二进制格式编码。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/5/12/163543c25e5e9f23",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_33-3-多路复用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_33-3-多路复用","aria-hidden":"true"}},[this._v("#")]),this._v(" 33.3 多路复用")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("在 "),n("code",[t._v("HTTP/2")]),t._v(" 中，有两个非常重要的概念，分别是帧（frame）和流（stream）。")]),t._v(" "),n("li",[t._v("帧代表着最小的数据单位，每个帧会标识出该帧属于哪个流，流也就是多个帧组成的数据流。")]),t._v(" "),n("li",[t._v("多路复用，就是在一个 "),n("code",[t._v("TCP")]),t._v(" 连接中可以存在多条流。换句话说，也就是可以发送多个请求，对端可以通过帧中的标识知道属于哪个请求。通过这个技术，可以避免 "),n("code",[t._v("HTTP")]),t._v(" 旧版本中的队头阻塞问题，极大的提高传输性能。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/5/12/1635442531d3e5ee",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_33-4-header-压缩"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_33-4-header-压缩","aria-hidden":"true"}},[this._v("#")]),this._v(" 33.4 Header 压缩")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("在 "),n("code",[t._v("HTTP/1")]),t._v(" 中，我们使用文本的形式传输 "),n("code",[t._v("header")]),t._v("，在 "),n("code",[t._v("header")]),t._v(" 携带 cookie 的情况下，可能每次都需要重复传输几百到几千的字节。")]),t._v(" "),n("li",[t._v("在 "),n("code",[t._v("HTTP / 2")]),t._v("中，使用了 "),n("code",[t._v("HPACK")]),t._v(" 压缩格式对传输的 "),n("code",[t._v("header")]),t._v(" 进行编码，减少了 "),n("code",[t._v("header")]),t._v(" 的大小。并在两端维护了索引表，用于记录出现过的 "),n("code",[t._v("header")]),t._v(" ，后面在传输过程中就可以传输已经记录过的 "),n("code",[t._v("header")]),t._v(" 的键名，对端收到数据后就可以通过键名找到对应的值。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_33-5-服务端-push"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_33-5-服务端-push","aria-hidden":"true"}},[this._v("#")]),this._v(" 33.5 服务端 Push")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("在 "),n("code",[t._v("HTTP/2")]),t._v(" 中，服务端可以在客户端某个请求后，主动推送其他资源。")]),t._v(" "),n("li",[t._v("可以想象以下情况，某些资源客户端是一定会请求的，这时就可以采取服务端 "),n("code",[t._v("push")]),t._v(" 的技术，提前给客户端推送必要的资源，这样就可以相对减少一点延迟时间。当然在浏览器兼容的情况下你也可以使用 "),n("code",[t._v("prefetch")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_33-6-http-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_33-6-http-3","aria-hidden":"true"}},[this._v("#")]),this._v(" 33.6  HTTP/3")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("虽然 "),n("code",[t._v("HTTP/2")]),t._v(" 解决了很多之前旧版本的问题，但是它还是存在一个巨大的问题，虽然这个问题并不是它本身造成的，而是底层支撑的 "),n("code",[t._v("TCP")]),t._v(" 协议的问题。")]),t._v(" "),n("li",[t._v("因为 "),n("code",[t._v("HTTP/2")]),t._v(" 使用了多路复用，一般来说同一域名下只需要使用一个 "),n("code",[t._v("TCP")]),t._v(" 连接。当这个连接中出现了丢包的情况，那就会导致 "),n("code",[t._v("HTTP/2")]),t._v(" 的表现情况反倒不如 "),n("code",[t._v("HTTP/1")]),t._v(" 了。")]),t._v(" "),n("li",[t._v("因为在出现丢包的情况下，整个 "),n("code",[t._v("TCP")]),t._v(" 都要开始等待重传，也就导致了后面的所有数据都被阻塞了。但是对于 "),n("code",[t._v("HTTP/1")]),t._v(" 来说，可以开启多个 "),n("code",[t._v("TCP")]),t._v(" 连接，出现这种情况反到只会影响其中一个连接，剩余的 "),n("code",[t._v("TCP")]),t._v(" 连接还可以正常传输数据。")]),t._v(" "),n("li",[t._v("那么可能就会有人考虑到去修改 TCP 协议，其实这已经是一件不可能完成的任务了。因为 TCP 存在的时间实在太长，已经充斥在各种设备中，并且这个协议是由操作系统实现的，更新起来不大现实。")]),t._v(" "),n("li",[t._v("基于这个原因，Google 就更起炉灶搞了一个基于 "),n("code",[t._v("UDP")]),t._v(" 协议的 "),n("code",[t._v("QUIC")]),t._v(" 协议，并且使用在了 "),n("code",[t._v("HTTP/3")]),t._v(" 上，当然 "),n("code",[t._v("HTTP/3")]),t._v(" 之前名为 "),n("code",[t._v("HTTP-over-QUIC")]),t._v("，从这个名字中我们也可以发现，HTTP/3 最大的改造就是使用了 "),n("code",[t._v("QUIC")]),t._v("，接下来我们就来学习关于这个协议的内容。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("QUIC")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("之前我们学习过 UDP 协议的内容，知道这个协议虽然效率很高，但是并不是那么的可靠。QUIC 虽然基于 UDP，但是在原本的基础上新增了很多功能，比如多路复用、0-RTT、使用 TLS1.3 加密、流量控制、有序交付、重传等等功能。这里我们就挑选几个重要的功能学习下这个协议的内容。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("多路复用")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("虽然 HTTP/2 支持了多路复用，但是 TCP 协议终究是没有这个功能的。QUIC 原生就实现了这个功能，并且传输的单个数据流可以保证有序交付且不会影响其他的数据流，这样的技术就解决了之前 TCP 存在的问题。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("并且 "),n("code",[t._v("QUIC")]),t._v(" 在移动端的表现也会比 "),n("code",[t._v("TCP")]),t._v(" 好。因为 "),n("code",[t._v("TCP")]),t._v(" 是基于 "),n("code",[t._v("IP")]),t._v(" 和端口去识别连接的，这种方式在多变的移动端网络环境下是很脆弱的。但是 "),n("code",[t._v("QUIC")]),t._v(" 是通过 "),n("code",[t._v("ID")]),t._v("** 的方式去识别一个连接，不管你网络环境如何变化，只要 "),n("code",[t._v("ID")]),t._v(" 不变，就能迅速重连上。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("0-RTT")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("通过使用类似 TCP 快速打开的技术，缓存当前会话的上下文，在下次恢复会话的时候，只需要将之前的缓存传递给服务端验证通过就可以进行传输了。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("纠错机制")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("假如说这次我要发送三个包，那么协议会算出这三个包的异或值并单独发出一个校验包，也就是总共发出了四个包。")]),this._v(" "),s("li",[this._v("当出现其中的非校验包丢包的情况时，可以通过另外三个包计算出丢失的数据包的内容。")]),this._v(" "),s("li",[this._v("当然这种技术只能使用在丢失一个包的情况下，如果出现丢失多个包就不能使用纠错机制了，只能使用重传的方式了")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_34-设计模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_34-设计模式","aria-hidden":"true"}},[this._v("#")]),this._v(" 34 设计模式")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("更新中...")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_35-常见数据结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_35-常见数据结构","aria-hidden":"true"}},[this._v("#")]),this._v(" 35 常见数据结构")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("更新中...")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_37-常考算法题解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_37-常考算法题解析","aria-hidden":"true"}},[this._v("#")]),this._v(" 37 常考算法题解析")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("更新中...")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_38-css常考面试题解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_38-css常考面试题解析","aria-hidden":"true"}},[this._v("#")]),this._v(" 38 css常考面试题解析")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("更新中...")])])}],!1,null,null,null);s.default=r.exports}}]);